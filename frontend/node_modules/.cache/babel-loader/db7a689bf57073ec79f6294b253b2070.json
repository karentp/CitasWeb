{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst organizationURL = process.env.REACT_APP_API_URL + '/api/private/organization';\nexport const getOrganizations = async id => {\n  id = id || '';\n\n  try {\n    return await axios.get(`${organizationURL}/${id}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addOrganization = async organizations => {\n  try {\n    return await axios.post(`${organizationURL}/`, organizations, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const deleteOrganization = async id => {\n  try {\n    return await axios.delete(`${organizationURL}/${id}`, config);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    throw Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n  }\n};\nexport const editOrganization = async (id, organizations) => {\n  try {\n    return await axios.patch(`${organizationURL}/${id}`, organizations, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};","map":{"version":3,"sources":["/Users/karentovar/Documents/SCYTO/frontend/src/services/organizationService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","organizationURL","process","env","REACT_APP_API_URL","getOrganizations","id","get","error","TypeError","addOrganization","organizations","post","deleteOrganization","delete","Error","response","data","editOrganization","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD;AADE,CAAf;AAMA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,2BAAxD;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AAC1CA,EAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;;AACA,MAAG;AACC,WAAO,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEN,eAAgB,IAAGK,EAAG,EAAnC,EAAsCV,MAAtC,CAAb;AACH,GAFD,CAGA,OAAMY,KAAN,EAAY;AACR,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,eAAe,GAAG,MAAOC,aAAP,IAAyB;AACpD,MAAG;AACC,WAAO,MAAMhB,KAAK,CAACiB,IAAN,CAAY,GAAEX,eAAgB,GAA9B,EAAkCU,aAAlC,EAAiDf,MAAjD,CAAb;AACH,GAFD,CAEC,OAAMY,KAAN,EAAY;AACT,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAG,MAAOP,EAAP,IAAc;AAC5C,MAAG;AACC,WAAO,MAAMX,KAAK,CAACmB,MAAN,CAAc,GAAEb,eAAgB,IAAGK,EAAG,EAAtC,EAAyCV,MAAzC,CAAb;AACH,GAFD,CAEC,OAAMY,KAAN,EAAY;AAAA;;AACT,UAAMO,KAAK,CAACP,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEQ,QAAR,4EAAC,gBAAiBC,IAAlB,yDAAC,qBAAuBT,KAAxB,CAAX;AACH;AACJ,CANM;AAQP,OAAO,MAAMU,gBAAgB,GAAG,OAAOZ,EAAP,EAAWK,aAAX,KAA6B;AACzD,MAAG;AACC,WAAO,MAAMhB,KAAK,CAACwB,KAAN,CAAa,GAAElB,eAAgB,IAAGK,EAAG,EAArC,EAAwCK,aAAxC,EAAuDf,MAAvD,CAAb;AACH,GAFD,CAEC,OAAMY,KAAN,EAAY;AACT,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM","sourcesContent":["import axios from 'axios';\n\nconst config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n    }\n  };\nconst organizationURL = process.env.REACT_APP_API_URL + '/api/private/organization';\n\n\nexport const getOrganizations = async (id) => {\n    id = id || '';\n    try{\n        return await axios.get(`${organizationURL}/${id}`, config);\n    }    \n    catch(error){\n        return new TypeError(\"Authentication failed!\");\n    }\n}\n\nexport const addOrganization = async (organizations) => {\n    try{\n        return await axios.post(`${organizationURL}/`, organizations, config);\n    }catch(error){\n        return new TypeError(\"Authentication failed!\");\n    }\n}\n\nexport const deleteOrganization = async (id) => {\n    try{\n        return await axios.delete(`${organizationURL}/${id}`, config);\n    }catch(error){\n        throw Error(error?.response?.data?.error);\n    }\n}\n\nexport const editOrganization = async (id, organizations) => {\n    try{\n        return await axios.patch(`${organizationURL}/${id}`, organizations, config)\n    }catch(error){\n        return new TypeError(\"Authentication failed!\");\n    }\n}\n"]},"metadata":{},"sourceType":"module"}