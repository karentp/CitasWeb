{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/WebCitas/frontend/src/pages/User/AssignPermission.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport AlertMessage from '../../components/AlertMessage';\nimport { getUsers } from '../../services/userService';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Modal from '@mui/material/Modal';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: '50px 0 0 0',\n    width: '90%',\n    padding: theme.spacing(3)\n  },\n  divContent: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    minWidth: 400\n  },\n  programholder: {\n    height: 40,\n    textAlign: 'center',\n    width: '90%'\n  },\n  sizeAvatar: {\n    height: \"150px\",\n    width: \"150px\",\n    marginBottom: \"25px\"\n  },\n  imageButton: {\n    marginBottom: \"25px\"\n  },\n  center: {\n    display: 'flex',\n    textAlign: 'center'\n  }\n}));\nconst initialValues = {\n  roles: \"\"\n};\nexport default function AssignPermission(props) {\n  _s();\n\n  const inputRef = /*#__PURE__*/React.createRef();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = useState('');\n  const [isEmpty, setIsEmpty] = React.useState(true);\n  const {\n    userId,\n    openM,\n    onClose,\n    ...other\n  } = props;\n\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n  };\n\n  useEffect(async () => {\n    let unmounted = false;\n\n    if (userId && openM) {\n      let response = await getUsers(userId);\n      setValues(response.data.user.roles);\n    } else {\n      setIsEmpty(true);\n      setRoleValue(undefined);\n      setInputValue('');\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, [userId, openM]);\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialValues, false, validate);\n\n  function fixRoles(role) {\n    for (const roleIndex in values) {\n      if (values[roleIndex].projectId === role.projectId) {\n        let temp = values;\n        temp[roleIndex] = role;\n        return temp;\n      }\n    }\n  }\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n\n  const handleSubmit = async e => {\n    try {\n      if (isEmpty) {\n        throw new Error(\"Por favor seleccione un proyecto\");\n      } else {\n        setOpen(true);\n        const newRoles = fixRoles(roleValue);\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/private/userRole/${userId}`, {\n          roles: newRoles\n        }, config);\n        let responseGet = await getUsers(userId);\n        setValues(responseGet.data.user.roles);\n        setTimeout(() => {\n          setOpen(false);\n        }, 2000);\n      }\n    } catch (error) {\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }, 5000);\n      setLoading(false);\n      return setError(error.message);\n    }\n  };\n\n  const [roleValue, setRoleValue] = React.useState(values[0]);\n  const [inputValue, setInputValue] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: openM,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divContent,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n          errorMessage: error,\n          successMessage: \"Se ha asignado los permisos!\",\n          openMessage: open\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              marginTop: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: roleValue,\n              onChange: (event, newValue) => {\n                if (newValue) {\n                  setRoleValue(newValue);\n                }\n              },\n              className: classes.center,\n              id: \"combo-box-programs\",\n              options: values,\n              getOptionLabel: option => option.projectName,\n              style: {\n                width: 300,\n                justifyContent: \"center\"\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Proyectos\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 58\n              }, this),\n              inputValue: inputValue,\n              onInputChange: (event, newInputValue) => {\n                setInputValue(newInputValue);\n\n                if (newInputValue === '') {\n                  setIsEmpty(true);\n                  setRoleValue(undefined);\n                } else setIsEmpty(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n              name: \"export\",\n              label: \"Exportar CSV\",\n              value: roleValue ? roleValue.export : false,\n              onChange: () => {\n                if (roleValue) setRoleValue({ ...roleValue,\n                  [\"export\"]: !roleValue.export\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n              name: \"editFactor\",\n              label: \"Editar factores\",\n              value: roleValue ? roleValue.editFactor : false,\n              onChange: () => {\n                if (roleValue) setRoleValue({ ...roleValue,\n                  [\"editFactor\"]: !roleValue.editFactor\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n              name: \"editData\",\n              label: \"Editar datos\",\n              value: roleValue ? roleValue.editData : false,\n              onChange: () => {\n                if (roleValue) setRoleValue({ ...roleValue,\n                  [\"editData\"]: !roleValue.editData\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              marginTop: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n                text: \"Guardar\",\n                onClick: handleSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AssignPermission, \"Iftkxxmc+8RqoVBFrQQIxW+uFpg=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AssignPermission;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignPermission\");","map":{"version":3,"sources":["/Users/karentovar/Documents/WebCitas/frontend/src/pages/User/AssignPermission.js"],"names":["React","useState","useEffect","Grid","Controls","useForm","Form","Paper","makeStyles","Box","AlertMessage","getUsers","Autocomplete","TextField","Modal","axios","useStyles","theme","pageContent","margin","width","padding","spacing","divContent","position","top","left","transform","minWidth","programholder","height","textAlign","sizeAvatar","marginBottom","imageButton","center","display","initialValues","roles","AssignPermission","props","inputRef","createRef","classes","loading","setLoading","open","setOpen","error","setError","isEmpty","setIsEmpty","userId","openM","onClose","other","validate","fieldValues","values","unmounted","response","setValues","data","user","setRoleValue","undefined","setInputValue","errors","setErrors","handleInputChange","resetForm","fixRoles","role","roleIndex","projectId","temp","config","headers","Authorization","localStorage","getItem","handleSubmit","e","Error","newRoles","roleValue","post","process","env","REACT_APP_API_URL","responseGet","setTimeout","message","inputValue","marginTop","event","newValue","option","projectName","justifyContent","params","newInputValue","export","editFactor","editData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport { Paper, makeStyles, Box } from '@material-ui/core';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport { getUsers } from '../../services/userService';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Modal from '@mui/material/Modal';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '90%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    divContent: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        minWidth: 400,\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    imageButton: {\r\n        marginBottom: \"25px\"\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        textAlign: 'center'\r\n      },\r\n}))\r\n\r\nconst initialValues = {\r\n    roles: \"\",\r\n}\r\n\r\nexport default function AssignPermission(props) {\r\n    const inputRef = React.createRef();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [isEmpty, setIsEmpty] = React.useState(true);\r\n    const { userId, openM, onClose, ...other } = props;\r\n    const validate = (fieldValues = values) => {\r\n    }\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        if (userId && openM) {\r\n            let response = await getUsers(userId);\r\n            setValues(response.data.user.roles);\r\n        }else{\r\n            setIsEmpty(true);\r\n            setRoleValue(undefined);\r\n            setInputValue('');\r\n        }\r\n        return () => { unmounted = true; };\r\n    }, [userId, openM]);\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, false, validate);\r\n\r\n    function fixRoles (role){\r\n        for (const roleIndex in values) {\r\n            if (values[roleIndex].projectId === role.projectId){\r\n                let temp = values;\r\n                temp[roleIndex] = role;   \r\n                return temp;             \r\n            }\r\n        }\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        \r\n        try{\r\n            if(isEmpty){\r\n                throw new Error(\"Por favor seleccione un proyecto\");\r\n            }else{\r\n                setOpen(true);\r\n                const newRoles = fixRoles(roleValue);\r\n                const response = await axios.post(\r\n                    `${process.env.REACT_APP_API_URL}/api/private/userRole/${userId}`, {roles: newRoles}, config\r\n                );\r\n                let responseGet = await getUsers(userId);\r\n                setValues(responseGet.data.user.roles);\r\n                setTimeout(() =>{\r\n                    setOpen(false);\r\n                }, 2000)\r\n            }\r\n        }catch(error){\r\n            setOpen(true);\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(error.message);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    const [roleValue, setRoleValue] = React.useState(values[0]);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    return (\r\n        <Modal\r\n        open={openM}\r\n        onClose={onClose}            \r\n        >\r\n            <div className={classes.divContent}>\r\n                <Paper className={classes.pageContent}>\r\n                <AlertMessage errorMessage={error} successMessage={\"Se ha asignado los permisos!\"} openMessage={open} />\r\n                    <Form >\r\n\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n                            \r\n                            <Autocomplete\r\n                                value={roleValue}\r\n                                onChange={(event, newValue) => {\r\n                                    if(newValue){\r\n                                        setRoleValue(newValue);\r\n                                    }\r\n                                }}\r\n                                className={classes.center}\r\n                                id=\"combo-box-programs\"\r\n                                options={values}\r\n                                getOptionLabel={(option) => option.projectName}\r\n                                style={{ width: 300, justifyContent: \"center\" }}\r\n                                renderInput={(params) => <TextField {...params} label=\"Proyectos\" variant=\"outlined\" />}\r\n                                inputValue={inputValue}\r\n                                onInputChange={(event, newInputValue) => {\r\n                                    setInputValue(newInputValue);\r\n                                    if (newInputValue === '') {\r\n                                        setIsEmpty(true);\r\n                                        setRoleValue(undefined);\r\n                                    }\r\n                                    else\r\n                                        setIsEmpty(false);\r\n                                }}\r\n                            />\r\n                            \r\n                        </Grid>\r\n                        \r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"export\"\r\n                                    label=\"Exportar CSV\"\r\n                                    value={roleValue? roleValue.export:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"export\"]: !roleValue.export})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"editFactor\"\r\n                                    label=\"Editar factores\"\r\n                                    value={roleValue? roleValue.editFactor:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"editFactor\"]: !roleValue.editFactor})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"editData\"\r\n                                    label=\"Editar datos\"\r\n                                    value={roleValue? roleValue.editData:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"editData\"]: !roleValue.editData})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n                            <div>\r\n                                <Controls.Button\r\n                                    text=\"Guardar\"\r\n                                    onClick = {handleSubmit}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Form>\r\n                </Paper>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}