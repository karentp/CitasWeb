{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/AssignRole.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Register.css\";\nimport { useHistory } from \"react-router-dom\";\nimport Controls from \"../../components/controls/Controls\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssignRole = _ref => {\n  _s();\n\n  let {} = _ref;\n  const history = useHistory();\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = useState(\"\");\n  const [projects, setProjects] = React.useState([{\n    name: \"\"\n  }]);\n  const [users, setUsers] = React.useState([{\n    username: \" \"\n  }]);\n  const [selectedUser, setSelectedUser] = React.useState(false);\n  const [selectedProject, setSelectedProject] = React.useState(false);\n  const [roleType, setRole] = useState(\"investigador\");\n  const [open, setOpen] = React.useState(false);\n  const [inputUser, setInputUser] = React.useState('');\n  const [inputProject, setInputProject] = React.useState('');\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n\n  function wrapUsers(users) {\n    setUsers(users);\n    setLoading(false);\n  }\n\n  function wrapProjects(projects) {\n    setProjects(projects);\n    setLoading(false);\n    setSelectedUser(true);\n  }\n\n  function cleanForm() {\n    setSelectedProject(false);\n    setRole(\"investigador\");\n    setInputProject(\"\");\n  }\n\n  async function getBio(userValue) {\n    try {\n      setLoading(true);\n      setSelectedUser(false);\n      const projects = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/filteredprogram/${userValue.id}`, config);\n      console.log(projects);\n      wrapProjects(projects.data.programs);\n    } catch (error) {\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      setLoading(false);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  useEffect(() => {\n    let unmounted = false;\n\n    async function getUsers() {\n      try {\n        const users = await axios.get(process.env.REACT_APP_API_URL + \"/api/private/gestores/\", config);\n        wrapUsers(users.data.users);\n      } catch (error) {\n        setTimeout(() => {\n          setError(\"\");\n        }, 5000);\n        setLoading(false);\n        return setError(\"Authentication failed!\");\n      }\n    }\n\n    getUsers();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  const [projectValue, setprojectValue] = React.useState(projects[0]);\n  const [userValue, setuserValue] = React.useState(users[0]);\n  const roleItems = [{\n    id: 'investigador',\n    title: 'Investigador'\n  }, {\n    id: 'asistente',\n    title: 'Asistente'\n  }];\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (selectedUser === false || selectedProject === false) {\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      setLoading(false);\n      return setError(\"Seleccione un proyecto\");\n    }\n\n    try {\n      const role = {\n        projectId: projectValue.id,\n        projectName: projectValue.name,\n        role: roleType,\n        editFactor: true,\n        editData: true,\n        export: true\n      };\n      userValue.roles.push(role);\n      const {\n        data\n      } = await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/users/${userValue.id}`, {\n        username: userValue.username,\n        email: userValue.email,\n        type: userValue.type,\n        roles: userValue.roles\n      }, config);\n      await getBio(userValue);\n      setLoading(false);\n      setOpen(true);\n      cleanForm();\n      setTimeout(function () {\n        setOpen(false);\n      }, 6000);\n    } catch (error) {\n      console.log(error);\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  const useStyles = makeStyles(() => ({\n    programholder: {\n      height: 40,\n      textAlign: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      className: \"register-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.programholder,\n        hidden: !loading,\n        children: [/*#__PURE__*/_jsxDEV(Fade, {\n          in: loading,\n          style: {\n            transitionDelay: '0m'\n          },\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: error ? \"error\" : \"success\",\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"close\",\n            color: \"inherit\",\n            size: \"small\",\n            onClick: () => {\n              setOpen(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this),\n          children: error ? error : 'Se ha asociado el laboratorio!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"register-screen__title\",\n        children: \"Asignar laboratorio a usuario existente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: userValue,\n          onChange: (event, newValue) => {\n            setuserValue(newValue);\n            setSelectedUser(true);\n            setSelectedProject(false);\n            console.log(newValue);\n            getBio(newValue);\n          },\n          id: \"combo-box-users\",\n          options: users,\n          getOptionLabel: option => option.username,\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Gestor\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 50\n          }, this),\n          disabled: loading,\n          disableClearable: true,\n          inputValue: inputUser,\n          onInputChange: (event, newInputValue) => {\n            setInputUser(newInputValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: projectValue,\n          onChange: (event, newValue) => {\n            setprojectValue(newValue);\n            setSelectedProject(true);\n          },\n          id: \"combo-box-assign\",\n          options: projects,\n          getOptionLabel: option => option.name,\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Laboratorios\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 50\n          }, this),\n          disabled: !selectedUser,\n          disableClearable: true,\n          inputValue: inputProject,\n          onInputChange: (event, newInputValue) => {\n            setInputProject(newInputValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Asignar laboratorio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AssignRole, \"RTzOxg1ODTc27Evu9qx0wFb3hY8=\", true, function () {\n  return [useHistory];\n});\n\n_c = AssignRole;\nexport default AssignRole;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignRole\");","map":{"version":3,"sources":["/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/AssignRole.js"],"names":["useState","useEffect","axios","Link","useHistory","Controls","Autocomplete","TextField","React","CircularProgress","Fade","makeStyles","Alert","IconButton","Collapse","CloseIcon","AssignRole","history","loading","setLoading","error","setError","projects","setProjects","name","users","setUsers","username","selectedUser","setSelectedUser","selectedProject","setSelectedProject","roleType","setRole","open","setOpen","inputUser","setInputUser","inputProject","setInputProject","config","headers","Authorization","localStorage","getItem","wrapUsers","wrapProjects","cleanForm","getBio","userValue","get","process","env","REACT_APP_API_URL","id","console","log","data","programs","setTimeout","unmounted","getUsers","projectValue","setprojectValue","setuserValue","roleItems","title","registerHandler","e","preventDefault","role","projectId","projectName","editFactor","editData","export","roles","push","patch","email","type","response","useStyles","programholder","height","textAlign","classes","transitionDelay","event","newValue","option","width","params","newInputValue"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AssignRole = ({ }) => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [projects, setProjects] = React.useState([{ name: \"\" }]);\r\n    const [users, setUsers] = React.useState([{ username: \" \" }]);\r\n    const [selectedUser, setSelectedUser] = React.useState(false);\r\n    const [selectedProject, setSelectedProject] = React.useState(false);\r\n    const [roleType, setRole] = useState(\"investigador\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const [inputUser, setInputUser] = React.useState('');\r\n    const [inputProject, setInputProject] = React.useState('');\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n    function wrapUsers(users) {\r\n\r\n        setUsers(users);\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    function wrapProjects(projects) {\r\n        setProjects(projects);\r\n        setLoading(false);\r\n        setSelectedUser(true);\r\n\r\n    }\r\n\r\n    function cleanForm() {\r\n        setSelectedProject(false);\r\n        setRole(\"investigador\");\r\n        setInputProject(\"\");\r\n        \r\n    }\r\n\r\n    async function getBio(userValue) {\r\n        try {\r\n            setLoading(true);\r\n            setSelectedUser(false);\r\n            const projects = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/filteredprogram/${userValue.id}`,\r\n                config\r\n            );\r\n            console.log(projects);\r\n            wrapProjects(projects.data.programs);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        async function getUsers() {\r\n            try {\r\n                const users = await axios.get(\r\n                    process.env.REACT_APP_API_URL + \"/api/private/gestores/\",\r\n                    config\r\n                );\r\n                wrapUsers(users.data.users);\r\n\r\n\r\n            } catch (error) {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 5000);\r\n                setLoading(false);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n        }\r\n\r\n\r\n        getUsers();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const [projectValue, setprojectValue] = React.useState(projects[0]);\r\n    const [userValue, setuserValue] = React.useState(users[0]);\r\n\r\n    const roleItems = [\r\n        { id: 'investigador', title: 'Investigador' },\r\n        { id: 'asistente', title: 'Asistente' },\r\n    ]\r\n\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (selectedUser === false || selectedProject === false) {\r\n\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            setLoading(false)\r\n            return setError(\"Seleccione un proyecto\");\r\n        }\r\n\r\n\r\n        try {\r\n            const role = {\r\n                projectId: projectValue.id,\r\n                projectName: projectValue.name,\r\n                role: roleType,\r\n                editFactor: true,\r\n                editData: true,\r\n                export: true\r\n            }\r\n            userValue.roles.push(role);\r\n            const { data } = await axios.patch(\r\n                `${process.env.REACT_APP_API_URL}/api/private/users/${userValue.id}`,\r\n                {\r\n                    username: userValue.username,\r\n                    email: userValue.email,\r\n                    type: userValue.type,\r\n                    roles: userValue.roles\r\n                },\r\n                config\r\n            );\r\n            await getBio(userValue);\r\n            setLoading(false);\r\n            setOpen(true);\r\n            cleanForm();\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n            }, 6000);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        programholder: {\r\n            height: 40,\r\n            textAlign: 'center'\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div className=\"register-screen\">\r\n\r\n            <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n                <div className={classes.programholder} hidden={!loading}>\r\n                    <Fade\r\n                        in={loading}\r\n                        style={{\r\n                            transitionDelay: '0m',\r\n                        }}\r\n                        unmountOnExit\r\n                    >\r\n                        <CircularProgress />\r\n                    </Fade>\r\n                    <br />\r\n                </div>\r\n\r\n                <Collapse in={open}>\r\n                    <Alert\r\n                        severity={error ? \"error\" : \"success\"}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setOpen(false);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        }\r\n                    >\r\n                        {error ? error : 'Se ha asociado el laboratorio!'}\r\n                    </Alert>\r\n                </Collapse>\r\n\r\n                <h3 className=\"register-screen__title\">Asignar laboratorio a usuario existente</h3>\r\n                {error && <span className=\"error-message\">{error}</span>}\r\n                <br />\r\n                <div >\r\n                    <Autocomplete\r\n                        value={userValue}\r\n                        onChange={(event, newValue) => {\r\n                            setuserValue(newValue);\r\n                            setSelectedUser(true);\r\n                            setSelectedProject(false);\r\n                            console.log(newValue);\r\n                            getBio(newValue);\r\n                        }}\r\n                        id=\"combo-box-users\"\r\n                        options={users}\r\n                        getOptionLabel={(option) => option.username}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Gestor\" variant=\"outlined\" />}\r\n                        disabled={loading}\r\n                        disableClearable\r\n                        inputValue={inputUser}\r\n                        onInputChange={(event, newInputValue) => {\r\n                            setInputUser(newInputValue);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                    <Autocomplete\r\n                        value={projectValue}\r\n                        onChange={(event, newValue) => {\r\n                            setprojectValue(newValue);\r\n                            setSelectedProject(true);\r\n                        }}\r\n                        id=\"combo-box-assign\"\r\n                        options={projects}\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Laboratorios\" variant=\"outlined\" />}\r\n                        disabled={!selectedUser}\r\n                        disableClearable\r\n                        inputValue={inputProject}\r\n                        onInputChange={(event, newInputValue) => {\r\n                            setInputProject(newInputValue);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Asignar laboratorio\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignRole;\r\n"]},"metadata":{},"sourceType":"module"}