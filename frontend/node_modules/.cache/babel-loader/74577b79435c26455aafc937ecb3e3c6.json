{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowBoxplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { BoxPlotChart } from '@sgratzl/chartjs-chart-boxplot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowBoxplot(props) {\n  _s();\n\n  const {\n    data\n  } = props;\n  let configs = [];\n  let indexes = [];\n  let index = 0;\n\n  for (let key in data) {\n    indexes.push(index);\n    index++;\n    const config = {\n      // define label tree\n      labels: [\"\"],\n      datasets: [{\n        label: key,\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        borderColor: 'red',\n        borderWidth: 1,\n        outlierColor: '#ffffff',\n        padding: 5,\n        itemRadius: 0,\n        data: [data[key]]\n      }]\n    };\n    configs.push(config);\n  }\n\n  useEffect(() => {\n    indexes.forEach(i => {\n      const context = document.getElementById(\"canvas\" + i).getContext(\"2d\");\n      let boxplot = new BoxPlotChart(context, {\n        data: configs[i]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: indexes.map(i => /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\" + i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowBoxplot, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShowBoxplot;\nexport default ShowBoxplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowBoxplot\");","map":{"version":3,"sources":["/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowBoxplot.js"],"names":["React","useRef","useState","useEffect","BoxPlotChart","ShowBoxplot","props","data","configs","indexes","index","key","push","config","labels","datasets","label","backgroundColor","borderColor","borderWidth","outlierColor","padding","itemRadius","forEach","i","context","document","getElementById","getContext","boxplot","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,YAAT,QAA6B,gCAA7B;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,MAAIE,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIC,GAAT,IAAgBJ,IAAhB,EAAsB;AAClBE,IAAAA,OAAO,CAACG,IAAR,CAAaF,KAAb;AACAA,IAAAA,KAAK;AACL,UAAMG,MAAM,GAAG;AACX;AACAC,MAAAA,MAAM,EAAE,CAAC,EAAD,CAFG;AAGXC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAEL,GADA;AAEPM,QAAAA,eAAe,EAAE,mBAFV;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,WAAW,EAAE,CAJN;AAKPC,QAAAA,YAAY,EAAE,SALP;AAMPC,QAAAA,OAAO,EAAE,CANF;AAOPC,QAAAA,UAAU,EAAE,CAPL;AAQPf,QAAAA,IAAI,EAAE,CAACA,IAAI,CAACI,GAAD,CAAL;AARC,OAAD;AAHC,KAAf;AAcAH,IAAAA,OAAO,CAACI,IAAR,CAAaC,MAAb;AACH;;AAGDV,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACc,OAAR,CAAgBC,CAAC,IAAI;AACjB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAWH,CAAnC,EAAsCI,UAAtC,CAAiD,IAAjD,CAAhB;AACA,UAAIC,OAAO,GAAG,IAAIzB,YAAJ,CAAiBqB,OAAjB,EAA0B;AAAElB,QAAAA,IAAI,EAAEC,OAAO,CAACgB,CAAD;AAAf,OAA1B,CAAd;AACH,KAHD;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAA,cACKf,OAAO,CAACqB,GAAR,CAAaN,CAAD,iBACT;AAAQ,MAAA,EAAE,EAAE,WAAWA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA1CQnB,W;;KAAAA,W;AA4CT,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport { BoxPlotChart } from '@sgratzl/chartjs-chart-boxplot';\r\n\r\n\r\nfunction ShowBoxplot(props) {\r\n    const { data } = props;\r\n    let configs = [];\r\n    let indexes = [];\r\n    let index = 0;\r\n    for (let key in data) {\r\n        indexes.push(index);\r\n        index++;\r\n        const config = {\r\n            // define label tree\r\n            labels: [\"\"],\r\n            datasets: [{\r\n                label: key,\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                borderColor: 'red',\r\n                borderWidth: 1,\r\n                outlierColor: '#ffffff',\r\n                padding: 5,\r\n                itemRadius: 0,\r\n                data: [data[key]]\r\n            }]\r\n        };\r\n        configs.push(config);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        indexes.forEach(i => {\r\n            const context = document.getElementById(\"canvas\" + i).getContext(\"2d\");\r\n            let boxplot = new BoxPlotChart(context, { data: configs[i] });\r\n        })\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {indexes.map((i) => (\r\n                <canvas id={\"canvas\" + i} />\r\n            ))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowBoxplot;"]},"metadata":{},"sourceType":"module"}