{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/WebCitas/frontend/src/pages/Predictor/ProjectSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckIcon from '@mui/icons-material/Check';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '90%',\n    margin: '50px 0 0 0'\n  },\n  thead: {\n    '& > *': {\n      fontSize: 20,\n      background: '#8ade8f',\n      color: '#FFFFFF'\n    }\n  },\n  head: {\n    fontSize: 20,\n    background: '#8ade8f',\n    color: '#FFFFFF'\n  },\n  row: {\n    '& > *': {\n      fontSize: 18\n    }\n  },\n  programholder: {\n    height: 40,\n    textAlign: 'center'\n  },\n  programholderLoading: {\n    height: 40,\n    textAlign: 'center',\n    width: '90%'\n  },\n  button: {\n    background: '#4287f5',\n    color: '#FFFFFF',\n    justifyContent: 'center'\n  },\n  paper: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    padding: 8\n  }\n}));\nexport default function ProjectSelector(_ref) {\n  _s();\n\n  let {\n    setProject,\n    setProjectName\n  } = _ref;\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleParentData = (bio, bioName) => {\n    setProject(bio);\n    setProjectName(bioName);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [projects, setProjects] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = React.useState(true);\n  const [projectId, setProjectId] = React.useState('');\n\n  function wrapValues(projects) {\n    setProjects(projects);\n    setLoading(false);\n  }\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleAccept = () => {\n    setOpenDialog(false);\n  };\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n\n  async function getAllProjects() {\n    try {\n      setLoading(true);\n      const projects = await axios.get(process.env.REACT_APP_API_URL + \"/api/private/project\", config);\n      wrapValues(projects.data.projects);\n    } catch (error) {\n      setLoading(false);\n      setTimeout(() => {\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }, 5000);\n      setLoading(false);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  useEffect(() => {\n    let unmounted = false;\n    getAllProjects();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n        errorMessage: error,\n        successMessage: \"\",\n        openMessage: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.thead,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\xBFEs serie temporal?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: classes.programholder,\n                children: \"Acciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(project => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                  name: \"isTimeSeries\",\n                  label: \"\",\n                  value: project.isTimeSeries,\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: project.type === 'regresion' ? 'Regresión' : 'Clasificación'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Seleccionar\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      variant: \"contained\",\n                      style: {\n                        marginRight: 10\n                      },\n                      onClick: () => handleParentData(project._id, project.name),\n                      children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 180\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Informaci\\xF3n\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: classes.button,\n                      variant: \"contained\",\n                      style: {\n                        marginRight: 10\n                      },\n                      component: Link,\n                      to: `/project/show/${project._id}`,\n                      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 185\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)]\n            }, project.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: projects.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectSelector, \"oVMHnfvhQarQgPyZBrQ0Lc7uZDg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProjectSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectSelector\");","map":{"version":3,"sources":["/Users/karentovar/Documents/WebCitas/frontend/src/pages/Predictor/ProjectSelector.js"],"names":["React","useState","useEffect","Table","TableHead","TableCell","Paper","TableRow","TableBody","Button","makeStyles","CssBaseline","Grid","Link","TableContainer","TablePagination","Tooltip","InfoIcon","CheckIcon","axios","AlertMessage","Controls","useStyles","theme","table","width","margin","thead","fontSize","background","color","head","row","programholder","height","textAlign","programholderLoading","button","justifyContent","paper","backgroundColor","padding","ProjectSelector","setProject","setProjectName","classes","page","setPage","rowsPerPage","setRowsPerPage","handleParentData","bio","bioName","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","projects","setProjects","open","setOpen","openDialog","setOpenDialog","error","setError","loading","setLoading","projectId","setProjectId","wrapValues","handleClose","handleAccept","config","headers","Authorization","localStorage","getItem","getAllProjects","get","process","env","REACT_APP_API_URL","data","setTimeout","unmounted","container","slice","map","project","name","isTimeSeries","type","marginRight","_id","id","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckIcon from '@mui/icons-material/Check';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport Controls from \"../../components/controls/Controls\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#8ade8f',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n\n}));\n\nexport default function ProjectSelector({setProject, setProjectName}) {\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleParentData = (bio, bioName) => {\n        setProject(bio);\n        setProjectName(bioName);\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [projects, setProjects] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [projectId, setProjectId] = React.useState('');\n\n    function wrapValues(projects) {\n        setProjects(projects);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        setOpenDialog(false);\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllProjects() {\n        try {\n            setLoading(true);\n            const projects = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/project\",\n                config\n            );\n            wrapValues(projects.data.projects);\n\n\n        } catch (error) {\n            setLoading(false);\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllProjects();\n        return () => { unmounted = true; };\n    }, []);\n\n\n    return (\n        <div>\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Nombre</TableCell>\n                                <TableCell>¿Es serie temporal?</TableCell>\n                                <TableCell>Tipo</TableCell>\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((project) => (\n                                <TableRow hover className={classes.row} key={project.id}>\n                                    <TableCell>{project.name}</TableCell>\n                                    <TableCell>\n                                        <Controls.Checkbox\n                                            name=\"isTimeSeries\"\n                                            label=\"\"\n                                            value={project.isTimeSeries}\n                                            disabled={true}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{project.type === 'regresion' ? 'Regresión' : 'Clasificación'}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Seleccionar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }}onClick={() => handleParentData(project._id, project.name)}><CheckIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/project/show/${project._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={projects.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}