{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst taskURL = process.env.REACT_APP_API_URL + '/api/private/task';\nexport const getTasks = async id => {\n  try {\n    id = id || '';\n    return await axios.get(`${taskURL}/${id}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addTask = async task => {\n  try {\n    return await axios.post(`${taskURL}/`, task, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const deleteTask = async id => {\n  try {\n    return await axios.delete(`${process.env.REACT_APP_API_URL}/api/private/task/${id}`, config);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    throw Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n  }\n};\nexport const editTask = async (id, task) => {\n  try {\n    return await axios.patch(`${taskURL}/${id}`, task, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};","map":{"version":3,"sources":["/Users/karentovar/Documents/WebCitas/frontend/src/services/taskService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","taskURL","process","env","REACT_APP_API_URL","getTasks","id","get","error","TypeError","addTask","task","post","deleteTask","delete","Error","response","data","editTask","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAELC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD;AADE,CAAf;AAMA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,mBAAhD;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAClC,MAAI;AACAA,IAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;AACA,WAAO,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEN,OAAQ,IAAGK,EAAG,EAA3B,EAA8BV,MAA9B,CAAb;AACH,GAHD,CAGE,OAAOY,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACnC,MAAI;AACA,WAAO,MAAMhB,KAAK,CAACiB,IAAN,CAAY,GAAEX,OAAQ,GAAtB,EAA0BU,IAA1B,EAAgCf,MAAhC,CAAb;AACH,GAFD,CAEE,OAAOY,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMI,UAAU,GAAG,MAAOP,EAAP,IAAc;AACpC,MAAI;AACA,WAAO,MAAMX,KAAK,CAACmB,MAAN,CAAc,GAAEZ,OAAO,CAACC,GAAR,CAAYC,iBAAkB,qBAAoBE,EAAG,EAArE,EAAwEV,MAAxE,CAAb;AACH,GAFD,CAEE,OAAOY,KAAP,EAAc;AAAA;;AACZ,UAAMO,KAAK,CAACP,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEQ,QAAR,4EAAC,gBAAiBC,IAAlB,yDAAC,qBAAuBT,KAAxB,CAAX;AACH;AACJ,CANM;AAQP,OAAO,MAAMU,QAAQ,GAAG,OAAOZ,EAAP,EAAWK,IAAX,KAAoB;AACxC,MAAI;AACA,WAAO,MAAMhB,KAAK,CAACwB,KAAN,CAAa,GAAElB,OAAQ,IAAGK,EAAG,EAA7B,EAAgCK,IAAhC,EAAsCf,MAAtC,CAAb;AACH,GAFD,CAEE,OAAOY,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM","sourcesContent":["import axios from 'axios';\n\nconst config = {\n    headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n    }\n};\nconst taskURL = process.env.REACT_APP_API_URL + '/api/private/task';\n\n\nexport const getTasks = async (id) => {\n    try {\n        id = id || '';\n        return await axios.get(`${taskURL}/${id}`, config);\n    } catch (error) {\n        return new TypeError(\"Authentication failed!\");\n    }\n}\n\nexport const addTask = async (task) => {\n    try {\n        return await axios.post(`${taskURL}/`, task, config);\n    } catch (error) {\n        return new TypeError(\"Authentication failed!\");\n    }\n}\n\nexport const deleteTask = async (id) => {\n    try {\n        return await axios.delete(`${process.env.REACT_APP_API_URL}/api/private/task/${id}`, config);\n    } catch (error) {\n        throw Error(error?.response?.data?.error);\n    }\n}\n\nexport const editTask = async (id, task) => {\n    try {\n        return await axios.patch(`${taskURL}/${id}`, task, config)\n    } catch (error) {\n        return new TypeError(\"Authentication failed!\");\n    }\n}"]},"metadata":{},"sourceType":"module"}