{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ProjectBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CalendlyEventListener, InlineWidget } from \"react-calendly\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardContainer: {\n    width: 800,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  media: {\n    height: 300\n  },\n  table: {\n    width: '90%',\n    margin: '50px 0 0 0'\n  },\n  thead: {\n    '& > *': {\n      fontSize: 20,\n      background: '#8ade8f',\n      color: '#FFFFFF'\n    }\n  },\n  row: {\n    '& > *': {\n      fontSize: 18\n    }\n  },\n  buttonheader: {\n    display: 'flex'\n  },\n  programholder: {\n    height: 40,\n    textAlign: 'center'\n  },\n  button: {\n    background: '#4287f5',\n    color: '#FFFFFF'\n  },\n  pageContent: {\n    width: '90%',\n    margin: '50px 0 0 0',\n    padding: theme.spacing(3)\n  },\n  center: {\n    display: 'flex',\n    textAlign: 'center'\n  },\n  horizmenu: {\n    display: 'inline-block'\n  },\n  textLeft: {\n    marginLeft: '0',\n    paddingLeft: '0'\n  }\n}));\nexport default function ProjectBook() {\n  _s();\n\n  const [isDoneScheduling, setDoneScheduling] = useState(false);\n  const [isTimeSelected, setTimeSelected] = useState(false);\n  const prefill = {\n    name: \"Test Name\",\n    email: \"Email@gmail.com\"\n  };\n  const pageSettings = {\n    primaryColor: \"417658\",\n    textColor: \"251e35\",\n    backgroundColor: \"f7f5f4\",\n    hideLandingPageDetails: true,\n    hideEventTypeDetails: true\n  };\n\n  function getCalendlyHeightToEnsureNoCrop() {\n    if (!isTimeSelected) return {\n      height: 600\n    };\n    if (isDoneScheduling) return {\n      height: 450\n    };\n    return {\n      height: 1060\n    };\n  }\n\n  function handleDateAndTimeSelected() {\n    setTimeSelected(true);\n  }\n\n  function handleEventScheduled() {\n    setDoneScheduling(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CalendlyEventListener, {\n    onDateAndTimeSelected: handleDateAndTimeSelected,\n    onEventScheduled: handleEventScheduled,\n    children: /*#__PURE__*/_jsxDEV(InlineWidget, {\n      url: \"https://calendly.com/bhongmanee/test-a-calendly-intake-form\" // pageSettings={pageSettings.current}\n      // prefill={prefill.current}\n      ,\n      pageSettings: pageSettings,\n      prefill: prefill,\n      styles: getCalendlyHeightToEnsureNoCrop()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectBook, \"UeB/67OUys11WhhynCcOJuRJoz8=\");\n\n_c = ProjectBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBook\");","map":{"version":3,"sources":["/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ProjectBook.js"],"names":["React","useState","useEffect","makeStyles","CalendlyEventListener","InlineWidget","useStyles","theme","cardContainer","width","justifyContent","alignItems","media","height","table","margin","thead","fontSize","background","color","row","buttonheader","display","programholder","textAlign","button","pageContent","padding","spacing","center","horizmenu","textLeft","marginLeft","paddingLeft","ProjectBook","isDoneScheduling","setDoneScheduling","isTimeSelected","setTimeSelected","prefill","name","email","pageSettings","primaryColor","textColor","backgroundColor","hideLandingPageDetails","hideEventTypeDetails","getCalendlyHeightToEnsureNoCrop","handleDateAndTimeSelected","handleEventScheduled"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CalendlyEventListener, InlineWidget } from \"react-calendly\";\n\nconst useStyles = makeStyles(theme => ({\n  cardContainer: {\n    width: 800,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  media: {\n    height: 300,\n  },\n  table: {\n    width: '90%',\n    margin: '50px 0 0 0'\n  },\n  thead: {\n    '& > *': {\n      fontSize: 20,\n      background: '#8ade8f',\n      color: '#FFFFFF'\n    }\n  },\n  row: {\n    '& > *': {\n      fontSize: 18\n    }\n  },\n  buttonheader: {\n    display: 'flex'\n\n  },\n  programholder: {\n    height: 40,\n    textAlign: 'center'\n  },\n  button: {\n    background: '#4287f5',\n    color: '#FFFFFF'\n  },\n  pageContent: {\n    width: '90%',\n    margin: '50px 0 0 0',\n    padding: theme.spacing(3),\n  },\n  center: {\n    display: 'flex',\n    textAlign: 'center'\n  },\n  horizmenu: {\n    display: 'inline-block'\n  },\n  textLeft: {\n    marginLeft: '0',\n    paddingLeft: '0'\n  }\n}));\n\n\n\nexport default function ProjectBook() {\n\n\n  const [isDoneScheduling, setDoneScheduling] = useState(false);\n  const [isTimeSelected, setTimeSelected] = useState(false);\n\n  const prefill = {\n    name: \"Test Name\",\n    email: \"Email@gmail.com\"\n  };\n\n  const pageSettings = {\n    primaryColor: \"417658\",\n    textColor: \"251e35\",\n    backgroundColor: \"f7f5f4\",\n    hideLandingPageDetails: true,\n    hideEventTypeDetails: true\n  };\n\n  function getCalendlyHeightToEnsureNoCrop() {\n    if (!isTimeSelected) return { height: 600 };\n    if (isDoneScheduling) return { height: 450 };\n    return { height: 1060 };\n  }\n\n  function handleDateAndTimeSelected() {\n    setTimeSelected(true);\n  }\n\n  function handleEventScheduled() {\n    setDoneScheduling(true);\n  }\n\n  return (\n    <CalendlyEventListener\n      onDateAndTimeSelected={handleDateAndTimeSelected}\n      onEventScheduled={handleEventScheduled}\n    >\n      <InlineWidget\n        url={\"https://calendly.com/bhongmanee/test-a-calendly-intake-form\"}\n        // pageSettings={pageSettings.current}\n        // prefill={prefill.current}\n        pageSettings={pageSettings}\n        prefill={prefill}\n        styles={getCalendlyHeightToEnsureNoCrop()}\n      />\n    </CalendlyEventListener>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}