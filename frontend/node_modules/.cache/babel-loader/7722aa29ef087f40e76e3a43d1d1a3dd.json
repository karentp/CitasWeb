{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowGraphics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport Container from '@material-ui/core/Container';\nimport ShowBoxplot from './ShowBoxplot';\nimport ShowHistogram from './ShowHistogram';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport Grid from '@mui/material/Grid';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowGraphics() {\n  _s();\n\n  const {\n    pid,\n    bid\n  } = useParams();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({\n    \"_isFull\": 0\n  });\n  const [graphics, setGraphics] = React.useState('histogram');\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n\n  async function getData() {\n    try {\n      const result = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/record/num/${bid}/${pid}`, config);\n      setData(result.data);\n    } catch (error) {\n      setTimeout(() => {\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }, 5000);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  useEffect(() => {\n    let unmounted = false;\n    getData();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const handleChange = (event, newGraphics) => {\n    setGraphics(newGraphics);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        color: \"primary\",\n        value: graphics,\n        exclusive: true,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"histogram\",\n          children: \"Histogramas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"boxplot\",\n          children: \"Boxplots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: graphics === \"histogram\" ? /*#__PURE__*/_jsxDEV(ShowHistogram, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : !data.hasOwnProperty(\"_isFull\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ShowBoxplot, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowGraphics, \"0xl/jGl8itGS2n/1lK454C0R8aw=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowGraphics;\nexport default ShowGraphics;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowGraphics\");","map":{"version":3,"sources":["/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowGraphics.js"],"names":["React","useEffect","useState","useParams","axios","Container","ShowBoxplot","ShowHistogram","ToggleButton","Grid","ToggleButtonGroup","ShowGraphics","pid","bid","error","setError","data","setData","graphics","setGraphics","config","headers","Authorization","localStorage","getItem","getData","result","get","process","env","REACT_APP_API_URL","setTimeout","unmounted","handleChange","event","newGraphics","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Container from '@material-ui/core/Container';\r\nimport ShowBoxplot from './ShowBoxplot';\r\nimport ShowHistogram from './ShowHistogram';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport Grid from '@mui/material/Grid';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nfunction ShowGraphics() {\r\n    const { pid, bid } = useParams();\r\n    const [error, setError] = useState('');\r\n    const [data, setData] = useState({ \"_isFull\": 0 });\r\n    const [graphics, setGraphics] = React.useState('histogram');\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getData() {\r\n        try {\r\n            const result = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/record/num/${bid}/${pid}`,\r\n                config\r\n            );\r\n            setData(result.data);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getData();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const handleChange = (event, newGraphics) => {\r\n        setGraphics(newGraphics);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={graphics}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"histogram\">Histogramas</ToggleButton>\r\n                    <ToggleButton value=\"boxplot\">Boxplots</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <div>\r\n                {graphics === \"histogram\" ?\r\n                    <ShowHistogram data={data} />\r\n                    : !data.hasOwnProperty(\"_isFull\") && <div>\r\n                        <ShowBoxplot data={data} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShowGraphics;\r\n"]},"metadata":{},"sourceType":"module"}