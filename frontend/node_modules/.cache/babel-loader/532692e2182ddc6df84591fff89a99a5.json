{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/WebCitas/frontend/src/components/useForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { getBase64 } from '../services/getFileService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useForm(initialFValues) {\n  _s();\n\n  let validateOnChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let validate = arguments.length > 2 ? arguments[2] : undefined;\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    name = name ? name : e.target.id;\n\n    switch (name) {\n      case \"image\":\n        getBase64(e.target.files[0]).then(result => {\n          setValues({ ...values,\n            [name]: result\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n        break;\n\n      case \"clearImage\":\n        setValues({ ...values,\n          \"image\": \"\"\n        });\n        break;\n\n      default:\n        setValues({ ...values,\n          [name]: value\n        });\n        break;\n    }\n\n    if (validateOnChange) validate({\n      [name]: value\n    });\n  };\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n}\n\n_s(useForm, \"eRFbKdGQbiaa9HoEdb7CtqsAoqM=\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function Form(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    ...other,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/karentovar/Documents/WebCitas/frontend/src/components/useForm.js"],"names":["React","useState","makeStyles","getBase64","useForm","initialFValues","validateOnChange","validate","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","id","files","then","result","catch","err","console","log","resetForm","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,4BAA1B;;AAEA,OAAO,SAASC,OAAT,CAAiBC,cAAjB,EAAqE;AAAA;;AAAA,MAApCC,gBAAoC,uEAAjB,KAAiB;AAAA,MAAVC,QAAU;AAGxE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACI,cAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,iBAAiB,GAAGC,CAAC,IAAI;AAE3B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAAxB;AACAF,IAAAA,IAAI,GAAGA,IAAI,GAACA,IAAD,GAAMD,CAAC,CAACG,MAAF,CAASC,EAA1B;;AACA,YAAQH,IAAR;AACI,WAAK,OAAL;AACIX,QAAAA,SAAS,CAACU,CAAC,CAACG,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAT,CACCC,IADD,CACMC,MAAM,IAAI;AACZX,UAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,aAACM,IAAD,GAAQM;AAArB,WAAD,CAAT;AACH,SAHD,EAICC,KAJD,CAIOC,GAAG,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAND;AAOA;;AACJ,WAAK,YAAL;AACIb,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,mBAAS;AAAtB,SAAD,CAAT;AACA;;AACJ;AACIC,QAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,WAACM,IAAD,GAAQC;AAFF,SAAD,CAAT;AAIA;AAlBR;;AAoBA,QAAIT,gBAAJ,EACIC,QAAQ,CAAC;AAAE,OAACO,IAAD,GAAQC;AAAV,KAAD,CAAR;AACP,GA1BD;;AA4BA,QAAMU,SAAS,GAAG,MAAM;AAEpBhB,IAAAA,SAAS,CAACJ,cAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAJD;;AAOA,SAAO;AACHH,IAAAA,MADG;AAEHC,IAAAA,SAFG;AAGHC,IAAAA,MAHG;AAIHC,IAAAA,SAJG;AAKHC,IAAAA,iBALG;AAMHa,IAAAA;AANG,GAAP;AASH;;GAlDerB,O;;AAqDhB,MAAMsB,SAAS,GAAGxB,UAAU,CAACyB,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACF,8BAA0B;AACtBC,MAAAA,KAAK,EAAE,KADe;AAEtBC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFc;AADxB;AAD6B,CAAL,CAAN,CAA5B;AASA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAExB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACI;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACN,IAAzB;AAA+B,IAAA,YAAY,EAAC,KAA5C;AAAA,OAAsDQ,KAAtD;AAAA,cACKH,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IATeH,I;UAEIN,S;;;KAFJM,I","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { getBase64 } from '../services/getFileService';\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        let { name, value } = e.target         \r\n        name = name?name:e.target.id;\r\n        switch (name) {\r\n            case \"image\":\r\n                getBase64(e.target.files[0])\r\n                .then(result => {                                                     \r\n                    setValues({ ...values, [name]: result});\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break;\r\n            case \"clearImage\":\r\n                setValues({ ...values, \"image\": \"\"});\r\n                break;\r\n            default:\r\n                setValues({\r\n                    ...values,\r\n                    [name]: value\r\n                })\r\n                break;\r\n        }     \r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n\r\n        setValues(initialFValues);        \r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}