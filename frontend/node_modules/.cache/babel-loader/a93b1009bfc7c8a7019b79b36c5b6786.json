{"ast":null,"code":"var _jsxFileName = \"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport CircularStatic from '../../components/CircularStatic';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Alert from '../../components/AlertMessage';\nimport AlertMessage from '../../components/AlertMessage';\nimport { getTasks } from '../../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst predictionItems = [{\n  id: 'regresion',\n  title: 'Regresión lineal'\n}, {\n  id: 'clasificacion',\n  title: 'Clasificación'\n}];\nconst initialBValues = {\n  name: '',\n  description: '',\n  diasNecesarios: '',\n  diasCompletados: '',\n  isTimeSeries: false,\n  projects: ''\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: '50px 0 0 0',\n    width: '90%',\n    padding: theme.spacing(3)\n  },\n  programholder: {\n    height: 40,\n    textAlign: 'center',\n    width: '90%'\n  },\n  sizeAvatar: {\n    height: \"150px\",\n    width: \"150px\",\n    marginBottom: \"25px\"\n  },\n  imageButton: {\n    marginBottom: \"25px\"\n  }\n}));\nexport default function TaskForm() {\n  _s();\n\n  const {\n    tid,\n    id\n  } = useParams();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const message = id ? \"Se ha actualizado la tarea!\" : \"Se ha guardado la tarea!\";\n  const title = id ? \"Actualizar tarea\" : \"Añadir nueva tarea\";\n  const type = id ? \"actualizar\" : \"agregar\";\n\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = { ...errors\n    };\n    if ('name' in fieldValues) temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\";\n    if ('description' in fieldValues) temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\";\n    if ('diasNecesarios' in fieldValues) temp.diasNecesarios = fieldValues.diasNecesarios ? \"\" : \"Este campo es obligatorio.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n    if (id) getTask();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round(100 * data.loaded / data.total));\n    }\n  };\n\n  const getTask = async () => {\n    setLoading(true);\n\n    try {\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/showtask/${id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        onDownloadProgress: data => {\n          //Set the progress value to show the progress bar                    \n          setProgress(Math.round(100 * data.loaded / data.total));\n        }\n      });\n      setValues(response.data.task);\n      setLoading(false);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }, 5000);\n      setOpen(true);\n      setLoading(false);\n      return setError(\"Authentication failed!\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialBValues, true, validate);\n\n  const confirmPost = () => {\n    setOpen(true);\n    setLoading(false);\n\n    if (!id) {\n      resetForm({});\n    }\n\n    setTimeout(function () {\n      setOpen(false);\n    }, 6000);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (validate()) {\n      setLoading(true);\n\n      try {\n        if (id) {\n          await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/task/${id}/${tid}`, values, config).then(confirmPost);\n          await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/updatePercentage/${tid}`, values, config);\n        } else {\n          await axios.post(process.env.REACT_APP_API_URL + `/api/private/task/${tid}`, values, config).then(confirmPost);\n          await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/updatePercentage/${tid}`, values, config);\n        }\n      } catch (error) {\n        setLoading(false);\n        setTimeout(() => {\n          setTimeout(() => {\n            setError(\"\");\n          }, 2000);\n        }, 5000);\n        return setError(\"Authentication failed!\");\n      }\n    }\n  }; //ACTUALIZAR\n\n\n  if (id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: title,\n        subTitle: `Formulario para ${type} una tarea`,\n        icon: /*#__PURE__*/_jsxDEV(EcoIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CircularStatic, {\n        progress: progress,\n        hidden: !loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.pageContent,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n            errorMessage: error,\n            successMessage: message,\n            openMessage: open\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                name: \"name\",\n                label: \"Nombre\",\n                value: values.name,\n                onChange: handleInputChange,\n                error: errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                label: \"Descripci\\xF3n\",\n                name: \"description\",\n                value: values.description,\n                onChange: handleInputChange,\n                error: errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                label: \"DiasCompletados\",\n                name: \"diasCompletados\",\n                value: values.diasCompletados,\n                onChange: handleInputChange,\n                error: errors.diasCompletados\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                name: \"isTimeSeries\",\n                label: \"Tarea terminada\",\n                value: values.isTimeSeries,\n                onChange: handleInputChange,\n                title: \"Se presentar\\xE1 como tarea terminada al marcar la casilla, de lo contrario se presentar\\xE1 como una tarea incompleta.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              style: {\n                marginTop: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n                  type: \"submit\",\n                  text: \"Guardar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n                  text: \"Limpiar\",\n                  color: \"inherit\",\n                  onClick: resetForm\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this);\n  } //CREAR\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: title,\n        subTitle: `Formulario para ${type} una tarea`,\n        icon: /*#__PURE__*/_jsxDEV(EcoIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CircularStatic, {\n        progress: progress,\n        hidden: !loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.pageContent,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n            errorMessage: error,\n            successMessage: message,\n            openMessage: open\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                name: \"name\",\n                label: \"Nombre\",\n                value: values.name,\n                onChange: handleInputChange,\n                error: errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                label: \"Descripci\\xF3n\",\n                name: \"description\",\n                value: values.description,\n                onChange: handleInputChange,\n                error: errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                label: \"Dias necesarios\",\n                name: \"diasNecesarios\",\n                value: values.diasNecesarios,\n                onChange: handleInputChange,\n                error: errors.diasNecesarios\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              style: {\n                marginTop: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n                  type: \"submit\",\n                  text: \"Guardar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n                  text: \"Limpiar\",\n                  color: \"inherit\",\n                  onClick: resetForm\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(TaskForm, \"eu3vinabpV1azTLYhTrSshahD3k=\", false, function () {\n  return [useParams, useStyles, useForm];\n});\n\n_c = TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/TaskForm.js"],"names":["React","useState","useEffect","Grid","Controls","useForm","Form","Paper","makeStyles","Box","EcoIcon","PageHeader","CircularStatic","axios","useParams","Alert","AlertMessage","getTasks","predictionItems","id","title","initialBValues","name","description","diasNecesarios","diasCompletados","isTimeSeries","projects","useStyles","theme","pageContent","margin","width","padding","spacing","programholder","height","textAlign","sizeAvatar","marginBottom","imageButton","TaskForm","tid","classes","loading","setLoading","open","setOpen","error","setError","progress","setProgress","message","type","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","unmounted","getTask","config","headers","Authorization","localStorage","getItem","onUploadProgress","data","Math","round","loaded","total","response","get","process","env","REACT_APP_API_URL","onDownloadProgress","setValues","task","setTimeout","handleInputChange","resetForm","confirmPost","handleSubmit","e","preventDefault","patch","then","post","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport CircularStatic from '../../components/CircularStatic'\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Alert from '../../components/AlertMessage';\nimport AlertMessage from '../../components/AlertMessage';\nimport { getTasks } from '../../services/taskService';\n\n\nconst predictionItems = [\n    { id: 'regresion', title: 'Regresión lineal' },\n    { id: 'clasificacion', title: 'Clasificación' },\n]\n\nconst initialBValues = {\n    name: '',\n    description: '',\n    diasNecesarios: '',\n    diasCompletados: '',\n    isTimeSeries: false,\n    projects: ''\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function TaskForm() {\n    \n    const { tid,id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const message = id ? \"Se ha actualizado la tarea!\" : \"Se ha guardado la tarea!\"\n    const title = id ? \"Actualizar tarea\" : \"Añadir nueva tarea\";\n    const type = id ? \"actualizar\" : \"agregar\";\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }        \n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('diasNecesarios' in fieldValues)\n            temp.diasNecesarios = fieldValues.diasNecesarios ? \"\" : \"Este campo es obligatorio.\"\n            \n        setErrors({\n            ...temp\n        })        \n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getTask();\n        return () => { unmounted = true; };\n    }, []);\n\n\n\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n\n    const getTask = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/showtask/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.task);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialBValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if(!id){\n            resetForm({\n            })\n        }\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/task/${id}/${tid}`, values, config)\n                        .then(confirmPost)\n                    await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/updatePercentage/${tid}`, values, config)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + `/api/private/task/${tid}`, values, config)\n                        .then(confirmPost)\n                    await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/updatePercentage/${tid}`, values, config)\n                        \n                }\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n    \n    //ACTUALIZAR\n    if(id){\n    return (\n        \n        <div>\n            <PageHeader\n                title={title}\n                subTitle={`Formulario para ${type} una tarea`}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>                \n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open}/>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                            <Controls.Input\n                                label=\"Descripción\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n                            <Controls.Input\n                                label=\"DiasCompletados\"\n                                name=\"diasCompletados\"\n                                value={values.diasCompletados}\n                                onChange={handleInputChange}\n                                error={errors.diasCompletados}\n                            />\n\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Checkbox\n                                name=\"isTimeSeries\"\n                                label=\"Tarea terminada\"\n                                value={values.isTimeSeries}\n                                onChange={handleInputChange}\n                                title=\"Se presentará como tarea terminada al marcar la casilla, de lo contrario se presentará como una tarea incompleta.\"\n                            />\n                            \n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n                            <div>\n                                <Controls.Button\n                                    type=\"submit\"\n                                    text=\"Guardar\"\n                                />\n\n                                <Controls.Button\n                                    text=\"Limpiar\"\n                                    color=\"inherit\"\n                                    onClick={resetForm} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n    }\n\n    //CREAR\n    else{\n\n        return (\n        \n            <div>\n                <PageHeader\n                    title={title}\n                    subTitle={`Formulario para ${type} una tarea`}\n                    icon={<EcoIcon fontSize=\"large\" color='primary'\n                    />}\n                />\n                <CircularStatic progress={progress} hidden={!loading} />\n                <Paper className={classes.pageContent}>                \n                    <Form onSubmit={handleSubmit}>\n                        <AlertMessage errorMessage={error} successMessage={message} openMessage={open}/>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    name=\"name\"\n                                    label=\"Nombre\"\n                                    value={values.name}\n                                    onChange={handleInputChange}\n                                    error={errors.name}\n                                />\n                                <Controls.Input\n                                    label=\"Descripción\"\n                                    name=\"description\"\n                                    value={values.description}\n                                    onChange={handleInputChange}\n                                    error={errors.description}\n                                />\n                                <Controls.Input\n                                    label=\"Dias necesarios\"\n                                    name=\"diasNecesarios\"\n                                    value={values.diasNecesarios}\n                                    onChange={handleInputChange}\n                                    error={errors.diasNecesarios}\n                                />\n    \n                            </Grid>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justifyContent=\"center\"\n                                alignItems=\"center\"\n                                style={{ marginTop: '20px' }}\n                            >\n                                <div>\n                                    <Controls.Button\n                                        type=\"submit\"\n                                        text=\"Guardar\"\n                                    />\n    \n                                    <Controls.Button\n                                        text=\"Limpiar\"\n                                        color=\"inherit\"\n                                        onClick={resetForm} />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Paper>\n            </div>\n        )\n        }\n}\n"]},"metadata":{},"sourceType":"module"}