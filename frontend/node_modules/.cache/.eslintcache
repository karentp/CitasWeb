[{"/Users/karentovar/Documents/SCYTO/frontend/src/index.js":"1","/Users/karentovar/Documents/SCYTO/frontend/src/reportWebVitals.js":"2","/Users/karentovar/Documents/SCYTO/frontend/src/App.js":"3","/Users/karentovar/Documents/SCYTO/frontend/src/components/SideMenu.js":"4","/Users/karentovar/Documents/SCYTO/frontend/src/components/Header.js":"5","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Login.js":"6","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Home.js":"7","/Users/karentovar/Documents/SCYTO/frontend/src/pages/AboutUs.js":"8","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/AssignRole.js":"9","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Factors/UpdateFactor.js":"10","/Users/karentovar/Documents/SCYTO/frontend/src/components/routing/RequireAuth.js":"11","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Factors/CreateFactor.js":"12","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Profile.js":"13","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/ViewUsers.js":"14","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Register.js":"15","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ShowProgram.js":"16","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Organization/ViewOrganization.js":"17","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Evidence/EvidenceForm.js":"18","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Resource/ShowResource.js":"19","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Organization/OrganizationForm.js":"20","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Evidence/ShowEvidence.js":"21","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Resource/ResourceForm.js":"22","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ProgramForm.js":"23","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Resource/ViewResource.js":"24","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/ShowTask.js":"25","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Evidence/ViewEvidence.js":"26","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ViewReportsDeadlines.js":"27","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ViewReports.js":"28","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Blog/ViewBlog.js":"29","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ViewProgram.js":"30","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Blog/BlogForm.js":"31","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Data/CreateData.js":"32","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/TaskForm.js":"33","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Blog/ShowBlog.js":"34","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ViewProjects.js":"35","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ReportForm.js":"36","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Data/UploadCSV.js":"37","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Data/ViewData.js":"38","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Graphics/ShowGraphics.js":"39","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ShowProject.js":"40","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ProjectForm.js":"41","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/Predictor.js":"42","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Organization/ShowOrganization.js":"43","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Notice/NoticeForm.js":"44","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Notice/ViewNotice.js":"45","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Notice/ShowNotice.js":"46","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ShowReport.js":"47","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/TaskView.js":"48","/Users/karentovar/Documents/SCYTO/frontend/src/components/AlertMessage.js":"49","/Users/karentovar/Documents/SCYTO/frontend/src/components/PageHeader.js":"50","/Users/karentovar/Documents/SCYTO/frontend/src/services/userService.js":"51","/Users/karentovar/Documents/SCYTO/frontend/src/services/taskService.js":"52","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Controls.js":"53","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/TextArea.js":"54","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/InputButton.js":"55","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Button.js":"56","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/DatePicker.js":"57","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Checkbox.js":"58","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Select.js":"59","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Input.js":"60","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/RadioGroup.js":"61","/Users/karentovar/Documents/SCYTO/frontend/src/services/noticeService.js":"62","/Users/karentovar/Documents/SCYTO/frontend/src/components/ImageComponent.js":"63","/Users/karentovar/Documents/SCYTO/frontend/src/components/CircularStatic.js":"64","/Users/karentovar/Documents/SCYTO/frontend/src/components/useForm.js":"65","/Users/karentovar/Documents/SCYTO/frontend/src/services/predictionService.js":"66","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/DateRangeSelector.js":"67","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/ProgramSelector.js":"68","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/ProjectSelector.js":"69","/Users/karentovar/Documents/SCYTO/frontend/src/components/ScrollToTop.js":"70","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Factors/ViewFactors.js":"71","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Graphics/ShowHistogram.js":"72","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Graphics/ShowBoxplot.js":"73","/Users/karentovar/Documents/SCYTO/frontend/src/services/getFileService.js":"74","/Users/karentovar/Documents/SCYTO/frontend/src/components/FileManager.js":"75","/Users/karentovar/Documents/SCYTO/frontend/src/services/projectService.js":"76","/Users/karentovar/Documents/SCYTO/frontend/src/services/reportService.js":"77","/Users/karentovar/Documents/SCYTO/frontend/src/services/factorService.js":"78","/Users/karentovar/Documents/SCYTO/frontend/src/services/dataService.js":"79","/Users/karentovar/Documents/SCYTO/frontend/src/services/programService.js":"80","/Users/karentovar/Documents/SCYTO/frontend/src/services/blogService.js":"81","/Users/karentovar/Documents/SCYTO/frontend/src/services/resourceService.js":"82","/Users/karentovar/Documents/SCYTO/frontend/src/services/organizationService.js":"83","/Users/karentovar/Documents/SCYTO/frontend/src/services/evidenceService.js":"84","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/AssignPermission.js":"85","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Test.js":"86","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ProgramServices.js":"87","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ProjectBook.js":"88","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/Calendar.js":"89","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/AvailabilityView.js":"90","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/AvailabilityEdit.js":"91","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/index.js":"92","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/reportWebVitals.js":"93","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/App.js":"94","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/SideMenu.js":"95","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/Header.js":"96","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Profile.js":"97","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Home.js":"98","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Register.js":"99","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/AboutUs.js":"100","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Factors/UpdateFactor.js":"101","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/AssignRole.js":"102","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Factors/CreateFactor.js":"103","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/ViewUsers.js":"104","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Login.js":"105","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/routing/RequireAuth.js":"106","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ShowProgram.js":"107","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ProjectForm.js":"108","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ViewProjects.js":"109","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ProgramServices.js":"110","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ShowProject.js":"111","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/AvailabilityEdit.js":"112","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Organization/ShowOrganization.js":"113","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ViewProgram.js":"114","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/AvailabilityView.js":"115","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Organization/OrganizationForm.js":"116","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ProgramForm.js":"117","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Evidence/EvidenceForm.js":"118","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Evidence/ViewEvidence.js":"119","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Resource/ResourceForm.js":"120","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Resource/ShowResource.js":"121","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Resource/ViewResource.js":"122","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Task/ShowTask.js":"123","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Task/TaskForm.js":"124","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ShowReport.js":"125","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ViewReports.js":"126","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Task/TaskView.js":"127","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ProjectBook.js":"128","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ReportForm.js":"129","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Evidence/ShowEvidence.js":"130","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Blog/ShowBlog.js":"131","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Data/UploadCSV.js":"132","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Data/ViewData.js":"133","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Data/CreateData.js":"134","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Blog/BlogForm.js":"135","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/Predictor.js":"136","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowGraphics.js":"137","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Organization/ViewOrganization.js":"138","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Blog/ViewBlog.js":"139","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Notice/NoticeForm.js":"140","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Notice/ShowNotice.js":"141","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ViewReportsDeadlines.js":"142","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Notice/ViewNotice.js":"143","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/PageHeader.js":"144","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/AlertMessage.js":"145","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Controls.js":"146","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/userService.js":"147","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/noticeService.js":"148","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/reportService.js":"149","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/TextArea.js":"150","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Select.js":"151","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/DatePicker.js":"152","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/InputButton.js":"153","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/RadioGroup.js":"154","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Checkbox.js":"155","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Input.js":"156","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Button.js":"157","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/CircularStatic.js":"158","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/ImageComponent.js":"159","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/useForm.js":"160","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/blogService.js":"161","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/organizationService.js":"162","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowBoxplot.js":"163","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowHistogram.js":"164","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/predictionService.js":"165","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/DateRangeSelector.js":"166","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/ProgramSelector.js":"167","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/ProjectSelector.js":"168","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/FileManager.js":"169","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/getFileService.js":"170","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/dataService.js":"171","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/Calendar.js":"172","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/taskService.js":"173","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/resourceService.js":"174","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/projectService.js":"175","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/evidenceService.js":"176","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/programService.js":"177","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/ScrollToTop.js":"178","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Factors/ViewFactors.js":"179","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/AssignPermission.js":"180","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Test.js":"181","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/factorService.js":"182"},{"size":500,"mtime":1648880812608,"results":"183","hashOfConfig":"184"},{"size":375,"mtime":1648880812624,"results":"185","hashOfConfig":"184"},{"size":13168,"mtime":1649111885615,"results":"186","hashOfConfig":"184"},{"size":5887,"mtime":1649119956723,"results":"187","hashOfConfig":"184"},{"size":5282,"mtime":1649031701520,"results":"188","hashOfConfig":"184"},{"size":4564,"mtime":1648880812623,"results":"189","hashOfConfig":"184"},{"size":788,"mtime":1648880812614,"results":"190","hashOfConfig":"184"},{"size":1283,"mtime":1648880812608,"results":"191","hashOfConfig":"184"},{"size":9217,"mtime":1649013827915,"results":"192","hashOfConfig":"184"},{"size":5920,"mtime":1648880812612,"results":"193","hashOfConfig":"184"},{"size":977,"mtime":1648880812607,"results":"194","hashOfConfig":"184"},{"size":5614,"mtime":1648880812612,"results":"195","hashOfConfig":"184"},{"size":12797,"mtime":1648880812623,"results":"196","hashOfConfig":"184"},{"size":10927,"mtime":1649013827916,"results":"197","hashOfConfig":"184"},{"size":8894,"mtime":1649013827915,"results":"198","hashOfConfig":"184"},{"size":6540,"mtime":1648963143107,"results":"199","hashOfConfig":"184"},{"size":12629,"mtime":1648962280279,"results":"200","hashOfConfig":"184"},{"size":7496,"mtime":1648880812611,"results":"201","hashOfConfig":"184"},{"size":5038,"mtime":1648880812620,"results":"202","hashOfConfig":"184"},{"size":8893,"mtime":1648961967701,"results":"203","hashOfConfig":"184"},{"size":5090,"mtime":1648880812611,"results":"204","hashOfConfig":"184"},{"size":7418,"mtime":1648880812620,"results":"205","hashOfConfig":"184"},{"size":8622,"mtime":1648963033317,"results":"206","hashOfConfig":"184"},{"size":12181,"mtime":1648880812620,"results":"207","hashOfConfig":"184"},{"size":6736,"mtime":1648880812621,"results":"208","hashOfConfig":"184"},{"size":12229,"mtime":1648880812612,"results":"209","hashOfConfig":"184"},{"size":15262,"mtime":1648880812620,"results":"210","hashOfConfig":"184"},{"size":15709,"mtime":1648880812619,"results":"211","hashOfConfig":"184"},{"size":9407,"mtime":1649017475151,"results":"212","hashOfConfig":"184"},{"size":12431,"mtime":1648963173145,"results":"213","hashOfConfig":"184"},{"size":7491,"mtime":1648880812609,"results":"214","hashOfConfig":"184"},{"size":28686,"mtime":1648880812610,"results":"215","hashOfConfig":"184"},{"size":11761,"mtime":1648880812621,"results":"216","hashOfConfig":"184"},{"size":6160,"mtime":1648880812609,"results":"217","hashOfConfig":"184"},{"size":14353,"mtime":1649029118852,"results":"218","hashOfConfig":"184"},{"size":9623,"mtime":1648880812619,"results":"219","hashOfConfig":"184"},{"size":140,"mtime":1648880812610,"results":"220","hashOfConfig":"184"},{"size":32454,"mtime":1648880812610,"results":"221","hashOfConfig":"184"},{"size":2559,"mtime":1648880812613,"results":"222","hashOfConfig":"184"},{"size":14378,"mtime":1649019750108,"results":"223","hashOfConfig":"184"},{"size":11530,"mtime":1649119892041,"results":"224","hashOfConfig":"184"},{"size":6693,"mtime":1648880812616,"results":"225","hashOfConfig":"184"},{"size":6047,"mtime":1648962282495,"results":"226","hashOfConfig":"184"},{"size":7522,"mtime":1648880812614,"results":"227","hashOfConfig":"184"},{"size":12136,"mtime":1648880812615,"results":"228","hashOfConfig":"184"},{"size":6185,"mtime":1648880812615,"results":"229","hashOfConfig":"184"},{"size":6513,"mtime":1648880812619,"results":"230","hashOfConfig":"184"},{"size":15932,"mtime":1648880812621,"results":"231","hashOfConfig":"184"},{"size":995,"mtime":1648880812603,"results":"232","hashOfConfig":"184"},{"size":1507,"mtime":1648880812604,"results":"233","hashOfConfig":"184"},{"size":1938,"mtime":1648880812627,"results":"234","hashOfConfig":"184"},{"size":1118,"mtime":1648880812627,"results":"235","hashOfConfig":"184"},{"size":460,"mtime":1648880812605,"results":"236","hashOfConfig":"184"},{"size":505,"mtime":1648880812607,"results":"237","hashOfConfig":"184"},{"size":874,"mtime":1648880812606,"results":"238","hashOfConfig":"184"},{"size":739,"mtime":1648880812605,"results":"239","hashOfConfig":"184"},{"size":814,"mtime":1648880812605,"results":"240","hashOfConfig":"184"},{"size":1033,"mtime":1648880812605,"results":"241","hashOfConfig":"184"},{"size":920,"mtime":1648880812606,"results":"242","hashOfConfig":"184"},{"size":476,"mtime":1648880812606,"results":"243","hashOfConfig":"184"},{"size":802,"mtime":1648880812606,"results":"244","hashOfConfig":"184"},{"size":1103,"mtime":1648880812626,"results":"245","hashOfConfig":"184"},{"size":4147,"mtime":1648880812603,"results":"246","hashOfConfig":"184"},{"size":1787,"mtime":1648880812603,"results":"247","hashOfConfig":"184"},{"size":1929,"mtime":1648880812607,"results":"248","hashOfConfig":"184"},{"size":747,"mtime":1648880812626,"results":"249","hashOfConfig":"184"},{"size":2657,"mtime":1648880812616,"results":"250","hashOfConfig":"184"},{"size":7647,"mtime":1648880812617,"results":"251","hashOfConfig":"184"},{"size":6906,"mtime":1648880812617,"results":"252","hashOfConfig":"184"},{"size":1733,"mtime":1648880812604,"results":"253","hashOfConfig":"184"},{"size":7618,"mtime":1648880812613,"results":"254","hashOfConfig":"184"},{"size":2588,"mtime":1648880812614,"results":"255","hashOfConfig":"184"},{"size":1235,"mtime":1648880812613,"results":"256","hashOfConfig":"184"},{"size":1207,"mtime":1648880812625,"results":"257","hashOfConfig":"184"},{"size":3328,"mtime":1648880812603,"results":"258","hashOfConfig":"184"},{"size":1160,"mtime":1648880812626,"results":"259","hashOfConfig":"184"},{"size":1380,"mtime":1648880812626,"results":"260","hashOfConfig":"184"},{"size":1167,"mtime":1648880812625,"results":"261","hashOfConfig":"184"},{"size":1185,"mtime":1648880812625,"results":"262","hashOfConfig":"184"},{"size":1117,"mtime":1648880812626,"results":"263","hashOfConfig":"184"},{"size":1075,"mtime":1648880812625,"results":"264","hashOfConfig":"184"},{"size":1127,"mtime":1648880812627,"results":"265","hashOfConfig":"184"},{"size":1183,"mtime":1648880812626,"results":"266","hashOfConfig":"184"},{"size":1127,"mtime":1648880812625,"results":"267","hashOfConfig":"184"},{"size":9304,"mtime":1648880812622,"results":"268","hashOfConfig":"184"},{"size":345,"mtime":1648880812624,"results":"269","hashOfConfig":"184"},{"size":10854,"mtime":1649118000631,"results":"270","hashOfConfig":"184"},{"size":3023,"mtime":1649120676831,"results":"271","hashOfConfig":"184"},{"size":19825,"mtime":1649051690662,"results":"272","hashOfConfig":"184"},{"size":14252,"mtime":1649119842114,"results":"273","hashOfConfig":"184"},{"size":8228,"mtime":1649119897162,"results":"274","hashOfConfig":"184"},{"size":500,"mtime":1648880812608,"results":"275","hashOfConfig":"276"},{"size":375,"mtime":1648880812624,"results":"277","hashOfConfig":"276"},{"size":13168,"mtime":1649111885615,"results":"278","hashOfConfig":"276"},{"size":5887,"mtime":1649119956723,"results":"279","hashOfConfig":"276"},{"size":5282,"mtime":1649031701520,"results":"280","hashOfConfig":"276"},{"size":12797,"mtime":1648880812623,"results":"281","hashOfConfig":"276"},{"size":788,"mtime":1648880812614,"results":"282","hashOfConfig":"276"},{"size":8894,"mtime":1649013827915,"results":"283","hashOfConfig":"276"},{"size":1283,"mtime":1648880812608,"results":"284","hashOfConfig":"276"},{"size":5920,"mtime":1648880812612,"results":"285","hashOfConfig":"276"},{"size":9217,"mtime":1649013827915,"results":"286","hashOfConfig":"276"},{"size":5614,"mtime":1648880812612,"results":"287","hashOfConfig":"276"},{"size":10927,"mtime":1649013827916,"results":"288","hashOfConfig":"276"},{"size":4564,"mtime":1648880812623,"results":"289","hashOfConfig":"276"},{"size":977,"mtime":1648880812607,"results":"290","hashOfConfig":"276"},{"size":6540,"mtime":1648963143107,"results":"291","hashOfConfig":"276"},{"size":11530,"mtime":1649119892041,"results":"292","hashOfConfig":"276"},{"size":14353,"mtime":1649029118852,"results":"293","hashOfConfig":"276"},{"size":10854,"mtime":1649118000631,"results":"294","hashOfConfig":"276"},{"size":14378,"mtime":1649019750108,"results":"295","hashOfConfig":"276"},{"size":8998,"mtime":1650258727266,"results":"296","hashOfConfig":"276"},{"size":6047,"mtime":1648962282495,"results":"297","hashOfConfig":"276"},{"size":12431,"mtime":1648963173145,"results":"298","hashOfConfig":"276"},{"size":14900,"mtime":1650258453717,"results":"299","hashOfConfig":"276"},{"size":8893,"mtime":1648961967701,"results":"300","hashOfConfig":"276"},{"size":8622,"mtime":1648963033317,"results":"301","hashOfConfig":"276"},{"size":7496,"mtime":1648880812611,"results":"302","hashOfConfig":"276"},{"size":12229,"mtime":1648880812612,"results":"303","hashOfConfig":"276"},{"size":7418,"mtime":1648880812620,"results":"304","hashOfConfig":"276"},{"size":5038,"mtime":1648880812620,"results":"305","hashOfConfig":"276"},{"size":12181,"mtime":1648880812620,"results":"306","hashOfConfig":"276"},{"size":6736,"mtime":1648880812621,"results":"307","hashOfConfig":"276"},{"size":11761,"mtime":1648880812621,"results":"308","hashOfConfig":"276"},{"size":6513,"mtime":1648880812619,"results":"309","hashOfConfig":"276"},{"size":15709,"mtime":1648880812619,"results":"310","hashOfConfig":"276"},{"size":15932,"mtime":1648880812621,"results":"311","hashOfConfig":"276"},{"size":3081,"mtime":1650260707655,"results":"312","hashOfConfig":"276"},{"size":9623,"mtime":1648880812619,"results":"313","hashOfConfig":"276"},{"size":5090,"mtime":1648880812611,"results":"314","hashOfConfig":"276"},{"size":6160,"mtime":1648880812609,"results":"315","hashOfConfig":"276"},{"size":140,"mtime":1648880812610,"results":"316","hashOfConfig":"276"},{"size":32454,"mtime":1648880812610,"results":"317","hashOfConfig":"276"},{"size":28686,"mtime":1648880812610,"results":"318","hashOfConfig":"276"},{"size":7491,"mtime":1648880812609,"results":"319","hashOfConfig":"276"},{"size":6693,"mtime":1648880812616,"results":"320","hashOfConfig":"276"},{"size":2559,"mtime":1648880812613,"results":"321","hashOfConfig":"276"},{"size":12629,"mtime":1648962280279,"results":"322","hashOfConfig":"276"},{"size":9407,"mtime":1649017475151,"results":"323","hashOfConfig":"276"},{"size":7522,"mtime":1648880812614,"results":"324","hashOfConfig":"276"},{"size":6185,"mtime":1648880812615,"results":"325","hashOfConfig":"276"},{"size":15262,"mtime":1648880812620,"results":"326","hashOfConfig":"276"},{"size":12136,"mtime":1648880812615,"results":"327","hashOfConfig":"276"},{"size":1507,"mtime":1648880812604,"results":"328","hashOfConfig":"276"},{"size":995,"mtime":1648880812603,"results":"329","hashOfConfig":"276"},{"size":460,"mtime":1648880812605,"results":"330","hashOfConfig":"276"},{"size":1938,"mtime":1648880812627,"results":"331","hashOfConfig":"276"},{"size":1103,"mtime":1648880812626,"results":"332","hashOfConfig":"276"},{"size":1380,"mtime":1648880812626,"results":"333","hashOfConfig":"276"},{"size":505,"mtime":1648880812607,"results":"334","hashOfConfig":"276"},{"size":920,"mtime":1648880812606,"results":"335","hashOfConfig":"276"},{"size":814,"mtime":1648880812605,"results":"336","hashOfConfig":"276"},{"size":874,"mtime":1648880812606,"results":"337","hashOfConfig":"276"},{"size":802,"mtime":1648880812606,"results":"338","hashOfConfig":"276"},{"size":1033,"mtime":1648880812605,"results":"339","hashOfConfig":"276"},{"size":476,"mtime":1648880812606,"results":"340","hashOfConfig":"276"},{"size":739,"mtime":1648880812605,"results":"341","hashOfConfig":"276"},{"size":1787,"mtime":1648880812603,"results":"342","hashOfConfig":"276"},{"size":4147,"mtime":1648880812603,"results":"343","hashOfConfig":"276"},{"size":1929,"mtime":1648880812607,"results":"344","hashOfConfig":"276"},{"size":1075,"mtime":1648880812625,"results":"345","hashOfConfig":"276"},{"size":1183,"mtime":1648880812626,"results":"346","hashOfConfig":"276"},{"size":1235,"mtime":1648880812613,"results":"347","hashOfConfig":"276"},{"size":2588,"mtime":1648880812614,"results":"348","hashOfConfig":"276"},{"size":747,"mtime":1648880812626,"results":"349","hashOfConfig":"276"},{"size":2657,"mtime":1648880812616,"results":"350","hashOfConfig":"276"},{"size":7647,"mtime":1648880812617,"results":"351","hashOfConfig":"276"},{"size":6906,"mtime":1648880812617,"results":"352","hashOfConfig":"276"},{"size":3328,"mtime":1648880812603,"results":"353","hashOfConfig":"276"},{"size":1207,"mtime":1648880812625,"results":"354","hashOfConfig":"276"},{"size":1185,"mtime":1648880812625,"results":"355","hashOfConfig":"276"},{"size":19825,"mtime":1649051690662,"results":"356","hashOfConfig":"276"},{"size":1118,"mtime":1648880812627,"results":"357","hashOfConfig":"276"},{"size":1127,"mtime":1648880812627,"results":"358","hashOfConfig":"276"},{"size":1160,"mtime":1648880812626,"results":"359","hashOfConfig":"276"},{"size":1127,"mtime":1648880812625,"results":"360","hashOfConfig":"276"},{"size":1117,"mtime":1648880812626,"results":"361","hashOfConfig":"276"},{"size":1733,"mtime":1648880812604,"results":"362","hashOfConfig":"276"},{"size":7618,"mtime":1648880812613,"results":"363","hashOfConfig":"276"},{"size":9304,"mtime":1648880812622,"results":"364","hashOfConfig":"276"},{"size":345,"mtime":1648880812624,"results":"365","hashOfConfig":"276"},{"size":1167,"mtime":1648880812625,"results":"366","hashOfConfig":"276"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},"zp3j5y",{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"369"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"369"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"369"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"369"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"369"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"369"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"369"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"369"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"369"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"369"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"369"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"369"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"369"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"369"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"369"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"369"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"369"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"369"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"369"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"369"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"369"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"369"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"369"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"369"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"369"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"369"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"369"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"369"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"369"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"369"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"369"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"369"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"369"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"369"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"369"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"369"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"369"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"369"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"369"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"369"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"369"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"369"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"369"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"369"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"369"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"369"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"369"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"369"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"369"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"369"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"369"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"369"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":3,"source":"590","usedDeprecatedRules":"369"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"369"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"auin9d",{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":3,"source":"590"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karentovar/Documents/SCYTO/frontend/src/index.js",[],["791","792"],"/Users/karentovar/Documents/SCYTO/frontend/src/reportWebVitals.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/App.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/SideMenu.js",["793","794","795","796","797","798","799","800","801","802","803"],"/Users/karentovar/Documents/SCYTO/frontend/src/components/Header.js",["804","805","806","807","808","809"],"import React from 'react'\r\nimport { AppBar, Toolbar, makeStyles, CssBaseline } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from \"axios\";\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        \r\n    },\r\n    toolbarButtons: {\r\n        marginLeft: 'auto',\r\n    },\r\n\r\n}));\r\n\r\nexport default function Header() {\r\n    const history = useHistory();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [header, setHeader] = useState('');\r\n    const open = Boolean(anchorEl);\r\n    const image = localStorage.getItem(\"image\");\r\n\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await headerName();\r\n        return () => {unmounted = true};\r\n    }, []);\r\n\r\n    const headerName = async () => {\r\n        try {\r\n            const uid = localStorage.getItem(\"uid\");\r\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/users/${uid}`, config);\r\n            console.log(\"WENAAAS\");\r\n            console.log(response);\r\n            setHeader(response.data.user.roles[0].projectName);\r\n        }\r\n        catch(error){\r\n            console.log(\"Wenuuuski\");\r\n        }\r\n    \r\n    }\r\n\r\n    function setName(){\r\n        console.log(header);\r\n        let name = \"Scyto: Gestor de servicios de laboratorios\";\r\n        if(header !== ''){\r\n            name = \"Scyto: Gestor de servicios de \" + header;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push(\"/login\");\r\n    };\r\n    const classes = useStyles();\r\n\r\n    const profileHandler = () =>{\r\n        const uid = localStorage.getItem(\"uid\");\r\n        history.push(`/profile/${uid}`);\r\n    }\r\n\r\n    const home= () =>{\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar style={{backgroundColor: '#465771'}}>\r\n                    <div onClick={home}>\r\n                        <IconButton \r\n                            color=\"inherit\"    \r\n                        >\r\n                            <Typography variant=\"h6\" noWrap >\r\n                                {setName()}\r\n                            </Typography>\r\n                        </IconButton>\r\n                        \r\n                    </div>\r\n                    <div className={classes.toolbarButtons}>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <Avatar\r\n                            src={image? image: \"\"}\r\n                            alt=\"\"                            \r\n                            >\r\n\r\n                            </Avatar>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            getContentAnchorEl={null}\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: \"top\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={profileHandler}>Ver Perfil</MenuItem>\r\n                            <MenuItem onClick={logoutHandler}>Salir</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Login.js",["810","811","812","813","814","815","816"],"import React, { useState, useEffect, } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport Grid from '@mui/material/Grid'\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport logo from '../../assets/img/logo.png'\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n    margin: '50px 0 0 0',\r\n    width: '90%',\r\n    padding: theme.spacing(3)\r\n  },\r\n  inputField: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: 'center'\r\n  },\r\n}))\r\n\r\nconst Login = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const login = async () => {\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        process.env.REACT_APP_API_URL + \"/api/auth/login\", values, config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n      localStorage.setItem(\"uid\", data.id);\r\n      localStorage.setItem(\"image\", data.image);\r\n      localStorage.setItem(\"type\", data.type);\r\n      window.location.reload();\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setOpen(true);\r\n      console.log(error.response);\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n        setOpen(false);\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (validate())\r\n      await login();\r\n    setLoading(false);\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('email' in fieldValues)\r\n      temp.email = fieldValues.email ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? \"\" : \"Este campo es obligatorio.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialValues, true, validate);\r\n\r\n  return (\r\n    <div className=\"login-content\">\r\n      <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n        </Grid>\r\n\r\n      <div className=\"login-screen\">       \r\n\r\n        {/* <form onSubmit={loginHandler} className=\"login-screen__form\"> */}\r\n        <Form onSubmit={loginHandler} className=\"login-screen__form\">\r\n          <div className={classes.programholder} hidden={!loading}>\r\n            <Fade\r\n              in={loading}\r\n              style={{\r\n                transitionDelay: '0m',\r\n              }}\r\n              unmountOnExit\r\n            >\r\n              <CircularProgress />\r\n            </Fade>\r\n            <br />\r\n          </div>\r\n          <h3 className=\"login-screen__title\">Inicia Sesión</h3>\r\n          <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\r\n\r\n          <Grid item xs={12}>\r\n            <Controls.Input\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={values.email}\r\n              onChange={handleInputChange}\r\n              className={classes.inputField}\r\n              error={errors.email}\r\n            />\r\n            <Controls.Input\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onChange={handleInputChange}\r\n              className={classes.inputField}\r\n              error={errors.password}\r\n            />\r\n          </Grid>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Inicia Sesión\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Login;","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Home.js",["817"],"import FileManager from '../components/FileManager';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport React from 'react'\r\n\r\nconst Home = ({ history }) => {    \r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <h1>Scyto: Gestor de servicios de laboratorios</h1>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <h2>El mejor lugar para sacar citas para sus servicios de laboratorio.</h2>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","/Users/karentovar/Documents/SCYTO/frontend/src/pages/AboutUs.js",["818"],"import React from 'react'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport logo from \"../assets/img/logo.png\";\r\nimport Controls from \"../components/controls/Controls\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport default function AboutUs() {\r\n    const history = useHistory();\r\n    const handleGoBack = () => {\r\n        history.push(\"/\");\r\n      };\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <Controls.Button\r\n              variant=\"contained\"\r\n              onClick={handleGoBack}\r\n              style={{\r\n                borderRadius: 0,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n              }}\r\n              text=\"Atrás\"\r\n            />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h1>Acerca del equipo:</h1>\r\n                    <br/>\r\n                    <h2>Desarrolladores:</h2>\r\n                    <p>Erick Blanco</p>\r\n                    <p>Luis Castillo</p>\r\n                    <p>Luis Ortiz</p>\r\n                    <br/>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/AssignRole.js",["819","820","821","822","823","824","825","826"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AssignRole = ({ }) => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [projects, setProjects] = React.useState([{ name: \"\" }]);\r\n    const [users, setUsers] = React.useState([{ username: \" \" }]);\r\n    const [selectedUser, setSelectedUser] = React.useState(false);\r\n    const [selectedProject, setSelectedProject] = React.useState(false);\r\n    const [roleType, setRole] = useState(\"investigador\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const [inputUser, setInputUser] = React.useState('');\r\n    const [inputProject, setInputProject] = React.useState('');\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n    function wrapUsers(users) {\r\n\r\n        setUsers(users);\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    function wrapProjects(projects) {\r\n        setProjects(projects);\r\n        setLoading(false);\r\n        setSelectedUser(true);\r\n\r\n    }\r\n\r\n    function cleanForm() {\r\n        setSelectedProject(false);\r\n        setRole(\"investigador\");\r\n        setInputProject(\"\");\r\n        \r\n    }\r\n\r\n    async function getBio(userValue) {\r\n        try {\r\n            setLoading(true);\r\n            setSelectedUser(false);\r\n            const projects = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/filteredprogram/${userValue.id}`,\r\n                config\r\n            );\r\n            console.log(projects);\r\n            wrapProjects(projects.data.programs);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        async function getUsers() {\r\n            try {\r\n                const users = await axios.get(\r\n                    process.env.REACT_APP_API_URL + \"/api/private/gestores/\",\r\n                    config\r\n                );\r\n                wrapUsers(users.data.users);\r\n\r\n\r\n            } catch (error) {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 5000);\r\n                setLoading(false);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n        }\r\n\r\n\r\n        getUsers();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const [projectValue, setprojectValue] = React.useState(projects[0]);\r\n    const [userValue, setuserValue] = React.useState(users[0]);\r\n\r\n    const roleItems = [\r\n        { id: 'investigador', title: 'Investigador' },\r\n        { id: 'asistente', title: 'Asistente' },\r\n    ]\r\n\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (selectedUser === false || selectedProject === false) {\r\n\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            setLoading(false)\r\n            return setError(\"Seleccione un proyecto\");\r\n        }\r\n\r\n\r\n        try {\r\n            const role = {\r\n                projectId: projectValue.id,\r\n                projectName: projectValue.name,\r\n                role: roleType,\r\n                editFactor: true,\r\n                editData: true,\r\n                export: true\r\n            }\r\n            userValue.roles.push(role);\r\n            const { data } = await axios.patch(\r\n                `${process.env.REACT_APP_API_URL}/api/private/users/${userValue.id}`,\r\n                {\r\n                    username: userValue.username,\r\n                    email: userValue.email,\r\n                    type: userValue.type,\r\n                    roles: userValue.roles\r\n                },\r\n                config\r\n            );\r\n            await getBio(userValue);\r\n            setLoading(false);\r\n            setOpen(true);\r\n            cleanForm();\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n            }, 6000);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        programholder: {\r\n            height: 40,\r\n            textAlign: 'center'\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div className=\"register-screen\">\r\n\r\n            <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n                <div className={classes.programholder} hidden={!loading}>\r\n                    <Fade\r\n                        in={loading}\r\n                        style={{\r\n                            transitionDelay: '0m',\r\n                        }}\r\n                        unmountOnExit\r\n                    >\r\n                        <CircularProgress />\r\n                    </Fade>\r\n                    <br />\r\n                </div>\r\n\r\n                <Collapse in={open}>\r\n                    <Alert\r\n                        severity={error ? \"error\" : \"success\"}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setOpen(false);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        }\r\n                    >\r\n                        {error ? error : 'Se ha asociado el laboratorio!'}\r\n                    </Alert>\r\n                </Collapse>\r\n\r\n                <h3 className=\"register-screen__title\">Asignar laboratorio a usuario existente</h3>\r\n                {error && <span className=\"error-message\">{error}</span>}\r\n                <br />\r\n                <div >\r\n                    <Autocomplete\r\n                        value={userValue}\r\n                        onChange={(event, newValue) => {\r\n                            setuserValue(newValue);\r\n                            setSelectedUser(true);\r\n                            setSelectedProject(false);\r\n                            console.log(newValue);\r\n                            getBio(newValue);\r\n                        }}\r\n                        id=\"combo-box-users\"\r\n                        options={users}\r\n                        getOptionLabel={(option) => option.username}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Gestor\" variant=\"outlined\" />}\r\n                        disabled={loading}\r\n                        disableClearable\r\n                        inputValue={inputUser}\r\n                        onInputChange={(event, newInputValue) => {\r\n                            setInputUser(newInputValue);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                    <Autocomplete\r\n                        value={projectValue}\r\n                        onChange={(event, newValue) => {\r\n                            setprojectValue(newValue);\r\n                            setSelectedProject(true);\r\n                        }}\r\n                        id=\"combo-box-assign\"\r\n                        options={projects}\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Laboratorios\" variant=\"outlined\" />}\r\n                        disabled={!selectedUser}\r\n                        disableClearable\r\n                        inputValue={inputProject}\r\n                        onInputChange={(event, newInputValue) => {\r\n                            setInputProject(newInputValue);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Asignar laboratorio\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignRole;\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Factors/UpdateFactor.js",["827","828","829","830"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from \"../../components/useForm\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { Paper, makeStyles, Box } from \"@material-ui/core\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { editFactor } from \"../../services/factorService\";\r\n\r\nconst typeItems = [\r\n  { id: \"value\", title: \"Valor\" },\r\n  { id: \"image\", title: \"Imagen\" },\r\n];\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isDependent: false,\r\n  type: \"\",\r\n  projectID: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: '50px 0 0 0',\r\n    width: '90%',\r\n    padding: theme.spacing(3)\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: \"center\",\r\n    width: '90%'\r\n  },\r\n}));\r\n\r\nexport default function Updatefactor() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    getFactor();\r\n    return () => { unmounted = true; };\r\n  }, []);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"name\" in fieldValues)\r\n      temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\";\r\n    if (\"description\" in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? \"\"\r\n        : \"Este campo es obligatorio.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initialValues, true, validate);\r\n\r\n  const getFactor = async () => {\r\n    try {\r\n        let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/factor/${id}`, config);\r\n        setValues(response.data.factor);\r\n        setLoading(false);        \r\n    } catch (error) {\r\n        setTimeout(() => {\r\n        setOpen(false);\r\n        setTimeout(() => {\r\n            setError(\"\");\r\n        }, 2000);\r\n\r\n        }, 5000);\r\n        setOpen(true);\r\n        setLoading(false);\r\n        return setError(\"Authentication failed!\");\r\n    }\r\n  }\r\n\r\n  const confirmPost = () => {\r\n    setOpen(true);\r\n    resetForm({});\r\n    setTimeout(function () {\r\n      setOpen(false);\r\n    }, 6000);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n      try {\r\n        console.log(values);\r\n        editFactor(id,values).then(confirmPost).catch(console.log);\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setTimeout(() => {\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 2000);\r\n        }, 5000);\r\n        return setError(\"Authentication failed!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Editar Factor\"        \r\n        icon={<EcoIcon fontSize=\"large\" color=\"primary\" />}\r\n      />\r\n      <div className={classes.programholder} hidden={!loading}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: \"0m\",\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n        <br />\r\n      </div>\r\n      <Paper className={classes.pageContent}>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Collapse in={open}>\r\n            <Alert\r\n              severity={error ? \"error\" : \"success\"}\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              {error ? error : \"Se ha editado el factor!\"}\r\n            </Alert>\r\n          </Collapse>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Controls.Input\r\n                name=\"name\"\r\n                label=\"Nombre\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                error={errors.name}\r\n              />\r\n              <Controls.Input\r\n                label=\"Descripción\"\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n                error={errors.description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Controls.Checkbox\r\n                name=\"isDependent\"\r\n                label=\"Es dependiente\"\r\n                value={values.isDependent}\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n              <div>\r\n                <Controls.Button type=\"submit\" text=\"Editar\" />\r\n\r\n                <Controls.Button\r\n                  text=\"Limpiar\"\r\n                  color=\"default\"\r\n                  onClick={resetForm}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/components/routing/RequireAuth.js",["831"],"import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function RequireAuth({ component: Component, ...rest }) {\r\n    const history = useHistory();\r\n\r\n    function isTokenExpired(token) {\r\n        if(token){\r\n            const payloadBase64 = token.split('.')[1];\r\n            const decodedJson = Buffer.from(payloadBase64, 'base64').toString();\r\n            const decoded = JSON.parse(decodedJson);\r\n            const exp = decoded.exp;\r\n            const expired = (Date.now() >= exp * 1000)\r\n            return expired\r\n        }\r\n        \r\n    }\r\n\r\n    if(isTokenExpired(localStorage.getItem(\"authToken\"))){\r\n        localStorage.clear();\r\n    }\r\n    if (!localStorage.getItem(\"authToken\")){\r\n        history.push('/login');        \r\n    }\r\n    \r\n    return(\r\n        <Route\r\n      {...rest}\r\n      render={(props) =>\r\n          <Component {...props} />\r\n      }\r\n    />\r\n    );\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Factors/CreateFactor.js",["832","833","834","835","836"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from \"../../components/useForm\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { Paper, makeStyles, Box } from \"@material-ui/core\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { addFactor } from \"../../services/factorService\";\r\n\r\nconst typeItems = [\r\n  { id: \"value\", title: \"Valor\" },\r\n  { id: \"image\", title: \"Imagen\" },\r\n];\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isDependent: false,\r\n  type: \"value\",\r\n  projectID: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: '50px 0 0 0',\r\n    width: '90%',\r\n    padding: theme.spacing(3)\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: \"center\",\r\n    width: '90%'\r\n  },\r\n}));\r\n\r\nexport default function CreateFactor() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"name\" in fieldValues)\r\n      temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\";\r\n    if (\"description\" in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? \"\"\r\n        : \"Este campo es obligatorio.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initialValues, true, validate);\r\n\r\n  const confirmPost = () => {\r\n    setOpen(true);\r\n    setLoading(false);\r\n    resetForm({});\r\n    setTimeout(function () {\r\n      setOpen(false);\r\n    }, 6000);\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n      try {\r\n        values.projectID = id;\r\n        await addFactor(values).then(confirmPost).catch(console.log);\r\n        \r\n        \r\n      } catch (error) {\r\n        setLoading(false);\r\n        setTimeout(() => {\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 2000);\r\n        }, 5000);\r\n        return setError(\"Authentication failed!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Añadir nuevo factor\"   \r\n        subTitle=\"El factor creado va a estar ligado a este proyecto\"     \r\n        icon={<EcoIcon fontSize=\"large\" color=\"primary\" />}\r\n      />\r\n      <div className={classes.programholder} hidden={!loading}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: \"0m\",\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n        <br />\r\n      </div>\r\n      <Paper className={classes.pageContent} >\r\n        <Form onSubmit={handleSubmit}>\r\n          <Collapse in={open}>\r\n            <Alert\r\n              severity={error ? \"error\" : \"success\"}\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              {error ? error : \"Se ha agregado un nuevo factor!\"}\r\n            </Alert>\r\n          </Collapse>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Controls.Input\r\n                name=\"name\"\r\n                label=\"Nombre\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                error={errors.name}\r\n              />\r\n              <Controls.Input\r\n                label=\"Descripción\"\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n                error={errors.description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Controls.RadioGroup\r\n                name=\"type\"\r\n                label=\"Tipo\"\r\n                value={values.type}\r\n                onChange={handleInputChange}\r\n                items={typeItems}\r\n              />\r\n              <Controls.Checkbox\r\n                name=\"isDependent\"\r\n                label=\"Es dependiente\"\r\n                value={values.isDependent}\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n              <div>\r\n                <Controls.Button type=\"submit\" text=\"Agregar\" />\r\n\r\n                <Controls.Button\r\n                  text=\"Limpiar\"\r\n                  color=\"default\"\r\n                  onClick={resetForm}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Profile.js",["837","838","839"],"import React from 'react'\r\nimport { Paper, makeStyles } from '@material-ui/core'\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularStatic from '../../components/CircularStatic'\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport axios from 'axios';\r\nimport ImageComponent from '../../components/ImageComponent';\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport Header from \"../../components/Header\";\r\nimport SideMenu from \"../../components/SideMenu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        backgroundColor: 'white',\r\n        paddingTop: \"25px\"\r\n    },\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '100%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    pageContent2: {\r\n        margin: '50px 0 0 50px',\r\n        width: '30%',\r\n    },\r\n    right: {\r\n        display: \"inline-flex\",\r\n        flex: \"row\",\r\n        width: '90%'\r\n    },\r\n    gridContainer: {\r\n        marginBottom: '40px'\r\n    }\r\n}))\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    email: '',\r\n    name: '',\r\n    lastname: '',\r\n    phone: '',\r\n    roles: [],\r\n    type: '',\r\n    image:'',\r\n    details: ''\r\n\r\n}\r\n\r\nexport default function Profile() {\r\n    const { id } = useParams();\r\n    const uid = localStorage.getItem(\"uid\");\r\n    const isUser = uid===id ? true:false;\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        }, onUploadProgress: (data) => {\r\n            //Set the progress value to show the progress bar\r\n            setProgress(Math.round((100 * data.loaded) / data.total));\r\n        },\r\n    };\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        var pattern = new RegExp(/^[0-9\\b]+$/);\r\n        if ('phone' in fieldValues){\r\n            //temp.phone = fieldValues.phone.length === 8 ? \"\": \"El número debe ser de 8 dígitos\"            \r\n            if(fieldValues.phone)\r\n                temp.phone = !pattern.test(fieldValues.phone) ? \"Por favor ingrese solo números\": \"\";\r\n        }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await getUser();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n\r\n    const getUser = async () => {\r\n        setLoading(true);\r\n        try {\r\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/users/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n                },\r\n                onDownloadProgress: (data) => {\r\n                    //Set the progress value to show the progress bar                    \r\n                    setProgress(Math.round((100 * data.loaded) / data.total));\r\n                },\r\n            });\r\n            setValues(response.data.user);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setOpen(true);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const handleChange = (event) => {\r\n        setEdit(event.target.value);\r\n      };\r\n\r\n    const confirmPost = async () => {\r\n        localStorage.setItem(\"image\", values.image);\r\n        setOpen(true);\r\n        setLoading(false);\r\n        setTimeout(function () {\r\n            setOpen(false);\r\n        }, 4000);\r\n    }  \r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            setLoading(true);\r\n            try {\r\n                await axios\r\n                    .patch(`${process.env.REACT_APP_API_URL}/api/private/users/${id}`, values, config)\r\n                    .then(confirmPost)\r\n\r\n            }\r\n\r\n            catch (error) {\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    setTimeout(() => {\r\n                        setError(\"\");\r\n                    }, 2000);\r\n                }, 5000);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n\r\n        }        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header image = {values.image} />\r\n            <SideMenu />\r\n            <CircularStatic progress={progress} hidden={!loading} />\r\n            <PageHeader\r\n                title=\"Información detallada de un usuario\"\r\n                subTitle=\"Puedes ver y modificar algunos campos\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <Grid item className={classes.right}>\r\n                <Paper className={classes.pageContent}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <AlertMessage errorMessage={error} successMessage={\"Se ha actualizado el usuario!\"} openMessage={open} />\r\n                        <div hidden={!isUser}>\r\n                            <Grid container\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ textAlign: 'center' }}>    \r\n                                <Controls.Checkbox\r\n                                        name=\"edit\"\r\n                                        label=\"Editar usuario\"\r\n                                        value={edit}\r\n                                        style={{alignItems: \"center\"}}\r\n                                        onChange={handleChange}                                    \r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                        <Grid container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ textAlign: 'center' }}>\r\n                            <Grid item xs={12} className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    name=\"name\"\r\n                                    label=\"Nombre\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.name}\r\n                                    disabled={!edit}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    label=\"Apellido\"\r\n                                    name=\"lastname\"\r\n                                    value={values.lastname}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.lastname}\r\n                                    disabled={!edit}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    name=\"phone\"\r\n                                    label=\"Número\"\r\n                                    value={values.phone}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.phone}\r\n                                    disabled={!edit}\r\n\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}  className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    name=\"details\"\r\n                                    label=\"Dirección\"\r\n                                    value={values.details}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.details}\r\n                                    disabled={!edit}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ marginTop: '20px' }}\r\n                                \r\n                            >\r\n                                <div hidden={!edit}>\r\n                                    <Controls.Button\r\n                                        type=\"submit\"\r\n                                        text=\"Guardar\"\r\n                                    />\r\n\r\n                                    <Controls.Button\r\n                                        text=\"Limpiar\"\r\n                                        color=\"inherit\"\r\n                                        onClick={resetForm} />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Form>\r\n                </Paper>\r\n                <div className={classes.pageContent2}>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <ImageComponent initialValues={values} onChange={handleInputChange} profile={true} />\r\n                        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{ backgroundColor: \"green\" }}>\r\n                                        <WorkIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Id\" secondary={values ? values._id : \"\"} />\r\n\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{ backgroundColor: \"green\" }}>\r\n                                        <MailOutlineIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Email\" secondary={values ? values.email : \"\"} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{ backgroundColor: \"green\" }}>\r\n                                        <PeopleAltIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Usuario\" secondary={values ? values.username : \"\"} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/ViewUsers.js",["840","841","842","843","844","845","846","847"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteUser } from '../../services/userService';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport axios from \"axios\";\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport Modal from '@mui/material/Modal';\r\nimport AssignPermission from './AssignPermission';\r\nimport Test from './Test';\r\nimport { resolveCname } from 'dns';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#17c6f6',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#8ade8f',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    programholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function ViewUsers() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const uid = localStorage.getItem(\"uid\");\r\n    const [users, setUsers] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [userId, setUserId] = React.useState('');;\r\n    const [openUser, setOpenUser] = React.useState(false);\r\n    const handleOpenUser = () => setOpenUser(true);\r\n    const handleCloseUser = () => setOpenUser(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    function wrapValues(users) {\r\n        setUsers(users);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        deleteUserData()\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllUsers() {\r\n        try {\r\n            const users = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/allUsers/${uid}`,\r\n                config\r\n            );\r\n            wrapValues(users.data.users);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllUsers();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const deleteUserData = async () => {\r\n        try {\r\n            let response = await deleteUser(userId);\r\n            getAllUsers();\r\n        } catch (error) {\r\n            setOpen(true);\r\n            setError(error.message);\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n                setError(\"\");\r\n            }, 3000);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function roleName(role) {\r\n      if(role === 'admin') return \"Administrador\";\r\n      if(role === 'user') return \"Usuario\";\r\n      if(role === 'gestor') return \"Gestor de Laboratorio\";\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Dialog\r\n                open={openDialog}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este usuario?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Esta decisión no es reversible.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleAccept} color=\"secondary\">\r\n                        Eliminar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <PageHeader\r\n                title=\"Información sobre los usuarios\"\r\n                subTitle=\"Acá se muestran todos los usuarios en el sistema\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n\r\n            <AssignPermission userId = {userId} openM={openUser}\r\n            onClose={handleCloseUser}/>\r\n\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo usuario?</Typography>\r\n\r\n                    </Box>\r\n                    <Box textAlign='center'>\r\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/register/`} text=\"Crear usuario\" />\r\n                    </Box>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <div className={classes.programholderLoading} hidden={!loading}>\r\n                <br />\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n\r\n            </div>\r\n\r\n            <Paper className={classes.table}>\r\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\r\n                <TableContainer >\r\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\r\n                        <TableHead>\r\n                            <TableRow className={classes.thead}>\r\n                                <TableCell>Usuario</TableCell>\r\n                                <TableCell>Email</TableCell>\r\n                                <TableCell>Tipo</TableCell>\r\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user) => (\r\n                                <TableRow hover className={classes.row} key={user.id}>\r\n                                    <TableCell>{user.username}</TableCell>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>{roleName(user.type)}</TableCell>\r\n                                    <TableCell>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <Tooltip title=\"Información\">\r\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/profile/${user._id}`}><InfoIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Eliminar\">\r\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\r\n                                                    setOpenDialog(true); setUserId(user._id);\r\n                                                }}><DeleteIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={users.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Register.js",["848","849","850"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Register.css\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Grid from '@mui/material/Grid'\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport AlertMessage from '../../components/AlertMessage';\r\n\r\nconst initialValues = {\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  type: 'user',\r\n  roles: [],\r\n}\r\n\r\nconst useStyles = makeStyles(({\r\n  inputField: {\r\n    width:\"100%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: 'center'\r\n  }\r\n}))\r\n\r\nconst Register = ({ }) => {\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  // const [items, setItems] = React.useState([{ name: \"\" }]);\r\n  // const [selected, setSelected] = React.useState(false);  \r\n  // const [inputProject, setInputProject] = React.useState('');\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n  // function wrapValues(projects) {\r\n  //   setItems(projects);\r\n  //   setLoading(false);\r\n\r\n  // }\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    // async function getBio() {\r\n    //   try {\r\n    //     const projects = await axios.get(\r\n    //       process.env.REACT_APP_API_URL + \"/api/private/project\",\r\n    //       config\r\n    //     );\r\n    //     wrapValues(projects.data.projects);\r\n\r\n\r\n    //   } catch (error) {\r\n    //     setTimeout(() => {\r\n    //       setError(\"\");\r\n    //     }, 5000);\r\n    //     return setError(\"Authentication failed!\");\r\n    //   }\r\n    // }\r\n    //getBio();\r\n    return () => { unmounted = true; };\r\n  }, []);\r\n\r\n  // const [value, setValue] = React.useState(items[0]);\r\n  // const [inputValue, setInputValue] = React.useState('');\r\n\r\n  // const roleItems = [\r\n  //   { id: 'investigador', title: 'Investigador' },\r\n  //   { id: 'asistente', title: 'Asistente' },\r\n  // ]\r\n\r\n  const typeItems = [\r\n    { id: 'user', title: 'Usuario' },\r\n    { id: 'admin', title: 'Administrador' },\r\n    { id: 'gestor', title: 'Gestor' },\r\n  ]\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n      setLoading(true);\r\n      if (values.password !== values.confirmPassword) {\r\n        setValues({...values, password: \"\", confirmPassword: \"\"});\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setLoading(false);\r\n        return setError(\"Las contraseñas no coinciden\");\r\n      }\r\n    // if (selected === false && type === 'user') {\r\n\r\n    //   setTimeout(() => {\r\n    //     setError(\"\");\r\n    //   }, 5000);\r\n    //   setLoading(false);\r\n    //   return setError(\"Seleccione un proyecto\");\r\n    // }\r\n\r\n\r\n      try {\r\n        // const role = {\r\n        //   projectId: value.id,\r\n        //   role: roleType\r\n        // }\r\n        console.log(values);\r\n        const { data } = await axios.post(\r\n          process.env.REACT_APP_API_URL + \"/api/private/register\",values,config\r\n        );\r\n        setLoading(false);\r\n        setOpen(true);\r\n        resetForm({})\r\n        setTimeout(function () {\r\n          setOpen(false);\r\n        }, 6000);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error.response.data.error);\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('username' in fieldValues)\r\n      temp.username = fieldValues.username ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = fieldValues.email ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('confirmPassword' in fieldValues)\r\n      temp.confirmPassword = fieldValues.confirmPassword ? \"\" : \"Este campo es obligatorio.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialValues, true, validate);\r\n\r\n  return (\r\n    <div className=\"register-screen\" style={{width:'90%'}}>\r\n      {/* <form onSubmit={registerHandler} className=\"register-screen__form\"> */}\r\n      <Form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <div className={classes.programholder} hidden={!loading}>\r\n          <Fade\r\n            in={loading}\r\n            style={{\r\n              transitionDelay: '0m',\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <CircularProgress />\r\n          </Fade>\r\n          <br />\r\n        </div>\r\n        <AlertMessage errorMessage={error} successMessage={\"Se ha creado un nuevo usuario!\"} openMessage={open}/>\r\n        <h3 className=\"register-screen__title\">Crear una cuenta</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <Grid item xs={12}>\r\n          <Controls.Input\r\n            name=\"username\"\r\n            label=\"Usuario\"\r\n            type=\"text\"\r\n            value={values.username}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.username}\r\n          />\r\n          <Controls.Input\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.email}\r\n          />\r\n          <Controls.Input\r\n            name=\"password\"\r\n            label=\"Contraseña\"\r\n            type=\"password\"\r\n            value={values.password}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.password}\r\n          />\r\n          <Controls.Input\r\n            name=\"confirmPassword\"\r\n            label=\"Confirmar Contraseña\"\r\n            type=\"password\"\r\n            value={values.confirmPassword}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.confirmPassword}\r\n          />\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Controls.RadioGroup\r\n              name=\"type\"\r\n              label=\"Tipo de usuario\"\r\n              value={values.type}\r\n              // onChange={(e) => {\r\n              //   setType(e.target.value);\r\n              //   if (type === 'admin')\r\n              //     setUser(false);\r\n              //   else\r\n              //     setUser(true);\r\n              // }}\r\n              onChange={handleInputChange}\r\n              items={typeItems}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"El administrador tiene acceso a todas las funcionalidades del sistema, mientras un usuario tiene acceso limitado asociado a un proyecto.\">\r\n              <HelpIcon color={\"success\"} />\r\n            </Tooltip>\r\n\r\n          </Grid>\r\n        </Grid>\r\n        {/* <br />\r\n        <div hidden={isUser}>\r\n          <Autocomplete\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n              setSelected(true);\r\n            }}\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n            }}\r\n            id=\"combo-box-demo\"\r\n            options={items}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Proyectos\" variant=\"outlined\" />}\r\n            disabled={loading}\r\n            disableClearable\r\n            inputValue={inputProject}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputProject(newInputValue);\r\n            }}\r\n          />\r\n          <br />\r\n          <Controls.RadioGroup\r\n            name=\"role\"\r\n            label=\"Tipo de rol\"\r\n            value={roleType}\r\n            onChange={(e) => { setRole(e.target.value); }}\r\n            items={roleItems}\r\n          />\r\n        </div>*/}\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Registrar Cuenta\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ShowProgram.js",["851","852","853","854","855","856","857","858","859"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    description: '',\n    objetivesProgram: '',\n    definitionProgram: '',\n    image: '',\n    projects: [],\n}\n\n\nexport default function ShowProjects() {\n    const [program, setProgram] = useState(initialValue);\n    const { name, description, objetivesProgram, definitionProgram, image } = program;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getProgram();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getProgram = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/program/${id}`, config);\n            setProgram(response.data.program);\n            let data = response.data.program;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                description: data.description,\n                objetivesProgram: data.objetivesProgram,\n                definitionProgram: data.definitionProgram,\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.programholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre un laboratorio\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {description ? description : ''}\n                        </Typography>\n                    </CardContent>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Teléfono:</span>\n                            {objetivesProgram ? objetivesProgram : ''}\n                        </Typography>\n                    </CardActions>\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Correo Electrónico:</span>\n                            {definitionProgram ? definitionProgram : ''}\n                        </Typography>\n                        {/* <Tooltip title=\"Exportar laboratorio\">\n                            <div className={classes.iconContainer}>\n                                <CSVDownloader\n                                    data={toExport}\n                                    filename={'program'}\n                                    config={{}}\n                                >\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\n                                </CSVDownloader>\n                            </div>\n                        </Tooltip> */}\n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Organization/ViewOrganization.js",["860","861","862"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab/';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { deleteOrganization } from '../../services/organizationService';\nimport Controls from \"../../components/controls/Controls\";\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewOrganization() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [organizations, setOrganizations] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [organizationId, setOrganizationId] = React.useState('');;\n\n    const classes = useStyles();\n\n    function wrapValues(organizations) {\n        setOrganizations(organizations);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteOrganizationData()\n        setOpenDialog(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Telefono', key: 'objetivesOrganization' },\n        { label: 'Correo electronico', key: 'description' },\n    ]\n\n    const csvReport = {\n        filename: 'Organizations.csv',\n        headers: headers,\n        data: organizations\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllOrganizations() {\n        try {\n            const organizations = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/organization\",\n                config\n            );\n            wrapValues(organizations.data.organizations);\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(async () => {\n        let unmounted = false;\n        await getAllOrganizations();\n        return () => { unmounted = true; };\n    }, []);\n\n    const deleteOrganizationData = async () => {\n        try {\n            await deleteOrganization(organizationId);\n            getAllOrganizations();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar esta organización?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los laboratorios\"\n                subTitle=\"Acá se mostrarán todas los laboratorios del sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo laboratorio?</Typography>\n\n                    </Box>\n                    <Box textAlign='center'>\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/organization/create/`} text=\"Crear Organización\" />\n                    </Box>\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n            <Collapse in={open}>\n                <Alert\n\n                    severity={error ? \"error\" : \"success\"}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\n                    {error}\n                </Alert>\n            </Collapse>\n            <Paper className={classes.table}>\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar organizaciones\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Nombre</TableCell>\n                                <TableCell>Telefono</TableCell>\n                                <TableCell>Descripción</TableCell>\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {organizations.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((organization) => (\n                                <TableRow hover className={classes.row} key={organization.id}>\n                                    <TableCell>{organization.name}</TableCell>\n                                    <TableCell> {organization.objetivesOrganization}</TableCell>\n                                    <TableCell>{organization.definitionOrganization}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/organization/update/${organization._id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/organization/show/${organization._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\n                                                    setOpenDialog(true); setOrganizationId(organization._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={organizations.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Evidence/EvidenceForm.js",["863","864","865"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport axios from 'axios';\nimport CircularStatic from '../../components/CircularStatic'\nimport ImageComponent from '../../components/ImageComponent';\n\nconst initialValues = {\n    name: '',\n    description: '',\n    image: ''\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function EvidenceForm() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const message = id ? \"Se ha actualizado la evidencia!\" : \"Se ha guardado la evidencia!\"\n    const title = id ? \"Actualizar Evidencia\" : \"Añadir nueva Evidencia\";\n    const description = id ? \"Formulario para actualizar Evidencia\" : \"Formulario para añadir Evidencia\";\n    const [progress, setProgress] = useState(0);\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getEvidence();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n    const getEvidence = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/evidence/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.evidence);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            console.log(\"create\");\n            resetForm({});\n        }\n\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/evidence/${id}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/evidence/\", values, config)\n                        .then(confirmPost)\n                }\n\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={description}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ textAlign: 'center' }}>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                label=\"Descripción\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n                        </Grid>\n\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Guardar\"\n                            />\n                            <Controls.Button\n                                text=\"Limpiar\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Resource/ShowResource.js",["866","867","868","869","870","871","872","873","874","875"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    url: '',\n    image: ''\n}\n\n\nexport default function ShowResources() {\n    const [resource, setResource] = useState(initialValue);\n    const { name, url, image } = resource;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getResource();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getResource = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/resource/${id}`, config);\n            setResource(response.data.resource);\n            let data = response.data.resource;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                url: data.url\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.programholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre un recurso\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {url ? url : ''}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Organization/OrganizationForm.js",["876","877","878"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport axios from 'axios';\nimport CircularStatic from '../../components/CircularStatic'\nimport ImageComponent from '../../components/ImageComponent';\n\nconst initialValues = {\n    name: '',\n    description: '',\n    objetivesOrganization: '',\n    definitionOrganization: '',\n    image: '',\n    projects: []\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function OrganizationForm() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const message = id ? \"Se ha actualizado el organización!\" : \"Se ha guardado el organización!\"\n    const title = id ? \"Actualizar Organización\" : \"Añadir nuevo Organización\";\n    const description = id ? \"Formulario para actualizar Organización\" : \"Formulario para añadir Organización\";\n    const [progress, setProgress] = useState(0);\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('objetivesOrganization' in fieldValues)\n            temp.objetivesOrganization = fieldValues.objetivesOrganization ? \"\" : \"Este campo es obligatorio.\"\n        if ('definitionOrganization' in fieldValues)\n            temp.definitionOrganization = fieldValues.definitionOrganization ? \"\" : \"Este campo es obligatorio.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getOrganization();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n    const getOrganization = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/organization/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.organization);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            console.log(\"create\");\n            resetForm({});\n        }\n\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/organization/${id}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/organization/\", values, config)\n                        .then(confirmPost)\n                }\n\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={description}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ textAlign: 'center' }}>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                label=\"Descripción\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                name=\"objetivesOrganization\"\n                                label=\"Teléfono\"\n                                value={values.objetivesOrganization}\n                                onChange={handleInputChange}\n                                error={errors.objetivesOrganization}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                label=\"Correo electrónico\"\n                                name=\"definitionOrganization\"\n                                value={values.definitionOrganization}\n                                onChange={handleInputChange}\n                                error={errors.definitionOrganization}\n                            />\n                        </Grid>\n\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Guardar\"\n                            />\n                            <Controls.Button\n                                text=\"Limpiar\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Evidence/ShowEvidence.js",["879","880","881","882","883","884","885","886","887","888"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    description: '',\n    image: '',\n}\n\n\nexport default function ShowEvidences() {\n    const [evidence, setEvidence] = useState(initialValue);\n    const { name, description, image } = evidence;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getEvidence();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getEvidence = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/evidence/${id}`, config);\n            setEvidence(response.data.evidence);\n            let data = response.data.evidence;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                description: data.description\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.programholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre una evidencia\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {description ? description : ''}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Resource/ResourceForm.js",["889","890","891"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport axios from 'axios';\nimport CircularStatic from '../../components/CircularStatic'\nimport ImageComponent from '../../components/ImageComponent';\n\nconst initialValues = {\n    name: '',\n    url: '',\n    image: ''\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function ResourceForm() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const message = id ? \"Se ha actualizado el recurso!\" : \"Se ha guardado el recurso!\"\n    const title = id ? \"Actualizar Recurso\" : \"Añadir nuevo Recurso\";\n    const description = id ? \"Formulario para actualizar Recurso\" : \"Formulario para añadir Recurso\";\n    const [progress, setProgress] = useState(0);\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('url' in fieldValues)\n            temp.url = fieldValues.url ? \"\" : \"Este campo es obligatorio.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getResource();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n    const getResource = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/resource/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.resource);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            console.log(\"create\");\n            resetForm({});\n        }\n\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/resource/${id}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/resource/\", values, config)\n                        .then(confirmPost)\n                }\n\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={description}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ textAlign: 'center' }}>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Controls.Input\n                                label=\"URL\"\n                                name=\"url\"\n                                value={values.url}\n                                onChange={handleInputChange}\n                                error={errors.url}\n                            />\n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Guardar\"\n                            />\n                            <Controls.Button\n                                text=\"Limpiar\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ProgramForm.js",["892","893","894"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport axios from 'axios';\nimport CircularStatic from '../../components/CircularStatic'\nimport ImageComponent from '../../components/ImageComponent';\n\nconst initialValues = {\n    name: '',\n    description: '',\n    objetivesProgram: '',\n    definitionProgram: '',\n    image: '',\n    projects: []\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function ProgramForm() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const message = id ? \"Se ha actualizado el laboratorio!\" : \"Se ha guardado el laboratorio!\"\n    const title = id ? \"Actualizar Laboratorio\" : \"Añadir nuevo Laboratorio\";\n    const description = id ? \"Formulario para actualizar Laboratorio\" : \"Formulario para añadir Laboratorio\";\n    const [progress, setProgress] = useState(0);\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('objetivesProgram' in fieldValues)\n            temp.objetivesProgram = fieldValues.objetivesProgram ? \"\" : \"Este campo es obligatorio.\"\n        if ('definitionProgram' in fieldValues)\n            temp.definitionProgram = fieldValues.definitionProgram ? \"\" : \"Este campo es obligatorio.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getProgram();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n    const getProgram = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/program/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.program);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            console.log(\"create\");\n            resetForm({});\n        }\n\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/program/${id}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/program/\", values, config)\n                        .then(confirmPost)\n                }\n\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={description}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ textAlign: 'center' }}>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                            <Controls.Input\n                                label=\"Descripción\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"objetivesProgram\"\n                                label=\"Teléfono\"\n                                value={values.objetivesProgram}\n                                onChange={handleInputChange}\n                                error={errors.objetivesProgram}\n                            />\n                            <Controls.Input\n                                label=\"Correo electrónico\"\n                                name=\"definitionProgram\"\n                                value={values.definitionProgram}\n                                onChange={handleInputChange}\n                                error={errors.definitionProgram}\n                            />\n                        </Grid>\n\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Guardar\"\n                            />\n                            <Controls.Button\n                                text=\"Limpiar\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Resource/ViewResource.js",["895","896","897"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab/';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { deleteResource } from '../../services/resourceService';\nimport Controls from \"../../components/controls/Controls\";\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewResource() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [resources, setResources] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [resourceId, setResourceId] = React.useState('');;\n\n    const classes = useStyles();\n\n    function wrapValues(resources) {\n        setResources(resources);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteResourceData()\n        setOpenDialog(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'URL', key: 'url' },\n    ]\n\n    const csvReport = {\n        filename: 'Resources.csv',\n        headers: headers,\n        data: resources\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllResources() {\n        try {\n            const resources = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/resource\",\n                config\n            );\n            wrapValues(resources.data.resources);\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(async () => {\n        let unmounted = false;\n        await getAllResources();\n        return () => { unmounted = true; };\n    }, []);\n\n    const deleteResourceData = async () => {\n        try {\n            await deleteResource(resourceId);\n            getAllResources();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este recurso?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los recursos\"\n                subTitle=\"Acá se mostrarán todos los recursos del sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo recurso?</Typography>\n\n                    </Box>\n                    <Box textAlign='center'>\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/resource/create/`} text=\"Crear Recurso\" />\n                    </Box>\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n            <Collapse in={open}>\n                <Alert\n\n                    severity={error ? \"error\" : \"success\"}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\n                    {error}\n                </Alert>\n            </Collapse>\n            <Paper className={classes.table}>\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar recursos\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Nombre</TableCell>\n                                <TableCell>URL</TableCell>\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {resources.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((resource) => (\n                                <TableRow hover className={classes.row} key={resource.id}>\n                                    <TableCell>{resource.name}</TableCell>\n                                    <TableCell> {resource.url}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/resource/update/${resource._id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/resource/show/${resource._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\n                                                    setOpenDialog(true); setResourceId(resource._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={resources.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/ShowTask.js",["898","899","900","901","902","903","904","905","906","907","908","909"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport Controls from \"../../components/controls/Controls\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    taskholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    description: '',\n    isTimeSeries: true\n}\n\n\nexport default function ShowTasks() {\n    const [task, setTask] = useState(initialValue);\n    const { name, description,diasNecesarios,diasCompletados,isTimeSeries, projects} = task;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getTask();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getTask = async () => {\n        try {\n            console.log(id)\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/showtask/${id}`, config);\n            setTask(response.data.task);\n            let data = response.data.task;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                description: data.description,\n                diasNecesarios: data.diasNecesarios,\n                diasCompetados: data.diasCompletados,\n                isTimeSeries: data.isTimeSeries\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.taskholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre una tarea\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            <b>Descripción:</b> {description ? description : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            <b>Dias Necesarios:</b> {diasNecesarios ? diasNecesarios : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            <b>Dias trabajados:</b> {diasCompletados ? diasCompletados : ''}\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                        <b>¿Completado?</b>\n                        </Typography>\n                        <Controls.Checkbox\n                        name=\"isTimeSeries\"\n                        label=\"\"\n                        value={isTimeSeries}\n                        disabled={true}\n                        />\n                    </CardActions>\n                    <CardActions>\n                        {/* <Tooltip title=\"Exportar programa\">\n                            <div className={classes.iconContainer}>\n                                <CSVDownloader\n                                    data={toExport}\n                                    filename={'program'}\n                                    config={{}}\n                                >\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\n                                </CSVDownloader>\n                            </div>\n                        </Tooltip> */}\n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Evidence/ViewEvidence.js",["910","911","912"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab/';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { deleteEvidence } from '../../services/evidenceService';\nimport Controls from \"../../components/controls/Controls\";\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewEvidence() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [evidences, setEvidences] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [evidenceId, setEvidenceId] = React.useState('');;\n\n    const classes = useStyles();\n\n    function wrapValues(evidences) {\n        setEvidences(evidences);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteEvidenceData()\n        setOpenDialog(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Descripcion', key: 'description' },\n    ]\n\n    const csvReport = {\n        filename: 'Evidences.csv',\n        headers: headers,\n        data: evidences\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllEvidences() {\n        try {\n            const evidences = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/evidence\",\n                config\n            );\n            wrapValues(evidences.data.evidences);\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(async () => {\n        let unmounted = false;\n        await getAllEvidences();\n        return () => { unmounted = true; };\n    }, []);\n\n    const deleteEvidenceData = async () => {\n        try {\n            await deleteEvidence(evidenceId);\n            getAllEvidences();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar esta Evidencia?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre las Evidencias\"\n                subTitle=\"Acá se mostrarán todas las evidencias del sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita una nueva evidencia?</Typography>\n\n                    </Box>\n                    <Box textAlign='center'>\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/evidence/create/`} text=\"Crear Evidencia\" />\n                    </Box>\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n            <Collapse in={open}>\n                <Alert\n\n                    severity={error ? \"error\" : \"success\"}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\n                    {error}\n                </Alert>\n            </Collapse>\n            <Paper className={classes.table}>\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar evidencias\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Nombre</TableCell>\n                                <TableCell>Descripción</TableCell>\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {evidences.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((evidence) => (\n                                <TableRow hover className={classes.row} key={evidence.id}>\n                                    <TableCell>{evidence.name}</TableCell>\n                                    <TableCell> {evidence.description}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/evidence/update/${evidence._id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/evidence/show/${evidence._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\n                                                    setOpenDialog(true); setEvidenceId(evidence._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={evidences.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ViewReportsDeadlines.js",["913","914","915","916","917","918","919","920","921","922","923","924","925"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { deleteReport } from '../../services/reportService';\nimport Controls from \"../../components/controls/Controls\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add'\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Download from '@mui/icons-material/Download';\nimport { jsonToCSV, CSVDownloader } from 'react-papaparse';\nimport {getUsers, editRoles} from '../../services/userService';\nimport { version } from 'react-dom/cjs/react-dom.development';\nimport { render } from \"react-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    cell: {\n        paddingTop: 0\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default function ViewReport() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [reports, setReports] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [reportId, setReportId] = React.useState('');\n    const [openDialogAbandon, setOpenDialogAbandon] = useState(false);\n    const [currentUserRoles, setCurrentUserRoles] = useState({});\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const classes = useStyles();\n\n    function wrapValues(reports) {\n        setReports(reports);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteReportData()\n        setOpenDialog(false);\n    }\n\n    const handleCloseAbandon = () => {\n        setOpenDialogAbandon(false);\n    };\n\n    const handleAcceptAbandon = () => {\n        abandonReport();\n        setOpenDialogAbandon(false);\n    };\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Descripción', key: 'analysis' },\n        { label: 'Objetivos', key: 'objetives' },\n        { label: 'Justificación', key: 'justification' },\n        { label: 'País', key: 'country' },\n        { label: 'Departamento', key:'department' },\n        { label: 'Distrito', key:'district' },\n        { label: 'Definición', key:'definition' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Percentage', key: 'percentage' }\n    ]\n\n    const csvReport = {\n        filename: 'Reports.csv',\n        headers: headers,\n        data: reports\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllReports() {\n        try {\n            const reports = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/report\",\n                config\n            );\n            \n            const currentUser = await getUsers(localStorage.getItem(\"uid\"));\n            if(currentUser.data.user.type === \"admin\"){\n                wrapValues(reports.data.reports);\n                setIsAdmin(true);\n\n            }else{\n                setCurrentUserRoles(currentUser.data.user.roles);\n                let permittedReports = [];\n\n                currentUser.data.user.roles.forEach(element => {\n                    permittedReports.push(element.reportId);\n                });\n\n                console.log(permittedReports);\n\n                let valuesToWrap = [];\n\n                reports.data.reports.forEach(element => {\n                    if(permittedReports.includes(element._id)){\n                        valuesToWrap.push(element);\n                    }\n                });\n\n                wrapValues(valuesToWrap);\n            }\n            \n            \n\n\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authenticatin failed!\");\n        }\n        \n\n        \n\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllReports();\n        \n        \n        \n        return () => { unmounted = true; };\n        \n\n    }, []);\n\n    const deleteReportData = async () => {\n        try {\n            let response = await deleteReport(reportId);\n            getAllReports();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n\n    }\n\n    const abandonReport = async () => {\n        let newRoles = []\n        currentUserRoles.forEach(element => {\n            if(element.reportId !== reportId){\n                newRoles.push(element);\n            }\n        });\n\n        editRoles(localStorage.getItem(\"uid\"), newRoles);\n        getAllReports();\n    }\n\n    \n    \n    return (\n        \n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este reporte?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openDialogAbandon}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseAbandon}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea eliminar este reporte?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseAbandon} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAcceptAbandon} color=\"secondary\">\n                        Abandonar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los reportes\"\n                subTitle=\"Acá se muestran todos los reportes en el sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <br />\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    {/* <div className={classes.test}>\n                    <CSVDownloader\n                        data= {reports}\n                        filename={'reports'}\n                        config={{}}\n                    > Download</CSVDownloader>\n                    </div> */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar reportes\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{color:'white', marginLeft: '10px'}}> \n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell className={classes.cell}>Nombre</TableCell>\n                                <TableCell className={classes.cell}>Fecha</TableCell>\n                                <TableCell className={classes.cell}>Nombre Proyecto</TableCell>\n                                <TableCell className={classes.programholder} style={{paddingTop: '0px'}}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {reports.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((report) => (\n                                <TableRow hover className={classes.row} key={report.id}>\n                                    <TableCell>{report.name}</TableCell>\n                                    <TableCell>{report.date}</TableCell>\n                                    <TableCell>{report.projectName}</TableCell>\n                                    \n            \n                                   \n\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            \n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/report/show/${report._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" style={{ marginRight: 10 }}  onClick={() => {\n                                                    setOpenDialog(true); setReportId(report._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                            {!isAdmin &&\n                                                <Tooltip title=\"Abandonar reporte\">\n                                                    <Button color=\"warning\" variant=\"contained\" onClick={() => {\n                                                        setOpenDialogAbandon(true); setReportId(report._id);\n                                                    }}><LogoutIcon /></Button>\n                                                </Tooltip>\n                                            }\n                                            \n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={reports.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ViewReports.js",["926","927","928","929","930","931","932","933","934","935","936"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { deleteReport } from '../../services/reportService';\nimport Controls from \"../../components/controls/Controls\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReportIcon from '@material-ui/icons/'\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Download from '@mui/icons-material/Download';\nimport { jsonToCSV, CSVDownloader } from 'react-papaparse';\nimport {getUsers, editRoles} from '../../services/userService';\nimport { version } from 'react-dom/cjs/react-dom.development';\n\nimport { useParams } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n          fontSize: 20,\n          background: '#8ade8f',\n          color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#8ade8f',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    cell: {\n        paddingTop: 0\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#8ade8f',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewReport() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const { id } = useParams();\n    const [reports, setReports] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [reportId, setReportId] = React.useState('');\n    const [openDialogAbandon, setOpenDialogAbandon] = useState(false);\n    const [currentUserRoles, setCurrentUserRoles] = useState({});\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const classes = useStyles();\n\n    function wrapValues(reports) {\n        setReports(reports);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteReportData();\n        setOpenDialog(false);\n    }\n\n    const handleCloseAbandon = () => {\n        setOpenDialogAbandon(false);\n    };\n\n    const handleAcceptAbandon = () => {\n        abandonReport();\n        setOpenDialogAbandon(false);\n    };\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Descripción', key: 'description' },\n        { label: 'Notas', key: 'notesReport' },\n        { label: 'Costo', key: 'cost' },\n        { label: 'Valores Obtenidos', key: 'valuesReport' },\n        { label: 'Datos', key: 'data' }\n\n    ]\n\n    const csvReport = {\n        filename: 'Reports.csv',\n        headers: headers,\n        data: reports\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllReports() {\n        try {\n            const reports = await axios.get(\n                process.env.REACT_APP_API_URL + `/api/private/filteredreport/${id}`,\n                config\n                \n            );\n                    \n            const currentUser = await getUsers(localStorage.getItem(\"uid\"));\n            if(currentUser.data.user.type === \"admin\"){\n                \n                wrapValues(reports.data.reports);\n                setIsAdmin(true);\n\n            }else{\n                setCurrentUserRoles(currentUser.data.user.roles);\n                let permittedReports = [];\n                \n                currentUser.data.user.roles.forEach(element => {\n                    permittedReports.push(element.reportId);\n                });\n\n                console.log(permittedReports);\n\n                let valuesToWrap = [];\n\n                reports.data.reports.forEach(element => {\n                    if(permittedReports.includes(element._id)){\n                        valuesToWrap.push(element);\n                    }\n                });\n                wrapValues(valuesToWrap);\n            }\n            \n            \n\n\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n        \n\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllReports();\n        return () => { unmounted = true; };\n        \n\n    }, []);\n\n    const deleteReportData = async () => {\n        try {\n            let response =  await deleteReport(reportId);\n            getAllReports();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    const abandonReport = async () => {\n        let newRoles = []\n        currentUserRoles.forEach(element => {\n            if(element.reportId !== reportId){\n                newRoles.push(element);\n            }\n        });\n\n        editRoles(localStorage.getItem(\"uid\"), newRoles);\n        getAllReports();\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este reporte?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openDialogAbandon}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseAbandon}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea abandonar este reporte?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseAbandon} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAcceptAbandon} color=\"secondary\">\n                        Abandonar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <PageHeader\n                title=\"Gestión de Reportes\"\n                subTitle=\"Sección para la administración de reportes\"\n                icon={<InfoIcon fontSize=\"large\"\n                \n                />}\n            />\n\n\n            \n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <br />\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    {/* <div className={classes.test}>\n                    <CSVDownloader\n                        data= {reports}\n                        filename={'reports'}\n                        config={{}}\n                    > Download</CSVDownloader>\n                    </div> */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar reportes\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{color:'white', marginLeft: '10px'}}> \n                                    \n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell className={classes.cell}>Nombre</TableCell>\n                                <TableCell className={classes.cell}></TableCell>\n                                <TableCell className={classes.programholder} style={{paddingTop: '0px'}}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {reports.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((report) => (\n                                <TableRow hover className={classes.row} key={report.id}>\n                                    <TableCell>{report.name}</TableCell>\n                                    \n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                        </Grid>\n                                    </TableCell>\n\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                    \n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/report/update/${report._id}/${id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/report/show/${report._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" style={{ marginRight: 10 }}  onClick={() => {\n                                                    setOpenDialog(true); setReportId(report._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                            {!isAdmin &&\n                                                <Tooltip title=\"Abandonar reporte\">\n                                                    <Button color=\"warning\" variant=\"contained\" onClick={() => {\n                                                        setOpenDialogAbandon(true); setReportId(report._id);\n                                                    }}><LogoutIcon /></Button>\n                                                </Tooltip>\n                                            }\n                                            \n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={reports.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n\n            >\n                <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/report/create/${id}`} text=\"Crear reporte\" />\n            \n            </Grid>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Blog/ViewBlog.js",["937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab/';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { deleteBlog } from '../../services/blogService';\nimport Controls from \"../../components/controls/Controls\";\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\nimport defaultImg from '../../assets/img/defaultImg.jpeg';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    blogholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    blogholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewBlog() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [programs, setBlogs] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [blogId, setBlogId] = React.useState('');;\n\n    const classes = useStyles();\n\n    function wrapValues(programs) {\n        setBlogs(programs);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteBlogData()\n        setOpenDialog(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Objetivos', key: 'entrada' },\n    ]\n\n    const csvReport = {\n        filename: 'Programs.csv',\n        headers: headers,\n        data: programs\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllBlogs() {\n        try {\n            const programs = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/program\",\n                config\n            );\n            wrapValues(programs.data.programs);\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(async () => {\n        let unmounted = false;\n        await getAllBlogs();\n        return () => { unmounted = true; };\n    }, []);\n\n    const deleteBlogData = async () => {\n        try {\n            await deleteBlog(blogId);\n            getAllBlogs();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este proyecto?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los laboratorios\"\n                subTitle=\"Acá se mostrarán todos los laboratorios  del sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n\n            <div className={classes.blogholderLoading} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n            <Collapse in={open}>\n                <Alert\n\n                    severity={error ? \"error\" : \"success\"}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\n                    {error}\n                </Alert>\n            </Collapse>\n            <br></br>\n            <br></br>\n\n            <Grid container spacing={3}>\n                {programs.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((program) => (\n\n                    <Grid xs={4} className={classes.row} key={program.id}>\n                        <Card sx={{ maxWidth: 345 }}>\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"green iguana\"\n                                height=\"140\"\n                                image={program.image ? program.image : defaultImg}\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                    {program.name}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                    {program.description}\n                                </Typography>\n                            </CardContent>\n\n                            <CardActions>\n                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/program/services/${program._id}`}><InfoIcon />Ver servicios ofrecidos</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n\n            </Grid>\n\n\n\n\n\n\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ViewProgram.js",["959","960","961"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab/';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { deleteProgram } from '../../services/programService';\nimport Controls from \"../../components/controls/Controls\";\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewProgram() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [programs, setPrograms] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [programId, setProgramId] = React.useState('');;\n\n    const classes = useStyles();\n\n    function wrapValues(programs) {\n        setPrograms(programs);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteProgramData()\n        setOpenDialog(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Objetivos', key: 'objetivesProgram' },\n        { label: 'Definición principal', key: 'definitionProgram' },\n    ]\n\n    const csvReport = {\n        filename: 'Programs.csv',\n        headers: headers,\n        data: programs\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllPrograms() {\n        try {\n            const programs = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/program\",\n                config\n            );\n            wrapValues(programs.data.programs);\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(async () => {\n        let unmounted = false;\n        await getAllPrograms();\n        return () => { unmounted = true; };\n    }, []);\n\n    const deleteProgramData = async () => {\n        try {\n            await deleteProgram(programId);\n            getAllPrograms();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este proyecto?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los laboratorios\"\n                subTitle=\"Acá se mostrarán todos los laboratorios del sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo laboratorio?</Typography>\n\n                    </Box>\n                    <Box textAlign='center'>\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/program/create/`} text=\"Crear laboratorio\" />\n                    </Box>\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n            <Collapse in={open}>\n                <Alert\n\n                    severity={error ? \"error\" : \"success\"}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\n                    {error}\n                </Alert>\n            </Collapse>\n            <Paper className={classes.table}>\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar laboratorios\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Nombre</TableCell>\n                                <TableCell>Teléfono</TableCell>\n                                <TableCell>Descripción</TableCell>\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {programs.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((program) => (\n                                <TableRow hover className={classes.row} key={program.id}>\n                                    <TableCell>{program.name}</TableCell>\n                                    <TableCell> {program.objetivesProgram}</TableCell>\n                                    <TableCell>{program.definitionProgram}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/program/update/${program._id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/program/show/${program._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\n                                                    setOpenDialog(true); setProgramId(program._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={programs.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Blog/BlogForm.js",["962","963","964"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport axios from 'axios';\nimport CircularStatic from '../../components/CircularStatic'\nimport ImageComponent from '../../components/ImageComponent';\n\nconst initialValues = {\n    name: '',\n    entrada: '',\n    image: '',\n    projects: []\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    blogholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function BlogForm() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const message = id ? \"Se ha actualizado el blog!\" : \"Se ha guardado el blog!\"\n    const title = id ? \"Actualizar Blog\" : \"Añadir nuevo Blog\";\n    const description = id ? \"Formulario para actualizar Blog\" : \"Formulario para añadir Blog\";\n    const [progress, setProgress] = useState(0);\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('entrada' in fieldValues)\n            temp.entrada = fieldValues.entrada ? \"\" : \"Este campo es obligatorio.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getBlog();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n    const getBlog = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/blog/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.blog);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            console.log(\"create\");\n            resetForm({});\n        }\n\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/blog/${id}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/blog/\", values, config)\n                        .then(confirmPost)\n                }\n\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={description}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ textAlign: 'center' }}>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre del blog\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Controls.TextArea\n                                name=\"entrada\"\n                                label=\"Entrada del blog\"\n                                value={values.entrada}\n                                onChange={handleInputChange}\n                                error={errors.entrada}\n                            />\n                        </Grid>\n                        \n\n\n\n                        \n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Guardar\"\n                            />\n                            <Controls.Button\n                                text=\"Limpiar\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Data/CreateData.js",["965","966","967"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Link } from 'react-router-dom';\r\nimport UploadFile from '@mui/icons-material/UploadFile';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { green, red, grey, blue } from '@material-ui/core/colors';\r\nimport { addData } from \"../../services/dataService\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { getBase64 } from '../../services/getFileService';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nimport FileManager from '../../components/FileManager';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: \"#2f2c33\"\r\n        }\r\n    },\r\n    color: {\r\n        background: green[\"100\"]\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    add: {\r\n        backgroundColor: green[600]\r\n    },\r\n    remove: {\r\n        backgroundColor: red[400]\r\n    },\r\n    buttonFixed: {\r\n        position: \"fixed\"\r\n    },\r\n    image: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    showImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    removeImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CreateData() {\r\n    const { pid, bid, did } = useParams();\r\n    const [factors, setFactors] = useState([]);\r\n    const [factorsObj, setFactorsObj] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = React.useState(true);\r\n    const classes = useStyles()\r\n    const [inputFields, setInputFields] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [count, setCount] = React.useState(0);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [showCard, setShowCard] = useState(true);\r\n    const [image, setImage] = useState(\"\");\r\n    const [cardPositionX, setCardPositionX] = useState(0);\r\n    const [cardPositionY, setCardPositionY] = useState(0);\r\n    const [CSVData, setCSVData] = useState(\"\");\r\n\r\n    const message = \"Se han registrado los datos!\"\r\n\r\n    let date_ob = new Date();\r\n\r\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n\r\n    // current month\r\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n\r\n    // current year\r\n    let year = date_ob.getFullYear();\r\n\r\n    let t_time = date_ob.getHours() + \":\" + date_ob.getMinutes();\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    function wrapValues(factors, facObj) {\r\n        setFactors(factors);\r\n        setFactorsObj(facObj);\r\n        cleanData(facObj);\r\n        setLoading(false);\r\n        setCount(1);\r\n        setPage(1);\r\n    }\r\n\r\n    async function getAllFactors() {\r\n        try {\r\n            const response = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/factorproject/${bid}`,\r\n                config\r\n            );\r\n            let facObj = { \"fecha\": \"\", \"hora\": \"\" };\r\n            response.data.factors.forEach(factor => {\r\n                facObj[factor.name] = \"\";\r\n            });\r\n            wrapValues(response.data.factors, facObj);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllFactors();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const cleanData = (facObj) => {\r\n        setOpenDialog(false)\r\n        let first = Object.assign({}, facObj);\r\n        first.fecha = year + \"-\" + month + \"-\" + date;\r\n        first.hora = \"00:00\"\r\n        first.id = uuidv4();\r\n        setInputFields([first])\r\n    };\r\n\r\n    const handleChangePage = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handleAddDataFromCSV = (e, value) => {\r\n        e.preventDefault();\r\n\r\n        let csvKeys = Object.keys(CSVData[0]);\r\n        let realKeys = [];\r\n\r\n        for (let i = 0; i < factors.length; i++) {\r\n            realKeys.push(factors[i].name);\r\n        }\r\n        let canProceed = true;\r\n\r\n        for (let i = 0; i < csvKeys.length; i++) {\r\n            if (!csvKeys.includes(realKeys[i])) {\r\n                canProceed = false;\r\n            }\r\n\r\n        }\r\n\r\n        if (canProceed) {\r\n            let data = {\r\n                \"projectID\": bid,\r\n                \"programID\": pid,\r\n                \"taskID\": did,\r\n                \"values\": []\r\n            };\r\n\r\n            for (let i = 0; i < CSVData.length; i++) {\r\n                let element = {};\r\n                element.timestamp = year + \"-\" + month + \"-\" + date + \"T\" + t_time;\r\n                element.values = CSVData[i];\r\n                data.values.push(element)\r\n            }\r\n\r\n            try {\r\n                addData(data).then(() => {\r\n                    setOpen(true)\r\n                    cleanData(factorsObj);\r\n                });\r\n            } catch (error) {\r\n                setTimeout(() => {\r\n                    setTimeout(() => {\r\n                        setOpen(false)\r\n                        setError(\"\");\r\n                    }, 2000);\r\n                }, 5000);\r\n                setOpen(true)\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n        } else {\r\n            console.log(\"Cant upload\")\r\n        }\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    const parseInput = async () => {\r\n\r\n        return new Promise(resolve => {\r\n            let data = {\r\n                \"projectID\": bid,\r\n                \"programID\": pid,\r\n                \"taskID\": did,\r\n                \"values\": []\r\n            };\r\n\r\n            const forEachLoop = async _ => {\r\n                for (let index = 0; index < inputFields.length; index++) {\r\n                    let element = {};\r\n                    element.timestamp = inputFields[index].fecha + \"T\" + inputFields[index].hora;\r\n                    element.values = {};\r\n\r\n\r\n                    for (let index_2 = 0; index_2 < factors.length; index_2++) {\r\n                        if (factors[index_2].type === \"value\" || inputFields[index][factors[index_2].name] === \"\") {\r\n                            element.values[factors[index_2].name] = inputFields[index][factors[index_2].name];\r\n                        } else {\r\n\r\n                            let file = inputFields[index][factors[index_2].name];\r\n\r\n                            element.values[factors[index_2].name] = await getBase64(file);\r\n                        }\r\n                    }\r\n\r\n                    data.values.push(element);\r\n                }\r\n            }\r\n            forEachLoop().then(() => {\r\n                resolve(data);\r\n            }\r\n            );\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = await parseInput();\r\n\r\n        try {\r\n            addData(data).then(() => {\r\n                setOpen(true)\r\n                cleanData(factorsObj);\r\n            });\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n\r\n    };\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n        console.log(newInputFields);\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleChangeImageInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[event.target.name] = event.target.files[0];\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleAddFields = () => {\r\n\r\n\r\n        let newColumn = Object.assign({}, factorsObj);\r\n        newColumn.fecha = year + \"-\" + month + \"-\" + date;\r\n        newColumn.hora = \"00:00\"\r\n        newColumn.id = uuidv4(); //for (x in a){b[x] = 1}\r\n\r\n        setInputFields([...inputFields, newColumn]);\r\n\r\n        let con = inputFields.length + 1;\r\n        let result = con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3);\r\n        if (result > count) {\r\n            setCount(result);\r\n        }\r\n        if (page < result) {\r\n            setPage(result);\r\n        }\r\n    }\r\n\r\n    const handleRemoveFields = id => {\r\n        const values = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n\r\n        let con = inputFields.length - 1;\r\n        let result = con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3);\r\n        if (result < count) {\r\n            setCount(result);\r\n            setPage(result);\r\n        }\r\n    }\r\n\r\n    const removeImage = (id, factorName) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[factorName] = \"\";\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const displayCard = (isCard, id, factorName, event) => {\r\n        setCardPositionX(event.clientX - 250);\r\n        setCardPositionY(event.clientY - 750);\r\n        let srcImage = \"\"\r\n\r\n\r\n        if (isCard !== \"\") {\r\n\r\n            inputFields.every(input => {\r\n\r\n                if (input.id === id) {\r\n                    srcImage = URL.createObjectURL(input[factorName]);\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n\r\n        setShowCard(isCard);\r\n        setImage(srcImage);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <PageHeader\r\n                title=\"Añadir datos al programa\"\r\n                subTitle=\"Se guardarán los datos del proyecto\"\r\n                icon={<InfoIcon fontSize=\"Large\"\r\n                />}\r\n            />\r\n            <div className={classes.programholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                <Pagination\r\n                    sx={{ mt: 1 }}\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    color=\"standard\"\r\n                    count={count}\r\n                    siblingCount={0}\r\n                    boundaryCount={2}\r\n                    page={page}\r\n                    onChange={handleChangePage}\r\n                />\r\n            </Box>\r\n            <Collapse in={open}>\r\n                <Alert\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {error ? error : message}\r\n                </Alert>\r\n            </Collapse>\r\n            <form className={classes.root} onSubmit={handleSubmit}>\r\n                <Dialog\r\n                    open={openDialog}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={() => setOpenDialog(false)}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">¿Seguro que desea guardar la información?</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpenDialog(false)} color=\"standard\">\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button type=\"submit\" onClick={handleSubmit} color=\"primary\">\r\n                            Enviar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                        ml: \"5%\"\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                hidden={factors.length === 0}\r\n                                className={classes.color}>\r\n                                Fecha\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                hidden={factors.length === 0}\r\n                                className={classes.color}>\r\n                                Hora\r\n                            </Typography>\r\n                        </Box>\r\n                        {factors.map(factor => (\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        m: \"8px\",\r\n                                        py: \"6px\",\r\n                                        px: \"20px\",\r\n                                        width: \"100%\",\r\n                                        borderRadius: 1\r\n                                    }}\r\n                                    align=\"center\"\r\n                                    variant=\"subtitle1\"\r\n                                    component=\"div\"\r\n                                    className={classes.color}>\r\n                                    {factor.name}\r\n                                </Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </div>\r\n                    {inputFields.map((inputField, index) => (\r\n                        3 * page - index >= 1 && 3 * page - index <= 3 &&\r\n                        <div key={inputField.id}>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    type='date'\r\n                                    name=\"fecha\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    defaultValue={year + \"-\" + month + \"-\" + date}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={inputField.fecha}\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    type='time'\r\n                                    name=\"hora\"\r\n                                    defaultValue={\"00:00\"}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    value={inputField.hora}\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            {factors.map(factor => (\r\n                                <Box sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n                                    {factor.type === \"value\"\r\n                                        ? <TextField\r\n                                            type='number'\r\n                                            name={factor.name}\r\n                                            label=\"\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            value={inputField[factor.name]}\r\n                                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                                        />\r\n                                        : inputFields[index][factor.name] === \"\"\r\n                                            ? <Tooltip title=\"Subir imagen\">\r\n                                                <Button\r\n                                                    style={{\r\n                                                        margin: \"8px\",\r\n                                                        width: \"100%\",\r\n                                                        paddingTop: \"8px\",\r\n                                                        paddingBottom: \"8px\",\r\n                                                        paddingLeft: \"20px\",\r\n                                                        paddingRight: \"20px\",\r\n                                                    }}\r\n                                                    variant=\"contained\"\r\n                                                    component=\"label\"\r\n                                                    className={classes.image}\r\n                                                >\r\n                                                    <UploadFile />\r\n                                                    <input\r\n                                                        name={factor.name}\r\n                                                        accept=\"image/*\"\r\n                                                        id=\"raised-button-file\"\r\n                                                        type=\"file\"\r\n                                                        hidden\r\n                                                        onChange={event => handleChangeImageInput(inputField.id, event)}\r\n                                                    />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                            : <>\r\n                                                <Tooltip title=\"Abrir imagen\">\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            margin: \"8px\",\r\n                                                            width: \"75%\",\r\n                                                            paddingTop: \"8px\",\r\n                                                            paddingBottom: \"8px\",\r\n                                                            paddingLeft: \"20px\",\r\n                                                            paddingRight: \"20px\",\r\n                                                        }}\r\n                                                        variant=\"contained\"\r\n                                                        onMouseEnter={(event) => displayCard(false, inputField.id, factor.name, event)}\r\n                                                        onMouseLeave={(event) => displayCard(true, \"\", \"\", event)}\r\n                                                        onClick={() => window.open(image)}\r\n                                                        target=\"_blank\"\r\n                                                        className={classes.showImg}\r\n                                                    >\r\n                                                        <VisibilityIcon />\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                                <Tooltip title=\"Remover imagen\">\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            margin: \"8px\",\r\n                                                            width: \"25%\",\r\n                                                            paddingTop: \"8px\",\r\n                                                            paddingBottom: \"8px\",\r\n                                                            paddingLeft: \"20px\",\r\n                                                            paddingRight: \"20px\",\r\n                                                        }}\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.removeImg}\r\n                                                        onClick={() => removeImage(inputField.id, factor.name)}\r\n                                                    >\r\n                                                        <ClearIcon />\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                            </>\r\n                                    }\r\n                                </Box>\r\n                            ))}\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n\r\n                                <Tooltip title=\"Quitar columna\">\r\n                                    <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n                                        <Avatar className={classes.remove}>\r\n                                            <RemoveIcon />\r\n                                        </Avatar>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Box>\r\n                        </div>\r\n                    ))}\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center'\r\n                    }}\r\n                    >\r\n                        <Tooltip title=\"Añadir nueva columna\">\r\n                            <IconButton style={{ position: \"fixed\" }} disabled={inputFields.length === 0} var\r\n                                onClick={handleAddFields}\r\n                            >\r\n                                <Avatar className={classes.add}>\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Controls.Button style={{ marginLeft: \"4.5%\" }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setOpenDialog(true)}\r\n                        text=\"Guardar datos ingresados\"\r\n                    />\r\n                </Box>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <PageHeader\r\n                    title={\"Subir archivo CSV\"}\r\n                    subTitle={\"Ingresar información a la base de datos con un archivo CSV.\"}\r\n                    icon={<FileUploadIcon fontSize=\"large\" color='primary'\r\n                    />}\r\n                />\r\n                <Box style={{ width: \"90%\" }}>\r\n\r\n                    <FileManager setCSVData={setCSVData} />\r\n                    <Controls.Button\r\n                        text=\"Enviar datos\"\r\n                        color=\"primary\"\r\n                        onClick={handleAddDataFromCSV}\r\n                    />\r\n                </Box>\r\n            </form>\r\n            <Card\r\n                sx={{\r\n                    maxWidth: 300,\r\n                    maxHeight: 300,\r\n                    position: \"relative\",\r\n                    top: cardPositionY,\r\n                    left: cardPositionX,\r\n                }}\r\n                hidden={showCard}\r\n            >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"194\"\r\n                    image={image}\r\n                    alt=\"\"\r\n                />\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreateData;","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/TaskForm.js",["968","969","970","971","972","973"],"import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport CircularStatic from '../../components/CircularStatic'\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Alert from '../../components/AlertMessage';\nimport AlertMessage from '../../components/AlertMessage';\nimport { getTasks } from '../../services/taskService';\n\n\nconst predictionItems = [\n    { id: 'regresion', title: 'Regresión lineal' },\n    { id: 'clasificacion', title: 'Clasificación' },\n]\n\nconst initialBValues = {\n    name: '',\n    description: '',\n    diasNecesarios: '',\n    diasCompletados: '',\n    isTimeSeries: false,\n    projects: ''\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function TaskForm() {\n    \n    const { tid,id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const message = id ? \"Se ha actualizado la tarea!\" : \"Se ha guardado la tarea!\"\n    const title = id ? \"Actualizar tarea\" : \"Añadir nueva tarea\";\n    const type = id ? \"actualizar\" : \"agregar\";\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }        \n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('diasNecesarios' in fieldValues)\n            temp.diasNecesarios = fieldValues.diasNecesarios ? \"\" : \"Este campo es obligatorio.\"\n            \n        setErrors({\n            ...temp\n        })        \n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getTask();\n        return () => { unmounted = true; };\n    }, []);\n\n\n\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n\n    const getTask = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/showtask/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.task);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialBValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if(!id){\n            resetForm({\n            })\n        }\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/task/${id}/${tid}`, values, config)\n                        .then(confirmPost)\n                    await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/updatePercentage/${tid}`, values, config)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + `/api/private/task/${tid}`, values, config)\n                        .then(confirmPost)\n                    await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/updatePercentage/${tid}`, values, config)\n                        \n                }\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n    \n    //ACTUALIZAR\n    if(id){\n    return (\n        \n        <div>\n            <PageHeader\n                title={title}\n                subTitle={`Formulario para ${type} una tarea`}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>                \n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open}/>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                            <Controls.Input\n                                label=\"Descripción\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n                            <Controls.Input\n                                label=\"DiasCompletados\"\n                                name=\"diasCompletados\"\n                                value={values.diasCompletados}\n                                onChange={handleInputChange}\n                                error={errors.diasCompletados}\n                            />\n\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Checkbox\n                                name=\"isTimeSeries\"\n                                label=\"Tarea terminada\"\n                                value={values.isTimeSeries}\n                                onChange={handleInputChange}\n                                title=\"Se presentará como tarea terminada al marcar la casilla, de lo contrario se presentará como una tarea incompleta.\"\n                            />\n                            \n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n                            <div>\n                                <Controls.Button\n                                    type=\"submit\"\n                                    text=\"Guardar\"\n                                />\n\n                                <Controls.Button\n                                    text=\"Limpiar\"\n                                    color=\"inherit\"\n                                    onClick={resetForm} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n    }\n\n    //CREAR\n    else{\n\n        return (\n        \n            <div>\n                <PageHeader\n                    title={title}\n                    subTitle={`Formulario para ${type} una tarea`}\n                    icon={<EcoIcon fontSize=\"large\" color='primary'\n                    />}\n                />\n                <CircularStatic progress={progress} hidden={!loading} />\n                <Paper className={classes.pageContent}>                \n                    <Form onSubmit={handleSubmit}>\n                        <AlertMessage errorMessage={error} successMessage={message} openMessage={open}/>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    name=\"name\"\n                                    label=\"Nombre\"\n                                    value={values.name}\n                                    onChange={handleInputChange}\n                                    error={errors.name}\n                                />\n                                <Controls.Input\n                                    label=\"Descripción\"\n                                    name=\"description\"\n                                    value={values.description}\n                                    onChange={handleInputChange}\n                                    error={errors.description}\n                                />\n                                <Controls.Input\n                                    label=\"Dias necesarios\"\n                                    name=\"diasNecesarios\"\n                                    value={values.diasNecesarios}\n                                    onChange={handleInputChange}\n                                    error={errors.diasNecesarios}\n                                />\n    \n                            </Grid>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justifyContent=\"center\"\n                                alignItems=\"center\"\n                                style={{ marginTop: '20px' }}\n                            >\n                                <div>\n                                    <Controls.Button\n                                        type=\"submit\"\n                                        text=\"Guardar\"\n                                    />\n    \n                                    <Controls.Button\n                                        text=\"Limpiar\"\n                                        color=\"inherit\"\n                                        onClick={resetForm} />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Paper>\n            </div>\n        )\n        }\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Blog/ShowBlog.js",["974","975","976","977","978","979","980","981","982"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    blogholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    entrada: '',\n    image: '',\n    projects: [],\n    date: '',\n}\n\n\nexport default function ShowProjects() {\n    const [blog, setBlog] = useState(initialValue);\n    const { name, entrada, image,date } = blog;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getBlog();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getBlog = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/blog/${id}`, config);\n            setBlog(response.data.blog);\n            let data = response.data.blog;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                entrada: data.entrada,\n                date: date.datae,\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.blogholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre un blog\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Blog\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Nombre del blog: {name ? name : ''}\n                        </Typography>\n                    </CardContent>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Entrada: </span>\n                            {entrada ? entrada : ''}\n                        </Typography>\n                    </CardActions>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Fecha: </span>\n                            {date ? date : 'No hay información'}\n                        </Typography>\n                    </CardActions>\n                    <CardActions>\n                        {/* <Tooltip title=\"Exportar blog\">\n                            <div className={classes.iconContainer}>\n                                <CSVDownloader\n                                    data={toExport}\n                                    filename={'blog'}\n                                    config={{}}\n                                >\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\n                                </CSVDownloader>\n                            </div>\n                        </Tooltip> */}\n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ViewProjects.js",["983","984","985","986","987","988","989","990","991","992","993","994","995","996"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { deleteProject } from '../../services/projectService';\nimport Controls from \"../../components/controls/Controls\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add'\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Download from '@mui/icons-material/Download';\nimport { jsonToCSV, CSVDownloader } from 'react-papaparse';\nimport {getUsers, editRoles} from '../../services/userService';\nimport { version } from 'react-dom/cjs/react-dom.development';\nimport { render } from \"react-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    cell: {\n        paddingTop: 0\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewProject() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [projects, setProjects] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [projectId, setProjectId] = React.useState('');\n    const [openDialogAbandon, setOpenDialogAbandon] = useState(false);\n    const [currentUserRoles, setCurrentUserRoles] = useState({});\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const classes = useStyles();\n\n    function wrapValues(projects) {\n        setProjects(projects);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteProjectData()\n        setOpenDialog(false);\n    }\n\n    const handleCloseAbandon = () => {\n        setOpenDialogAbandon(false);\n    };\n\n    const handleAcceptAbandon = () => {\n        abandonProject();\n        setOpenDialogAbandon(false);\n    };\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Descripción', key: 'description' },\n        { label: 'Precio', key: 'objetives' },\n        { label: 'Justificación', key: 'justification' },\n        { label: 'País', key: 'country' },\n        { label: 'Departamento', key:'department' },\n        { label: 'Distrito', key:'district' },\n        { label: 'Definición', key:'definition' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Percentage', key: 'percentage' }\n    ]\n\n    const csvReport = {\n        filename: 'Projects.csv',\n        headers: headers,\n        data: projects\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllProjects() {\n        try {\n\n            const projects = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/project\",\n                config\n            );\n            wrapValues(projects.data.projects);\n            \n\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authenticatin failed!\");\n        }\n        \n\n        \n\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllProjects();\n        \n        \n        \n        return () => { unmounted = true; };\n        \n\n    }, []);\n\n    const deleteProjectData = async () => {\n        try {\n            let response = await deleteProject(projectId);\n            getAllProjects();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n\n    }\n\n    const abandonProject = async () => {\n        let newRoles = []\n        currentUserRoles.forEach(element => {\n            if(element.projectId !== projectId){\n                newRoles.push(element);\n            }\n        });\n\n        editRoles(localStorage.getItem(\"uid\"), newRoles);\n        getAllProjects();\n    }\n\n    \n    \n    return (\n        \n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este servicio?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openDialogAbandon}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseAbandon}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea abandonar este servicio?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseAbandon} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAcceptAbandon} color=\"secondary\">\n                        Abandonar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los servicios\"\n                subTitle=\"Acá se muestran todos los servicios en el sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo servicio?</Typography>\n                    </Box>\n                    <Box textAlign='center'>\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/project/create/`} text=\"Crear servicio\" />\n                    </Box>\n\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <br />\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar servicios\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{color:'white', marginLeft: '10px'}}> \n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell className={classes.cell}>Nombre</TableCell>\n                                <TableCell className={classes.cell}>Descripción</TableCell>\n                                <TableCell className={classes.cell}>Precio</TableCell>\n                                <TableCell className={classes.programholder} style={{paddingTop: '0px'}}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((project) => (\n                                <TableRow hover className={classes.row} key={project.id}>\n                                    <TableCell>{project.name}</TableCell>\n                                    \n                                    <TableCell>{project.description}</TableCell>\n                                    <TableCell>{project.objetives}</TableCell>\n\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/project/update/${project._id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/project/show/${project._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" style={{ marginRight: 10 }}  onClick={() => {\n                                                    setOpenDialog(true); setProjectId(project._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                            \n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={projects.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ReportForm.js",["997","998","999","1000","1001","1002"],"import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport CircularStatic from '../../components/CircularStatic'\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nimport Alert from '../../components/AlertMessage';\nimport AlertMessage from '../../components/AlertMessage';\nimport { getReports } from '../../services/reportService';\n\n\nconst predictionItems = [\n    { id: 'regresion', title: 'Regresión lineal' },\n    { id: 'clasificacion', title: 'Clasificación' },\n]\n\nconst initialBValues = {\n    name: '',\n    description: '',\n    isTimeSeries: false,\n    projects: '',\n    notesReport: '',\n    cost: '',\n    valuesReport: '',\n    data: ''\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function ReportForm() {\n    \n    const { tid,id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const message = id ? \"Se ha actualizado el proyecto!\" : \"Se ha guardado el proyecto!\"\n    const title = id ? \"Actualizar reporte\" : \"Añadir nueva reporte\";\n    const type = id ? \"actualizar\" : \"agregar\";\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }        \n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('notesReport' in fieldValues)\n            temp.notesReport = fieldValues.notesReport ? \"\" : \"Este campo es obligatorio.\"\n        if ('cost' in fieldValues)\n            temp.cost = fieldValues.cost ? \"\" : \"Este campo es obligatorio.\"\n        if ('valuesReport' in fieldValues)\n            temp.valuesReport = fieldValues.valuesReport ? \"\" : \"Este campo es obligatorio.\"\n        if ('data ' in fieldValues)\n            temp.data  = fieldValues.data  ? \"\" : \"Este campo es obligatorio.\"\n            \n        setErrors({\n            ...temp\n        })        \n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getReport();\n        return () => { unmounted = true; };\n    }, []);\n\n\n\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n\n    const getReport = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/showreport/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.report);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialBValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if(!id){\n            resetForm({\n            })\n        }\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/report/${id}/${tid}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + `/api/private/report/${tid}`, values, config)\n                        .then(confirmPost)\n                        \n                }\n            }\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n    return (\n        \n        <div>\n            <PageHeader\n                title={title}\n                subTitle={`Formulario para ${type} un reporte`}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>                \n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open}/>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                            <Controls.TextArea\n                                label=\"Análisis\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n\n                        </Grid>\n\n                        <Grid item xs={6}>\n                        <Controls.Input\n                                name=\"cost\"\n                                label=\"Costo\"\n                                value={values.cost}\n                                onChange={handleInputChange}\n                                error={errors.cost}\n                                />\n                            \n                        </Grid>\n                        <Controls.TextArea\n                                label=\"Notas\"\n                                name=\"notesReport\"\n                                value={values.notesReport}\n                                onChange={handleInputChange}\n                                error={errors.notesReport}\n                            />\n\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.TextArea\n                                name=\"data\"\n                                label=\"Datos\"\n                                value={values.data}\n                                onChange={handleInputChange}\n                                error={errors.data}\n                            />\n                            <Controls.TextArea\n                                label=\"Valores obtenidos\"\n                                name=\"valuesReport\"\n                                value={values.valuesReport}\n                                onChange={handleInputChange}\n                                error={errors.valuesReport}\n                            />\n\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n                            <div>\n                                <Controls.Button\n                                    type=\"submit\"\n                                    text=\"Guardar\"\n                                />\n\n                                <Controls.Button\n                                    text=\"Limpiar\"\n                                    color=\"inherit\"\n                                    onClick={resetForm} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Data/UploadCSV.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Data/ViewData.js",["1003","1004","1005","1006","1007","1008"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green, red, grey, blue } from '@material-ui/core/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UploadFile from '@mui/icons-material/UploadFile';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport Check from '@mui/icons-material/Check';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Alert from '@mui/material/Alert';\r\nimport { getBase64 } from '../../services/getFileService';\r\nimport { CSVDownloader } from 'react-papaparse'\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { getPermissions } from '../../services/userService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: \"#2f2c33\"\r\n        }\r\n    },\r\n    color: {\r\n        background: green[\"100\"]\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    add: {\r\n        backgroundColor: green[600]\r\n    },\r\n    remove: {\r\n        backgroundColor: red[400]\r\n    },\r\n    edit: {\r\n        backgroundColor: green[700]\r\n    },\r\n    save: {\r\n        backgroundColor: blue[700]\r\n    },\r\n    buttonFixed: {\r\n        position: \"fixed\"\r\n    },\r\n    image: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    showImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    removeImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        },\r\n        \"&:disabled\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    normal: {\r\n\r\n    },\r\n    inputEdit: {\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'green',\r\n                border: \"2px solid\"\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'grey',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'green',\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ViewData() {\r\n    const { pid, bid } = useParams();\r\n    const [factors, setFactors] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const classes = useStyles()\r\n    const [inputFields, setInputFields] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [count, setCount] = React.useState(0);\r\n    const [showCard, setShowCard] = useState(true);\r\n    const [image, setImage] = useState(\"\");\r\n    const [cardPositionX, setCardPositionX] = useState(0);\r\n    const [cardPositionY, setCardPositionY] = useState(0);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [recordId, setRecordId] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [inputEdit, setInputEdit] = useState({});\r\n    const [toExport, setExport] = useState([]);\r\n    const userType = localStorage.getItem(\"type\");\r\n    const [role, setRole] = useState(undefined);\r\n    const editMessage = \"¿Desea actualizar este registro?\";\r\n    const deleteMessage = \"¿Desea eliminar este registro?\";\r\n    const editMessage_2 = \"\";\r\n    const deleteMessage_2 = \"Esta acción no es reversible\";\r\n    const editSuccess = \"Se han actualizado los datos!\"\r\n    const deleteSuccess = \"Se ha eliminado el registro!\"\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    function wrapValues(factors) {\r\n        setFactors(factors);\r\n        setLoading(false);\r\n        setCount(1);\r\n        setPage(1);\r\n    }\r\n\r\n    async function getAllFactors() {\r\n        try {\r\n            const response = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/factorproject/${bid}`,\r\n                config\r\n            );\r\n\r\n            wrapValues(response.data.factors);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    async function getAllData() {\r\n        try {\r\n            const response = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/record/${bid}/${pid}`,\r\n                config\r\n            );\r\n\r\n            let parse = parseData(response.data.records);\r\n            setInputFields(parse);\r\n\r\n            let con = parse.length;\r\n            setCount(con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3));\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    const deleteRecord = async rid => {\r\n        try {\r\n            return await axios.delete(`${process.env.REACT_APP_API_URL}/api/private/record/${rid}`, config);\r\n        } catch (error) {\r\n            throw Error(error?.response?.data?.error);\r\n        }\r\n    }\r\n\r\n    const getEditor = async _ => {\r\n        return new Promise(resolve => {\r\n            let element = {};\r\n            element.timestamp = inputEdit.fecha + \"T\" + inputEdit.hora;\r\n            element.values = {};\r\n\r\n            const forEachLoop = async _ => {\r\n                for (let index = 0; index < factors.length; index++) {\r\n                    element.values[factors[index].name] = inputEdit[factors[index].name];\r\n                }\r\n            }\r\n            forEachLoop().then(() => {\r\n                resolve(element);\r\n            }\r\n            );\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const updateRecord = async _ => {\r\n        let data = await getEditor();\r\n        try {\r\n            return await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/record/${inputEdit.id}`, data, config);\r\n        } catch (error) {\r\n            throw Error(error?.response?.data?.error);\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        if(userType === \"user\"){\r\n            const response = await getPermissions(localStorage.getItem(\"uid\"), bid);\r\n            setRole(response?.data?.role);\r\n        }\r\n        getAllFactors().then(getAllData());\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const handleChangePage = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const parseData = (records) => {\r\n        let inputs = [];\r\n        records.forEach(element => {\r\n            let input = {};\r\n\r\n            input.id = element.id;\r\n            let date = element.timestamp.split(\"T\");\r\n            input.fecha = date[0];\r\n            input.hora = date[1];\r\n\r\n            for (let value in element.values[0]) {\r\n                input[value] = element.values[0][value];\r\n            }\r\n            input.edit = false;\r\n            inputs.push(input);\r\n        });\r\n\r\n        return inputs;\r\n    }\r\n\r\n    const openImage = () => {\r\n        const base64ImageData = image;\r\n        const contentType = image.match(\"data:(.+);\")[1];\r\n\r\n        const byteCharacters = atob(base64ImageData.substr(`data:${contentType};base64,`.length));\r\n        const byteArrays = [];\r\n\r\n        for (let offset = 0; offset < byteCharacters.length; offset += 1024) {\r\n            const slice = byteCharacters.slice(offset, offset + 1024);\r\n\r\n            const byteNumbers = new Array(slice.length);\r\n            for (let i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n\r\n            byteArrays.push(byteArray);\r\n        }\r\n        const blob = new Blob(byteArrays, { type: contentType });\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        window.open(blobUrl, '_blank');\r\n    }\r\n\r\n    const prepareDelete = id => {\r\n        setRecordId(id);\r\n        setOpenDialog(true);\r\n        setIsEdit(false);\r\n    }\r\n\r\n    const prepareEdit = input => {\r\n        setInputEdit(input);\r\n        setOpenDialog(true);\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n\r\n        deleteRecord(recordId).then(() => {\r\n            setOpen(true);\r\n            setOpenDialog(false);\r\n            const values = [...inputFields];\r\n            values.splice(values.findIndex(value => value.id === recordId), 1);\r\n            setInputFields(values);\r\n\r\n            let con = inputFields.length - 1;\r\n            let result = con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3);\r\n            if (result < count) {\r\n                setCount(result);\r\n                setPage(result);\r\n            }\r\n        }).catch(error => {\r\n            setError(error)\r\n            setOpen(true)\r\n            setOpenDialog(false);\r\n        });\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n\r\n        updateRecord().then(() => {\r\n            setOpen(true);\r\n            setOpenDialog(false);\r\n            setInputEdit({});\r\n            isEditing(inputEdit.id, false);\r\n        }).catch(error => {\r\n            setError(error)\r\n            setOpen(true)\r\n            setOpenDialog(false);\r\n        });\r\n    }\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleChangeImageInput = (id, event) => {\r\n        let inputs = []\r\n        const forEachLoop = async _ => {\r\n\r\n            for (let index = 0; index < inputFields.length; index++) {\r\n                if (id === inputFields[index].id) {\r\n\r\n                    inputFields[index][event.target.name] = await getBase64(event.target.files[0]);\r\n                }\r\n                inputs.push(inputFields[index]);\r\n            }\r\n        }\r\n\r\n        forEachLoop().then(() => {\r\n            setInputFields(inputs);\r\n        });\r\n    }\r\n\r\n    const isEditing = (id, edit) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[\"edit\"] = edit;\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const removeImage = (id, factorName) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[factorName] = \"\";\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const displayCard = (isCard, id, factorName, event) => {\r\n        setCardPositionX(event.clientX - 250);\r\n        setCardPositionY(event.clientY - 600);\r\n        let srcImage = \"\"\r\n\r\n\r\n        if (isCard !== \"\") {\r\n\r\n            inputFields.every(input => {\r\n\r\n                if (input.id === id) {\r\n                    srcImage = input[factorName];\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n\r\n        setShowCard(isCard);\r\n        setImage(srcImage);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setOpenDialog(false);\r\n        if (isEdit) {\r\n            isEditing(inputEdit.id, false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <PageHeader\r\n                title=\"Datos incluidos en el programa\"\r\n                subTitle=\"Se muestran todos los datos asociados a este programa y proyecto\"\r\n                icon={<InfoIcon fontSize=\"Large\"\r\n                />}\r\n            />\r\n            <div hidden={role? !role.export : false}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                >\r\n                    <Tooltip title=\"Exportar datos\">\r\n                        <div className={classes.iconContainer}>\r\n                            <CSVDownloader\r\n                                data={inputFields}\r\n                                filename={'data'}\r\n                                config={{}}\r\n                            >\r\n                                <DownloadIcon fontSize={'medium'} color={'success'} />\r\n                            </CSVDownloader>\r\n                        </div>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </div>\r\n            <div className={classes.programholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center'\r\n                }}\r\n            >\r\n                <Pagination\r\n                    sx={{ mt: 1 }}\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    color=\"standard\"\r\n                    count={count}\r\n                    siblingCount={0}\r\n                    boundaryCount={2}\r\n                    page={page}\r\n                    onChange={handleChangePage}\r\n                />\r\n            </Box>\r\n            <Collapse in={open}>\r\n                <Alert\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {error ? error : isEdit ? editSuccess : deleteSuccess}\r\n                </Alert>\r\n            </Collapse>\r\n            <form className={classes.root}>\r\n                <Dialog\r\n                    open={openDialog}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={() => setOpenDialog(false)}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{isEdit ? editMessage : deleteMessage}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n                            {isEdit ? editMessage_2 : deleteMessage_2}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => closeDialog()} color={!isEdit ? \"primary\" : \"secondary\"}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button onClick={isEdit ? handleUpdate : handleDelete} color={isEdit ? \"primary\" : \"secondary\"}>\r\n                            {isEdit ? \"Actualizar\" : \"Eliminar\"}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                        ml: \"5%\"\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                hidden={factors.length === 0}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                className={classes.color}>\r\n                                Fecha\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                hidden={factors.length === 0}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                className={classes.color}>\r\n                                Hora\r\n                            </Typography>\r\n                        </Box>\r\n                        {factors.map(factor => (\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        m: \"8px\",\r\n                                        py: \"6px\",\r\n                                        px: \"20px\",\r\n                                        width: \"100%\",\r\n                                        borderRadius: 1\r\n                                    }}\r\n                                    align=\"center\"\r\n                                    variant=\"subtitle1\"\r\n                                    component=\"div\"\r\n                                    className={classes.color}>\r\n                                    {factor.name}\r\n                                </Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </div>\r\n                    {inputFields.map((inputField, index) => (\r\n                        3 * page - index >= 1 && 3 * page - index <= 3 &&\r\n                        <div key={inputField.id}>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    className={inputFields[index][\"edit\"] ? classes.inputEdit : classes.normal}\r\n                                    disabled={!inputFields[index][\"edit\"]}\r\n                                    style={{ width: \"100%\" }}\r\n                                    type='date'\r\n                                    name=\"fecha\"\r\n                                    value={inputField.fecha}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    className={inputFields[index][\"edit\"] ? classes.inputEdit : classes.normal}\r\n                                    disabled={!inputFields[index][\"edit\"]}\r\n                                    style={{ width: \"100%\" }}\r\n                                    type='time'\r\n                                    name=\"hora\"\r\n                                    value={inputField.hora}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            {factors.map(factor => (\r\n                                <Box sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n                                    {factor.type === \"value\"\r\n                                        ? <TextField\r\n                                            className={inputFields[index][\"edit\"] ? classes.inputEdit : classes.normal}\r\n                                            disabled={!inputFields[index][\"edit\"]}\r\n                                            type='number'\r\n                                            name={factor.name}\r\n                                            value={inputField[factor.name]}\r\n                                            label=\"\"\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                                        />\r\n                                        : inputFields[index][factor.name] === \"\"\r\n                                            ? <Tooltip title=\"Subir imagen\">\r\n                                                <Button\r\n                                                    style={{\r\n                                                        margin: \"8px\",\r\n                                                        width: \"100%\",\r\n                                                        paddingTop: \"8px\",\r\n                                                        paddingBottom: \"8px\",\r\n                                                        paddingLeft: \"20px\",\r\n                                                        paddingRight: \"20px\",\r\n                                                    }}\r\n                                                    disabled={!inputFields[index][\"edit\"]}\r\n                                                    variant=\"contained\"\r\n                                                    component=\"label\"\r\n                                                    className={classes.image}\r\n                                                >\r\n                                                    <UploadFile />\r\n                                                    <input\r\n                                                        name={factor.name}\r\n                                                        accept=\"image/*\"\r\n                                                        id=\"raised-button-file\"\r\n                                                        type=\"file\"\r\n                                                        hidden\r\n                                                        onChange={event => handleChangeImageInput(inputField.id, event)}\r\n                                                    />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                            : <>\r\n                                                <Tooltip title=\"Abrir imagen\">\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            margin: \"8px\",\r\n                                                            width: inputFields[index][\"edit\"] ? \"100%\" : \"75%\",\r\n                                                            paddingTop: \"8px\",\r\n                                                            paddingBottom: \"8px\",\r\n                                                            paddingLeft: \"20px\",\r\n                                                            paddingRight: \"20px\",\r\n                                                        }}\r\n                                                        variant=\"contained\"\r\n                                                        onMouseEnter={(event) => displayCard(false, inputField.id, factor.name, event)}\r\n                                                        onMouseLeave={(event) => displayCard(true, \"\", \"\", event)}\r\n                                                        onClick={() => openImage()}\r\n                                                        className={classes.showImg}\r\n                                                    >\r\n                                                        <Box\r\n                                                            component=\"img\"\r\n                                                            sx={{\r\n                                                                height: 25,\r\n                                                                width: 25,\r\n                                                                maxHeight: { xs: 25, md: 25 },\r\n                                                                maxWidth: { xs: 25, md: 25 },\r\n                                                            }}\r\n                                                            alt=\"\"\r\n                                                            src={inputFields[index][factor.name]}\r\n                                                        />\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                                {\r\n                                                    inputFields[index][\"edit\"] &&\r\n                                                    <Tooltip title=\"Remover imagen\">\r\n                                                        <Button\r\n                                                            style={{\r\n                                                                margin: \"8px\",\r\n                                                                width: \"25%\",\r\n                                                                paddingTop: \"8px\",\r\n                                                                paddingBottom: \"8px\",\r\n                                                                paddingLeft: \"20px\",\r\n                                                                paddingRight: \"20px\",\r\n                                                            }}\r\n                                                            disabled={!inputFields[index][\"edit\"]}\r\n                                                            variant=\"contained\"\r\n                                                            className={classes.removeImg}\r\n                                                            onClick={() => removeImage(inputField.id, factor.name)}\r\n                                                        >\r\n                                                            <ClearIcon />\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n                                                }\r\n                                            </>\r\n                                    }\r\n                                </Box>\r\n                            ))}\r\n                            <div hidden={role?!role.editData:false}>\r\n                                <Box\r\n                                    sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n\r\n                                    {!inputFields[index][\"edit\"]\r\n                                        ? <Tooltip title=\"Editar registro\">\r\n                                            <IconButton onClick={() => isEditing(inputField.id, true)}>\r\n                                                <Avatar className={classes.edit}>\r\n                                                    <ModeEditIcon />\r\n                                                </Avatar>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        : <Tooltip title=\"Guardar datos\">\r\n                                            <IconButton onClick={() => prepareEdit(inputField)}>\r\n                                                <Avatar className={classes.save}>\r\n                                                    <Check />\r\n                                                </Avatar>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    }\r\n                                    <Tooltip title=\"Eliminar registro\">\r\n                                        <IconButton onClick={() => prepareDelete(inputField.id)}>\r\n                                            <Avatar className={classes.remove}>\r\n                                                <DeleteIcon />\r\n                                            </Avatar>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Box>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </Box>\r\n            </form>\r\n            <Card\r\n                sx={{\r\n                    maxWidth: 300,\r\n                    maxHeight: 300,\r\n                    position: \"relative\",\r\n                    top: cardPositionY,\r\n                    left: cardPositionX,\r\n                }}\r\n                hidden={showCard}\r\n            >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"194\"\r\n                    image={image}\r\n                    alt=\"\"\r\n                />\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ViewData;","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Graphics/ShowGraphics.js",["1009","1010","1011"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Container from '@material-ui/core/Container';\r\nimport ShowBoxplot from './ShowBoxplot';\r\nimport ShowHistogram from './ShowHistogram';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport Grid from '@mui/material/Grid';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nfunction ShowGraphics() {\r\n    const { pid, bid } = useParams();\r\n    const [error, setError] = useState('');\r\n    const [data, setData] = useState({ \"_isFull\": 0 });\r\n    const [graphics, setGraphics] = React.useState('histogram');\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getData() {\r\n        try {\r\n            const result = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/record/num/${bid}/${pid}`,\r\n                config\r\n            );\r\n            setData(result.data);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getData();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const handleChange = (event, newGraphics) => {\r\n        setGraphics(newGraphics);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={graphics}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"histogram\">Histogramas</ToggleButton>\r\n                    <ToggleButton value=\"boxplot\">Boxplots</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <div>\r\n                {graphics === \"histogram\" ?\r\n                    <ShowHistogram data={data} />\r\n                    : !data.hasOwnProperty(\"_isFull\") && <div>\r\n                        <ShowBoxplot data={data} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShowGraphics;\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ShowProject.js",["1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Controls from \"../../components/controls/Controls\";\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport ProgramIcon from '@material-ui/icons/Place';\nimport { Link } from 'react-router-dom';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, CssBaseline } from '@material-ui/core'\nimport { useForm, Form } from '../../components/useForm';\nimport Tooltip from '@mui/material/Tooltip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewFactors from '../Factors/ViewFactors';\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { ScrollToTop } from '../../components/ScrollToTop'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { getPermissions } from '../../services/userService';\n\nconst useStyles = makeStyles(theme => ({\n  cardContainer: {\n    width: 800,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  media: {\n    height: 300,\n  },\n  table: {\n    width: '90%',\n    margin: '50px 0 0 0'\n  },\n  thead: {\n    '& > *': {\n      fontSize: 20,\n      background: '#8ade8f',\n      color: '#FFFFFF'\n    }\n  },\n  row: {\n    '& > *': {\n      fontSize: 18\n    }\n  },\n  buttonheader: {\n    display: 'flex'\n\n  },\n  programholder: {\n    height: 40,\n    textAlign: 'center'\n  },\n  button: {\n    background: '#4287f5',\n    color: '#FFFFFF'\n  },\n  pageContent: {\n    width: '90%',\n    margin: '50px 0 0 0',\n    padding: theme.spacing(3),\n  },\n  center: {\n    display: 'flex',\n    textAlign: 'center'\n  },\n  horizmenu: {\n    display: 'inline-block'\n  },\n  textLeft: {\n    marginLeft: '0',\n    paddingLeft: '0'\n  }\n}));\n\nconst initialValue = {\n  name: '',\n  description: '',\n  objetives: '',\n  justification: '',\n  country: '',\n  department: '',\n  district: '',\n  definition: '',\n  isTimeSeries: true,\n  image: '',\n  programs: [],\n  factors: []\n}\n\nconst initialProgramValues = {\n  name: '',\n  description: '',\n  objetivesProgram: '',\n  definitionProgram: '',\n  image: '',\n  projects: []\n}\n\nconst cleanProgram = {\n  name: '',\n  description: '',\n  objetivesProgram: '',\n  definitionProgram: '',\n  image: '',\n  projects: []\n}\n\n\nexport default function ShowProjects() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [toExport, setExport] = useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const [project, setProject] = useState(initialValue);\n  const { name, description, objetives,justification, country,department,district,definition, isTimeSeries, percentage,totalDays,nowDays,totalTasks, image, programs, factors } = project;\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = React.useState(true);\n  const [loadingAso, setLoadingAso] = React.useState(false);\n  const [programsBio, setProgramsBio] = React.useState([]);\n  const [filteredPrograms, setFilteredPrograms] = React.useState([{ name: \"\" }]);\n  const [isProgramsBio, setIsProgramsBio] = React.useState(false);\n  const [isEmpty, setIsEmpty] = React.useState(true);\n  const [programImage, setImage] = React.useState(\"\");\n  const userType = localStorage.getItem(\"type\");\n  const [role, setRole] = useState();\n  const classes = useStyles();\n  const { id } = useParams();\n  useEffect( async() => {\n\n    let unmounted = false;\n    setLoading(true);\n    if(userType === \"user\"){\n      const response = await getPermissions(localStorage.getItem(\"uid\"), id);\n      setRole(response?.data?.role);\n    }\n    await getProgramsBio();\n    await getFilteredPrograms();\n    await getProject();\n    setLoading(false);\n    return () => { unmounted = true; };\n  }, []);\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n    },\n  };\n\n  async function beautifyFactors(){\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/private/factorproject/${id}`,\n      config\n    );\n    let factorsExport = {};\n    const factors = response.data.factors;\n    for (const factor in factors){\n      delete factors[factor]._id;\n      delete factors[factor].__v;\n      delete factors[factor].projectID;\n      factorsExport[`factor${factor}`] = Object.entries(factors[factor]);\n    }\n    return factorsExport;\n  }\n\n  function beautifyPrograms(){\n    let programsExport = {};\n    for (const program in programsBio) {\n      delete programsBio[program]._id;\n      delete programsBio[program].__v;\n      delete programsBio[program].projects;\n      programsExport[`program${program}`] = Object.entries(programsBio[program]);\n    }\n    return programsExport;\n  }\n\n  async function beautifyCSV(projectP){\n\n    const factors = await beautifyFactors();\n    const programs = beautifyPrograms();\n    let toExport = {\n      id: projectP.id,\n      name: projectP.name,\n      description: projectP.description,\n      objetives: projectP.objetives,\n      justification: projectP.justification,\n      country: projectP.country,\n      department: projectP.department,\n      district: projectP.district,\n      definition: projectP.definition,\n      isTimeSeries: projectP.isTimeSeries,\n      percentage: projectP.percentage,\n      totalDays: projectP.totalDays,\n      nowDays: projectP.nowDays,\n      totalTasks: projectP.totalTasks\n    }\n    toExport = Object.assign(toExport,programs);\n    toExport = Object.assign(toExport,factors);\n    setExport([toExport]);\n  }\n\n  const getProject = async () => {\n    try {\n      \n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/project/${id}`, config);\n      setProject(response.data.project);\n      let data = response.data.project;\n      \n      beautifyCSV(data);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n\n      }, 5000);\n      setOpen(true);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n\n  const getProgramsBio = async () => {\n    try {\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/programproject/${id}`, config);\n      setProgramsBio(response.data.programs);\n      setLoading(false);\n      if (response.data.programs.length > 0)\n        setIsProgramsBio(true);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n\n      }, 5000);\n      setOpen(true);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  const getFilteredPrograms = async () => {\n    try {\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/filteredprogram/${id}`, config);\n      setFilteredPrograms(response.data.programs);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n\n      }, 5000);\n      setOpen(true);\n      return setError(\"Authentication failed!\");\n\n\n    }\n  }\n\n  const getPictureProgram = async (program) => {\n    try {\n      if (program) {\n        let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/programPicture/${program.id}`, config);\n        setImage(response.data.program.image);\n      } else {\n        setImage(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors }\n    if ('name' in fieldValues)\n      temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n    if ('description' in fieldValues)\n      temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n    if ('objetivesProgram' in fieldValues)\n      temp.objetivesProgram = fieldValues.objetivesProgram ? \"\" : \"Este campo es obligatorio.\"\n    if ('definitionProgram' in fieldValues)\n      temp.definitionProgram = fieldValues.definitionProgram ? \"\" : \"Este campo es obligatorio.\"\n    setErrors({\n      ...temp\n    })\n\n    if (fieldValues === values)\n      return Object.values(temp).every(x => x === \"\")\n  }\n\n  const addNewProgram = async () => {\n    try {\n      setLoadingAso(true);\n      values.projects.push(id);\n      return await axios.post(`${process.env.REACT_APP_API_URL}/api/private/program/`, values, config);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n\n      }, 5000);\n      setOpen(true);\n      setLoadingAso(false);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  const updateProgram = async () => {\n    try {\n      setLoadingAso(true);\n      programValue.projects.push(id);\n      return await axios.patch(`${process.env.REACT_APP_API_URL}/api/private/program/${programValue.id}`, programValue, config);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n\n      }, 5000);\n      setOpen(true);\n      setLoadingAso(false);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  const updateProject = async (program) => {\n    try {\n      setLoadingAso(true);\n      project.programs.push(program._id);\n      axios.patch(`${process.env.REACT_APP_API_URL}/api/private/project/${id}`, project, config);\n      setLoadingAso(false);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n\n      }, 5000);\n      setOpen(true);\n      setLoadingAso(false);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  const associateProgram = async () => {\n    await updateProgram().then(setLoadingAso(false));\n    await updateProject(programValue).then(setLoadingAso(false));\n    await getFilteredPrograms();\n    await getProgramsBio();\n    setProgramValue(filteredPrograms[0]);\n    setInputValue('');\n    setIsEmpty(true);\n    confirmPost();\n  }\n\n  const wrapProgram = async (program) => {\n    await updateProject(program).then(setLoadingAso(false));\n    await getFilteredPrograms();\n    await getProgramsBio();\n    confirmPost();\n  }\n\n\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialProgramValues, true, validate);\n\n  const confirmPost = () => {\n    setOpen(true);\n    resetForm({\n\n    })\n    setTimeout(function () {\n      setOpen(false);\n    }, 6000);\n  }\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (validate()) {\n      addNewProgram().then((response) => {\n        setLoadingAso(false);\n        setValues(cleanProgram);\n        wrapProgram(response.data.Program);\n      });\n\n    }\n  }\n\n  const [programValue, setProgramValue] = React.useState(filteredPrograms[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  return (\n\n    <div className={classes.root}>\n\n      <div className={classes.programholder} hidden={!loading} style={{ width: \"90%\" }}>\n        <Fade\n          in={loading}\n          style={{\n            transitionDelay: '0m',\n          }}\n          unmountOnExit\n        >\n          <CircularProgress />\n        </Fade>\n        <br />\n      </div>\n      <div className={classes.root}>\n        <Snackbar open={open} autoHideDuration={3000}>\n          <Alert severity={error ? \"error\" : \"success\"}>\n            {error ? \"Error!\" : \"Se ha asociado el laboratorio!\"}\n          </Alert>\n        </Snackbar>\n      </div>\n\n      <PageHeader\n        title=\"Información detallada sobre un servicio\"\n        subTitle=\"Se mostrará también los programas y factores asociados\"\n        icon={<InfoIcon fontSize=\"large\"\n        />}\n      />\n      <br id=\"programas\" />\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ width: \"90%\" }}\n      >\n        <Card className={classes.cardContainer}>\n\n          <CardMedia\n            className={classes.media}\n            image={image ? image : defaultImg}\n            title=\"\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Nombre: {name ? name : 'Nombre'}\n            </Typography>\n            \n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n              Descripción: {description ? description : 'Descripción'}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n              Precio: {objetives ? objetives: 'Sin objetivos'}\n            </Typography>\n            \n            \n          </CardContent>\n\n          <CardActions disableSpacing>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n              ¿Servicio activo?\n            </Typography>\n            <Controls.Checkbox\n              name=\"isTimeSeries\"\n              label=\"\"\n              value={isTimeSeries}\n              disabled={true}\n            />\n          </CardActions>\n        </Card>\n      </Grid>\n\n      <br />\n\n      <ScrollToTop showBelow={150} />\n\n\n    </div>\n  );\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ProjectForm.js",["1063","1064","1065","1066","1067","1068","1069","1070","1071"],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/Predictor.js",["1072"],"import React, { useState, useEffect } from 'react';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport BiotechIcon from '@mui/icons-material/Biotech';\r\nimport { Paper, Grid, makeStyles } from '@material-ui/core'\r\nimport ProjectSelector from './ProjectSelector';\r\nimport ProgramSelector from './ProgramSelector';\r\nimport DateRangeSelector from './DateRangeSelector';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Link } from 'react-router-dom';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport { addPrediction } from '../../services/predictionService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#8ade8f',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#8ade8f',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    programholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n\r\n}));\r\n\r\nexport default function Predictor() {\r\n    const classes = useStyles();\r\n    const [project, setProject] = useState(\"\");\r\n    const [program, setProgram] = useState(\"\");\r\n    const [initialDate, setInitialDate] = useState(\"\");\r\n    const [finalDate, setFinalDate] = useState(\"\");\r\n\r\n    const [projectName, setProjectName] = useState(\"\");\r\n    const [programName, setProgramName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setProgram(\"\");\r\n        setProgramName(\"\");\r\n    }, [project]);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if(initialDate !== \"\" && finalDate !== \"\" && project !== \"\" && program !== \"\"){\r\n            let values = {\r\n                projectID: project,\r\n                programID: program,\r\n                initialDate: initialDate,\r\n                finalDate: finalDate\r\n            }\r\n            console.log(values);\r\n            addPrediction(values);\r\n\r\n        }else{\r\n            console.log(\"Error: Falta al menos un dato\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Realizar Predicción\"\r\n                subTitle=\"Siga los pasos encontrados en esta página, al finalizar, dirijase al botón al final de la página.\"\r\n                icon={<BiotechIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <br />\r\n             <PageHeader\r\n                title=\"Elija un proyecto\"\r\n                subTitle=\"Elija el bióproceso al que le desea hacer una predicción.\"\r\n                icon={<EcoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <ProjectSelector setProject={setProject} setProjectName={setProjectName}/>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h5\" align=\"center\">proyecto Seleccionado:</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">{projectName}</Typography>\r\n                    </Box>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <br />\r\n            <PageHeader\r\n                title=\"Elija un programa\"\r\n                subTitle=\"Elija el programa realacionado al proyecto seleccionado al que le desea hacer una predicción.\"\r\n                icon={<LocationOnIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <ProgramSelector id={project} setProgram={setProgram} setProgramName={setProgramName}/>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h5\" align=\"center\">Programa Seleccionado:</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">{programName}</Typography>\r\n                    </Box>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <br />\r\n            <PageHeader\r\n                title=\"Elija un rango de fechas\"\r\n                subTitle=\"Los datos encontrados en este rango de fecha serán utilizados para realizar la predicción.\"\r\n                icon={<CalendarTodayIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <br />\r\n            <DateRangeSelector setInitialDate={setInitialDate} setFinalDate={setFinalDate}/>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h5\" align=\"center\">Datos a utilizar para la predicción:</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">proyecto: {projectName}</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">Programa: {programName}</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">FechaInicial: {initialDate}</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">FechaFinal: {finalDate}</Typography>\r\n                    </Box>\r\n                    <Box textAlign='center'>\r\n                        <Controls.Button color=\"primary\" variant=\"contained\" onClick={handleSubmit} text=\"Realizar Predicción\"/>\r\n                    </Box>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <br />\r\n\r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Organization/ShowOrganization.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    description: '',\n    objetivesOrganization: '',\n    definitionOrganization: '',\n    image: '',\n}\n\n\nexport default function ShowOrganizations() {\n    const [organization, setOrganization] = useState(initialValue);\n    const { name, description, objetivesOrganization, definitionOrganization, image } = organization;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getOrganization();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getOrganization = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/organization/${id}`, config);\n            setOrganization(response.data.organization);\n            let data = response.data.organization;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                description: data.description,\n                objetivesOrganization: data.objetivesOrganization,\n                definitionOrganization: data.definitionOrganization,\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.programholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre un laboratorio\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {description ? description : ''}\n                        </Typography>\n                    </CardContent>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Teléfono: </span>\n                            {objetivesOrganization ? objetivesOrganization : ''}\n                        </Typography>\n                    </CardActions>\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Correo Electrónico: </span>\n                            {definitionOrganization ? definitionOrganization : ''}\n                        </Typography>\n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Notice/NoticeForm.js",["1082","1083","1084"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport axios from 'axios';\nimport CircularStatic from '../../components/CircularStatic'\nimport ImageComponent from '../../components/ImageComponent';\n\nconst initialValues = {\n    name: '',\n    entrada: '',\n    image: '',\n    projects: []\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    noticeholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function NoticeForm() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const message = id ? \"Se ha actualizado la noticia!\" : \"Se ha guardado la noticia!\"\n    const title = id ? \"Actualizar Noticia\" : \"Añadir nueva Noticia\";\n    const description = id ? \"Formulario para actualizar Noticia\" : \"Formulario para añadir Noticia\";\n    const [progress, setProgress] = useState(0);\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('entrada' in fieldValues)\n            temp.entrada = fieldValues.entrada ? \"\" : \"Este campo es obligatorio.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getNotice();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n    const getNotice = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/notice/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.notice);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            console.log(\"create\");\n            resetForm({});\n        }\n\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/notice/${id}`, values, config)\n                        .then(confirmPost)\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/notice/\", values, config)\n                        .then(confirmPost)\n                }\n\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={description}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        style={{ textAlign: 'center' }}>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Título de la noticia\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Controls.TextArea\n                                name=\"entrada\"\n                                label=\"Noticia\"\n                                value={values.entrada}\n                                onChange={handleInputChange}\n                                error={errors.entrada}\n                            />\n                        </Grid>\n                        \n\n\n\n                        \n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n\n                            <Controls.Button\n                                type=\"submit\"\n                                text=\"Guardar\"\n                            />\n                            <Controls.Button\n                                text=\"Limpiar\"\n                                color=\"default\"\n                                onClick={resetForm} />\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Notice/ViewNotice.js",["1085","1086","1087"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab/';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport { deleteNotice } from '../../services/noticeService';\nimport Controls from \"../../components/controls/Controls\";\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    noticeholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    noticeholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewNotice() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [notices, setNotices] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [noticeId, setNoticeId] = React.useState('');;\n\n    const classes = useStyles();\n\n    function wrapValues(notices) {\n        setNotices(notices);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteNoticeData()\n        setOpenDialog(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Objetivos', key: 'entrada' },\n    ]\n\n    const csvReport = {\n        filename: 'Notices.csv',\n        headers: headers,\n        data: notices\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllNotices() {\n        try {\n            const notices = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/notice\",\n                config\n            );\n            wrapValues(notices.data.notices);\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(async () => {\n        let unmounted = false;\n        await getAllNotices();\n        return () => { unmounted = true; };\n    }, []);\n\n    const deleteNoticeData = async () => {\n        try {\n            await deleteNotice(noticeId);\n            getAllNotices();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este proyecto?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre las noticias\"\n                subTitle=\"Acá se mostrarán todos las noticias del sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita una nueva noticia?</Typography>\n\n                    </Box>\n                    <Box textAlign='center'>\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/notice/create/`} text=\"Crear noticia\" />\n                    </Box>\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.noticeholderLoading} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n            <Collapse in={open}>\n                <Alert\n\n                    severity={error ? \"error\" : \"success\"}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\n                    {error}\n                </Alert>\n            </Collapse>\n            <Paper className={classes.table}>\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar noticias\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Título de la noticia</TableCell>\n                                <TableCell>Fecha</TableCell>\n                                <TableCell className={classes.noticeholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {notices.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((notice) => (\n                                <TableRow hover className={classes.row} key={notice.id}>\n                                    <TableCell>{notice.name}</TableCell>\n                                    <TableCell>{notice.date}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/notice/update/${notice._id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/notice/show/${notice._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\n                                                    setOpenDialog(true); setNoticeId(notice._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={notices.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Notice/ShowNotice.js",["1088","1089","1090","1091","1092","1093","1094","1095","1096"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    noticeholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    entrada: '',\n    image: '',\n    projects: [],\n    date: '',\n}\n\n\nexport default function ShowProjects() {\n    const [notice, setNotice] = useState(initialValue);\n    const { name, entrada, image,date } = notice;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getNotice();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getNotice = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/notice/${id}`, config);\n            setNotice(response.data.notice);\n            let data = response.data.notice;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                entrada: data.entrada,\n                date: date.datae,\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.noticeholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre una noticia\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Noticia\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Título: {name ? name : ''}\n                        </Typography>\n                    </CardContent>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Noticia: </span>\n                            {entrada ? entrada : ''}\n                        </Typography>\n                    </CardActions>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Fecha: </span>\n                            {date ? date : 'No hay información'}\n                        </Typography>\n                    </CardActions>\n                    <CardActions>\n                        {/* <Tooltip title=\"Exportar notice\">\n                            <div className={classes.iconContainer}>\n                                <CSVDownloader\n                                    data={toExport}\n                                    filename={'notice'}\n                                    config={{}}\n                                >\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\n                                </CSVDownloader>\n                            </div>\n                        </Tooltip> */}\n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Report/ShowReport.js",["1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport Controls from \"../../components/controls/Controls\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    reportholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    description: '',\n    isTimeSeries: true,\n    notesReport: '',\n    cost:0,\n    valuesReport: '',\n    data: ''\n}\n\n\nexport default function ShowReports() {\n    const [report, setReport] = useState(initialValue);\n    const { name, description,isTimeSeries, projects,notesReport, cost, valuesReport,data } = report;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getReport();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    const getReport = async () => {\n        try {\n            console.log(id)\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/showreport/${id}`, config);\n            setReport(response.data.report);\n            let data = response.data.report;\n            setExport([\n                {id: data.id,\n                name: data.name,\n                description: data.description,\n                isTimeSeries: data.isTimeSeries,\n                notesReport: data.notesReport,\n                cost: data.cost,\n                valuesReport: data.valuesReport,\n                data: data.data\n            }])\n            \n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.reportholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre un reporte\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {description ? description : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {cost ? cost : '0'}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {valuesReport ? valuesReport : 'No hay valores'}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {data ? data : 'No hay datos'}\n                        </Typography>\n\n\n\n                    </CardContent>\n                    <CardActions>\n                        {/* <Tooltip title=\"Exportar programa\">\n                            <div className={classes.iconContainer}>\n                                <CSVDownloader\n                                    data={toExport}\n                                    filename={'program'}\n                                    config={{}}\n                                >\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\n                                </CSVDownloader>\n                            </div>\n                        </Tooltip> */}\n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n        </div>\n    );\n}","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Task/TaskView.js",["1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { deleteTask } from '../../services/taskService';\nimport Controls from \"../../components/controls/Controls\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TaskIcon from '@material-ui/icons/'\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Download from '@mui/icons-material/Download';\nimport { jsonToCSV, CSVDownloader } from 'react-papaparse';\nimport {getUsers, editRoles} from '../../services/userService';\nimport { version } from 'react-dom/cjs/react-dom.development';\n\nimport { useParams } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n          fontSize: 20,\n          background: '#8ade8f',\n          color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#8ade8f',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    cell: {\n        paddingTop: 0\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#8ade8f',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function ViewTask() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const { id } = useParams();\n    const [tasks, setTasks] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [taskId, setTaskId] = React.useState('');\n    const [openDialogAbandon, setOpenDialogAbandon] = useState(false);\n    const [currentUserRoles, setCurrentUserRoles] = useState({});\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const classes = useStyles();\n\n    function wrapValues(tasks) {\n        setTasks(tasks);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteTaskData();\n        setOpenDialog(false);\n    }\n\n    const handleCloseAbandon = () => {\n        setOpenDialogAbandon(false);\n    };\n\n    const handleAcceptAbandon = () => {\n        abandonTask();\n        setOpenDialogAbandon(false);\n    };\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Descripción', key: 'description' }\n    ]\n\n    const csvReport = {\n        filename: 'Tasks.csv',\n        headers: headers,\n        data: tasks\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllTasks() {\n        try {\n            const tasks = await axios.get(\n                process.env.REACT_APP_API_URL + `/api/private/filteredtask/${id}`,\n                config\n                \n            );\n                    \n            const currentUser = await getUsers(localStorage.getItem(\"uid\"));\n            if(currentUser.data.user.type === \"admin\"){\n                \n                wrapValues(tasks.data.tasks);\n                setIsAdmin(true);\n\n            }else{\n                setCurrentUserRoles(currentUser.data.user.roles);\n                let permittedTasks = [];\n                \n                currentUser.data.user.roles.forEach(element => {\n                    permittedTasks.push(element.taskId);\n                });\n\n                console.log(permittedTasks);\n\n                let valuesToWrap = [];\n\n                tasks.data.tasks.forEach(element => {\n                    if(permittedTasks.includes(element._id)){\n                        valuesToWrap.push(element);\n                    }\n                });\n                wrapValues(valuesToWrap);\n            }\n            \n            \n\n\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authentication failed!\");\n        }\n        \n\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllTasks();\n        \n        \n        \n        return () => { unmounted = true; };\n        \n\n    }, []);\n\n    const deleteTaskData = async () => {\n        try {\n            let response = await deleteTask(taskId);\n            getAllTasks();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n    }\n\n    const abandonTask = async () => {\n        let newRoles = []\n        currentUserRoles.forEach(element => {\n            if(element.taskId !== taskId){\n                newRoles.push(element);\n            }\n        });\n\n        editRoles(localStorage.getItem(\"uid\"), newRoles);\n        getAllTasks();\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar esta tarea?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openDialogAbandon}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseAbandon}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea abandonar este tarea?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseAbandon} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAcceptAbandon} color=\"secondary\">\n                        Abandonar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <PageHeader\n                title=\"Gestión de tareas\"\n                subTitle=\"Sección para la administración de tareas\"\n                icon={<InfoIcon fontSize=\"large\"\n                \n                />}\n            />\n\n\n            \n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <br />\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    {/* <div className={classes.test}>\n                    <CSVDownloader\n                        data= {tasks}\n                        filename={'tasks'}\n                        config={{}}\n                    > Download</CSVDownloader>\n                    </div> */}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar tareas\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{color:'white', marginLeft: '10px'}}> \n                                    \n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell className={classes.cell}>Nombre</TableCell>\n                                <TableCell className={classes.cell}>¿Completada?</TableCell>\n                                <TableCell className={classes.cell}></TableCell>\n                                <TableCell className={classes.programholder} style={{paddingTop: '0px'}}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((task) => (\n                                <TableRow hover className={classes.row} key={task.id}>\n                                    <TableCell>{task.name}</TableCell>\n                                    <TableCell>\n                                        <Controls.Checkbox\n                                            name=\"isTimeSeries\"\n                                            label=\"\"\n                                            value={task.isTimeSeries}\n                                            disabled={true}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                        </Grid>\n                                    </TableCell>\n\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Editar\">\n                    \n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/task/update/${task._id}/${id}`}><ModeEditIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/task/show/${task._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Eliminar\">\n                                                <Button color=\"secondary\" variant=\"contained\" style={{ marginRight: 10 }}  onClick={() => {\n                                                    setOpenDialog(true); setTaskId(task._id);\n                                                }}><DeleteIcon /></Button>\n                                            </Tooltip>\n                                            {!isAdmin &&\n                                                <Tooltip title=\"Eliminar esta tarea\">\n                                                    <Button color=\"warning\" variant=\"contained\" onClick={() => {\n                                                        setOpenDialogAbandon(true); setTaskId(task._id);\n                                                    }}><LogoutIcon /></Button>\n                                                </Tooltip>\n                                            }\n                                            \n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={tasks.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n\n            >\n                <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/task/create/${id}`} text=\"Crear Tarea\" />\n            \n            </Grid>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/components/AlertMessage.js",["1123","1124"],"import React, { useState, useEffect } from 'react'\r\nimport Alert from '@mui/material/Alert';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\nexport default function AlertMessage(props) {\r\n    let {errorMessage, successMessage, openMessage } = props;\r\n    return (\r\n        <Collapse in={openMessage}>\r\n        <Alert\r\n            severity={errorMessage ? \"error\" : \"success\"}\r\n            action={\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        openMessage = false;\r\n                    }}\r\n                >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            {errorMessage ? errorMessage : successMessage}\r\n        </Alert>\r\n    </Collapse>\r\n    )\r\n}\r\n\r\n\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/components/PageHeader.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/userService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/taskService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Controls.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/TextArea.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/InputButton.js",["1125","1126"],"import { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        textTransform: 'none'\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    },\r\n\r\n    test: {\r\n        textTransform: 'none',\r\n        margin: theme.spacing(0.5),\r\n    }\r\n}))\r\n\r\nexport default function Button2(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            style={{margin:'auto', textTransform:'none', margin: '4px'}}\r\n            >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Button.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/DatePicker.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Checkbox.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Select.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/Input.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/controls/RadioGroup.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/noticeService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/ImageComponent.js",["1127"],"import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport defaultImg from '../assets/img/defaultImg.jpeg'\r\nimport { Divider, Grid, } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    margin: {\r\n        marginBottom: \"25px\"\r\n    },\r\n    right: {\r\n        display: \"inline-flex\",\r\n        flex: \"row\"\r\n    }\r\n}))\r\n\r\nexport default function ImageComponent(props) {\r\n    const { initialValues, onChange, profile, ...other } = props\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.margin}\r\n            >\r\n                <div className={classes.right}>\r\n                    <div>\r\n                        <Avatar\r\n                            src={initialValues.image ? initialValues.image : profile?\"\":defaultImg}\r\n                            alt=\"\"\r\n                            className={classes.sizeAvatar}\r\n                            style={{ margin: 'auto' }}>\r\n\r\n                        </Avatar>\r\n                    </div>\r\n\r\n                    <div className={classes.toolbarButtons}>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <EditIcon fontSize=\"small\" color=\"success\" />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            getContentAnchorEl={null}\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: \"top\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem>\r\n                                <input\r\n                                    name=\"image\"\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: 'none' }}\r\n                                    id=\"raised-button-file\"\r\n                                    type=\"file\"\r\n                                    hidden\r\n                                    onChange={onChange}\r\n                                />                                \r\n                                <label htmlFor=\"raised-button-file\">\r\n                                    Cambiar\r\n                                </label>\r\n                            </MenuItem>\r\n                            <MenuItem id=\"clearImage\" onClick={onChange}>\r\n                                Quitar\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n            <Divider />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/components/CircularStatic.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/components/useForm.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/predictionService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/DateRangeSelector.js",["1128","1129","1130","1131","1132","1133","1134"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function DateRangeSelector({ setInitialDate, setFinalDate }) {\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        if (id == 0) {\r\n            setInitialDate(event.target.value);\r\n        } else if (id == 1) {\r\n            setFinalDate(event.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: 'flex', p: 1}}>\r\n\r\n                <Box\r\n                    sx={{\r\n                        width: \"45%\"\r\n                    }}\r\n                >\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"div\">\r\n                                Fecha Inicial\r\n                            </Typography>\r\n                            <TextField\r\n                                style={{ width: \"100%\" }}\r\n                                type='date'\r\n                                name=\"initialDate\"\r\n                                defaultValue={\"00:00\"}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onChange={event => handleChangeInput(0, event)}\r\n                            />\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </Box>\r\n                <Box\r\n                    sx={{\r\n                        width: \"45%\"\r\n                    }}\r\n                >\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"div\">\r\n                                Fecha Final\r\n                            </Typography>\r\n                            <TextField\r\n                                style={{ width: \"100%\" }}\r\n                                type='date'\r\n                                name=\"finalDate\"\r\n                                defaultValue={\"00:00\"}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onChange={event => handleChangeInput(1, event)}\r\n                            />\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/ProgramSelector.js",["1135","1136","1137","1138"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  Paper,\n  TableRow,\n  TableBody,\n  Button,\n  makeStyles,\n  CssBaseline,\n  Grid,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  cardContainer: {\n    width: 800,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  media: {\n    height: 300,\n  },\n  table: {\n    width: \"90%\",\n    margin: \"50px 0 0 0\",\n  },\n  thead: {\n    \"& > *\": {\n      fontSize: 20,\n      background: \"#8ade8f\",\n      color: \"#FFFFFF\",\n    },\n  },\n  row: {\n    \"& > *\": {\n      fontSize: 18,\n    },\n  },\n  buttonheader: {\n    display: \"flex\",\n  },\n  programholder: {\n    height: 40,\n    textAlign: \"center\",\n  },\n  button: {\n    background: \"#4287f5\",\n    color: \"#FFFFFF\",\n  },\n  pageContent: {\n    width: \"90%\",\n    margin: \"50px 0 0 0\",\n    padding: theme.spacing(3),\n  },\n  center: {\n    display: \"flex\",\n    textAlign: \"center\",\n  },\n  horizmenu: {\n    display: \"inline-block\",\n  },\n  textLeft: {\n    marginLeft: \"0\",\n    paddingLeft: \"0\",\n  },\n}));\n\nexport default function ProgramSelector({id, setProgram, setProgramName}) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [programsBio, setProgramsBio] = React.useState([]);\n  const [isProgramsBio, setIsProgramsBio] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleParentData = (pl, plName) => {\n    setProgram(pl);\n    setProgramName(plName);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  \n  useEffect(() => {\n    let unmounted = false;\n    getProgramsBio();\n    return () => { unmounted = true; };\n  }, [id]);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n    },\n  };\n\n  const getProgramsBio = async () => {\n    try {\n      setLoading(true);\n      let response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/private/programproject/${id}`,\n        config\n      );\n      setProgramsBio(response.data.programs);\n      setLoading(false);\n      if (response.data.programs.length > 0) setIsProgramsBio(true);\n    } catch (error) {\n      setTimeout(() => {\n        setOpen(false);\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }, 5000);\n      setOpen(true);\n      setLoading(false);\n      return setError(\"Authentication failed!\");\n    }\n  };\n\n\n  \n\n  return (\n    <div>\n      <div className={classes.root}>\n        <div hidden={!isProgramsBio}>\n          <CssBaseline />\n          <div className={classes.programholder} hidden={!loading}>\n            <Fade\n              in={loading}\n              style={{\n                transitionDelay: \"0m\",\n              }}\n              unmountOnExit\n            >\n              <CircularProgress />\n            </Fade>\n            <br />\n          </div>\n          <Paper className={classes.table}>\n            <TableContainer>\n              <Table\n                stickyHeader\n                aria-label=\"sticky table\"\n                className={classes.container}\n              >\n                <TableHead>\n                  <TableRow className={classes.thead}>\n                    <TableCell>Nombre</TableCell>\n                    <TableCell>Objetivos</TableCell>\n                    <TableCell>Definición principal</TableCell>\n                    <TableCell className={classes.programholder}>\n                      Acciones\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {programsBio\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((program) => (\n                      <TableRow hover className={classes.row} key={program.id}>\n                        <TableCell>{program.name}</TableCell>\n                        <TableCell>{program.objetivesProgram}</TableCell>\n                        <TableCell>{program.definitionProgram}</TableCell>\n                        <TableCell>\n                          <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                          >\n                              <Tooltip title=\"Seleccionar\">\n                              <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{ marginRight: 10 }}\n                                onClick={() => handleParentData(program._id, program.name)}\n                              >\n                                <CheckIcon />\n                              </Button>\n                            </Tooltip>\n                            <Tooltip title=\"Información\">\n                              <Button\n                                className={classes.button}\n                                variant=\"contained\"\n                                style={{ marginRight: 10 }}\n                                component={Link}\n                                to={`/program/show/${program._id}`}\n                              >\n                                <InfoIcon />\n                              </Button>\n                            </Tooltip>\n                            <Tooltip title=\"Mostrar datos\">\n                              <Button\n                                color=\"inherit\"\n                                variant=\"contained\"\n                                style={{ marginRight: 10 }}\n                                component={Link}\n                                to={`/data/show/${id}/${program._id}`}\n                              >\n                                <VisibilityIcon />\n                              </Button>\n                            </Tooltip>\n                            \n                          </Grid>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={programsBio.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n        <div className={classes.programholder} hidden={isProgramsBio}>\n          <br />\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n            No hay nada qué mostrar en está sección\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Predictor/ProjectSelector.js",["1139","1140","1141","1142","1143","1144","1145","1146","1147","1148"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckIcon from '@mui/icons-material/Check';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport Controls from \"../../components/controls/Controls\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#8ade8f',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n\n}));\n\nexport default function ProjectSelector({setProject, setProjectName}) {\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleParentData = (bio, bioName) => {\n        setProject(bio);\n        setProjectName(bioName);\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [projects, setProjects] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [projectId, setProjectId] = React.useState('');\n\n    function wrapValues(projects) {\n        setProjects(projects);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        setOpenDialog(false);\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllProjects() {\n        try {\n            setLoading(true);\n            const projects = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/project\",\n                config\n            );\n            wrapValues(projects.data.projects);\n\n\n        } catch (error) {\n            setLoading(false);\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllProjects();\n        return () => { unmounted = true; };\n    }, []);\n\n\n    return (\n        <div>\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell>Nombre</TableCell>\n                                <TableCell>¿Es serie temporal?</TableCell>\n                                <TableCell>Tipo</TableCell>\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((project) => (\n                                <TableRow hover className={classes.row} key={project.id}>\n                                    <TableCell>{project.name}</TableCell>\n                                    <TableCell>\n                                        <Controls.Checkbox\n                                            name=\"isTimeSeries\"\n                                            label=\"\"\n                                            value={project.isTimeSeries}\n                                            disabled={true}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{project.type === 'regresion' ? 'Regresión' : 'Clasificación'}</TableCell>\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Seleccionar\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }}onClick={() => handleParentData(project._id, project.name)}><CheckIcon /></Button>\n                                            </Tooltip>\n                                            <Tooltip title=\"Información\">\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/project/show/${project._id}`}><InfoIcon /></Button>\n                                            </Tooltip>\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={projects.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/SCYTO/frontend/src/components/ScrollToTop.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Factors/ViewFactors.js",["1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteFactor } from '../../services/factorService';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab/';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport axios from \"axios\";\r\nimport { CSVLink } from \"react-csv\"\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#17c6f6',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#17c6f6',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        background: '#17c6f6',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n    csvContainer: {\r\n        fontSize: 20,\r\n        background: '#108EB0',\r\n\r\n    },\r\n    iconContainer: {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n    }\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function ViewFactors(props) {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const { id } = useParams();\r\n    const {role, ...other} = props;\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const [factors, setFactors] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [factorId, setFactorId] = React.useState('');;\r\n\r\n    const classes = useStyles();\r\n\r\n    function wrapValues(factors) {\r\n        setFactors(factors);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        deleteFactorData()\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllFactors() {\r\n        try {\r\n            const factors = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/private/factorproject/${id}`,\r\n                config\r\n            );\r\n            wrapValues(factors.data.factors);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllFactors();\r\n        return () => { unmounted = true; };\r\n    }, [role]);\r\n\r\n    const deleteFactorData = async () => {\r\n        await deleteFactor(factorId, id);\r\n        getAllFactors();\r\n    }\r\n\r\n    const headers = [\r\n        { label: 'id', key: 'id' },\r\n        { label: 'Nombre', key: 'name' },\r\n        { label: 'Dependiente', key: 'isDependent' },        \r\n        { label: 'Tipo', key: 'type' },\r\n    ]\r\n\r\n    const csvReport = {\r\n        filename: 'Factors.csv',\r\n        headers: headers,\r\n        data: factors\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Dialog\r\n                open={openDialog}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este factor?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Esta decisión no es reversible.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleAccept} color=\"secondary\">\r\n                        Eliminar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            \r\n\r\n           \r\n            <div className={classes.programholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n            <Collapse in={open}>\r\n                <Alert\r\n\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Graphics/ShowHistogram.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Graphics/ShowBoxplot.js",["1179","1180","1181","1182"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { BoxPlotChart } from '@sgratzl/chartjs-chart-boxplot';\r\n\r\n\r\nfunction ShowBoxplot(props) {\r\n    const { data } = props;\r\n    let configs = [];\r\n    let indexes = [];\r\n    let index = 0;\r\n    for (let key in data) {\r\n        indexes.push(index);\r\n        index++;\r\n        const config = {\r\n            // define label tree\r\n            labels: [\"\"],\r\n            datasets: [{\r\n                label: key,\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                borderColor: 'red',\r\n                borderWidth: 1,\r\n                outlierColor: '#ffffff',\r\n                padding: 5,\r\n                itemRadius: 0,\r\n                data: [data[key]]\r\n            }]\r\n        };\r\n        configs.push(config);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        indexes.forEach(i => {\r\n            const context = document.getElementById(\"canvas\" + i).getContext(\"2d\");\r\n            let boxplot = new BoxPlotChart(context, { data: configs[i] });\r\n        })\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {indexes.map((i) => (\r\n                <canvas id={\"canvas\" + i} />\r\n            ))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowBoxplot;","/Users/karentovar/Documents/SCYTO/frontend/src/services/getFileService.js",["1183","1184"],"import React from 'react'\r\n\r\nexport const getBase64 = file => {\r\n  return new Promise(resolve => {\r\n    let fileInfo;\r\n    let baseURL = \"\";\r\n    // Make new FileReader\r\n    let reader = new FileReader();\r\n\r\n    // Convert the file to base64 text\r\n    reader.readAsDataURL(file);\r\n\r\n    // on reader load somthing...\r\n    reader.onload = () => {\r\n      // Make a fileInfo Object\r\n      baseURL = reader.result;\r\n      resolve(baseURL);\r\n    };\r\n\r\n  });\r\n};\r\n\r\nexport const checkFileValidations = info => {\r\n  if(info.size >= 15165578){\r\n    throw Error(\"LIMIT_FILE_SIZE\")\r\n  }\r\n}\r\n\r\nexport async function getLocalFile(url) {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      headers: {\r\n        'Content-Type': 'image/jpeg',\r\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n      }\r\n    })\r\n    const blob = await response.blob()\r\n    return [URL.createObjectURL(blob), null];\r\n  }\r\n  catch (error) {\r\n    console.error(`get: error occurred ${error}`);\r\n    return [null, error]\r\n  }\r\n}","/Users/karentovar/Documents/SCYTO/frontend/src/components/FileManager.js",["1185","1186","1187","1188"],"import React, { Component } from \"react\";\r\n\r\nimport { CSVReader, jsonToCSV, readString } from \"react-papaparse\";\r\n\r\nimport Controls from \"./controls/Controls\";\r\nimport { addData } from \"../services/dataService\";\r\n\r\nconst buttonRef = React.createRef();\r\n\r\nexport default function FileManager({setCSVData}) {\r\n  const handleOpenDialog = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.open(e);\r\n    }\r\n  };\r\n\r\n  const handleOnFileLoad = (data) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      console.log(\"---------------------------\");\r\n      console.log(data);\r\n      let info = [];\r\n      for (const a of data) {\r\n        delete a.data.__parsed_extra;\r\n        info.push(a.data);\r\n      }\r\n      if (!info[info.length]) {\r\n        info.pop();\r\n      }\r\n      console.log(\"maci\");\r\n      console.log(info);\r\n      setCSVData(info);\r\n      console.log(\"---------------------------\");\r\n    }\r\n  };\r\n\r\n  const handleOnError = (err, file, inputElem, reason) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const handleOnRemoveFile = (data) => {\r\n    console.log(\"---------------------------\");\r\n    console.log(data);\r\n    console.log(\"---------------------------\");\r\n  };\r\n\r\n\r\n  const handleRemoveFile = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.removeFile(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CSVReader\r\n        ref={buttonRef}\r\n        onFileLoad={handleOnFileLoad}\r\n        onError={handleOnError}\r\n        noClick\r\n        noDrag\r\n        onRemoveFile={handleOnRemoveFile}\r\n        config={{ header: true, quoteChar: \"`\" }}\r\n      >\r\n        {({ file }) => (\r\n          <aside\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <Controls.Button\r\n              variant=\"contained\"\r\n              onClick={handleOpenDialog}\r\n              style={{\r\n                borderRadius: 0,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                width: \"40%\",\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n              }}\r\n              text=\"Elegir archivo\"\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                borderWidth: 1,\r\n                borderStyle: \"solid\",\r\n                borderColor: \"#ccc\",\r\n                height: 45,\r\n                lineHeight: 2.5,\r\n                marginTop: 5,\r\n                marginBottom: 5,\r\n                paddingLeft: 13,\r\n                paddingTop: 3,\r\n                width: \"60%\",\r\n              }}\r\n            >\r\n              {file && file.name}\r\n            </div>\r\n            <Controls.Button\r\n              variant=\"contained\"\r\n              style={{\r\n                borderRadius: 0,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n              }}\r\n              onClick={handleRemoveFile}\r\n              text=\"Eliminar\"\r\n            />\r\n          </aside>\r\n        )}\r\n      </CSVReader>\r\n      \r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/services/projectService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/reportService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/factorService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/dataService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/programService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/blogService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/resourceService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/organizationService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/services/evidenceService.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/AssignPermission.js",["1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport { Paper, makeStyles, Box } from '@material-ui/core';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport { getUsers } from '../../services/userService';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Modal from '@mui/material/Modal';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '90%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    divContent: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        minWidth: 400,\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    imageButton: {\r\n        marginBottom: \"25px\"\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        textAlign: 'center'\r\n      },\r\n}))\r\n\r\nconst initialValues = {\r\n    roles: \"\",\r\n}\r\n\r\nexport default function AssignPermission(props) {\r\n    const inputRef = React.createRef();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [isEmpty, setIsEmpty] = React.useState(true);\r\n    const { userId, openM, onClose, ...other } = props;\r\n    const validate = (fieldValues = values) => {\r\n    }\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        if (userId && openM) {\r\n            let response = await getUsers(userId);\r\n            setValues(response.data.user.roles);\r\n        }else{\r\n            setIsEmpty(true);\r\n            setRoleValue(undefined);\r\n            setInputValue('');\r\n        }\r\n        return () => { unmounted = true; };\r\n    }, [userId, openM]);\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, false, validate);\r\n\r\n    function fixRoles (role){\r\n        for (const roleIndex in values) {\r\n            if (values[roleIndex].projectId === role.projectId){\r\n                let temp = values;\r\n                temp[roleIndex] = role;   \r\n                return temp;             \r\n            }\r\n        }\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        \r\n        try{\r\n            if(isEmpty){\r\n                throw new Error(\"Por favor seleccione un proyecto\");\r\n            }else{\r\n                setOpen(true);\r\n                const newRoles = fixRoles(roleValue);\r\n                const response = await axios.post(\r\n                    `${process.env.REACT_APP_API_URL}/api/private/userRole/${userId}`, {roles: newRoles}, config\r\n                );\r\n                let responseGet = await getUsers(userId);\r\n                setValues(responseGet.data.user.roles);\r\n                setTimeout(() =>{\r\n                    setOpen(false);\r\n                }, 2000)\r\n            }\r\n        }catch(error){\r\n            setOpen(true);\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(error.message);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    const [roleValue, setRoleValue] = React.useState(values[0]);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    return (\r\n        <Modal\r\n        open={openM}\r\n        onClose={onClose}            \r\n        >\r\n            <div className={classes.divContent}>\r\n                <Paper className={classes.pageContent}>\r\n                <AlertMessage errorMessage={error} successMessage={\"Se ha asignado los permisos!\"} openMessage={open} />\r\n                    <Form >\r\n\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n                            \r\n                            <Autocomplete\r\n                                value={roleValue}\r\n                                onChange={(event, newValue) => {\r\n                                    if(newValue){\r\n                                        setRoleValue(newValue);\r\n                                    }\r\n                                }}\r\n                                className={classes.center}\r\n                                id=\"combo-box-programs\"\r\n                                options={values}\r\n                                getOptionLabel={(option) => option.projectName}\r\n                                style={{ width: 300, justifyContent: \"center\" }}\r\n                                renderInput={(params) => <TextField {...params} label=\"Proyectos\" variant=\"outlined\" />}\r\n                                inputValue={inputValue}\r\n                                onInputChange={(event, newInputValue) => {\r\n                                    setInputValue(newInputValue);\r\n                                    if (newInputValue === '') {\r\n                                        setIsEmpty(true);\r\n                                        setRoleValue(undefined);\r\n                                    }\r\n                                    else\r\n                                        setIsEmpty(false);\r\n                                }}\r\n                            />\r\n                            \r\n                        </Grid>\r\n                        \r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"export\"\r\n                                    label=\"Exportar CSV\"\r\n                                    value={roleValue? roleValue.export:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"export\"]: !roleValue.export})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"editFactor\"\r\n                                    label=\"Editar factores\"\r\n                                    value={roleValue? roleValue.editFactor:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"editFactor\"]: !roleValue.editFactor})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"editData\"\r\n                                    label=\"Editar datos\"\r\n                                    value={roleValue? roleValue.editData:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"editData\"]: !roleValue.editData})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n                            <div>\r\n                                <Controls.Button\r\n                                    text=\"Guardar\"\r\n                                    onClick = {handleSubmit}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Form>\r\n                </Paper>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/User/Test.js",["1204"],"import React from 'react'\r\nimport Modal from '@mui/material/Modal';\r\n\r\nexport default function Test(props) {\r\n    const {open, onClose, ...other} = props;\r\n    console.log(\"hola\")\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={onClose}\r\n            \r\n        >\r\n            <div></div>\r\n        </Modal>\r\n    )\r\n}\r\n","/Users/karentovar/Documents/SCYTO/frontend/src/pages/Program/ProgramServices.js",["1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220"],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/ProjectBook.js",["1221","1222","1223","1224","1225","1226"],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/Calendar.js",[],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/AvailabilityView.js",["1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245"],"/Users/karentovar/Documents/SCYTO/frontend/src/pages/Project/AvailabilityEdit.js",["1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/index.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/reportWebVitals.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/App.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/SideMenu.js",["1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271"],"// withStyles & makeStyles\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport HomeWork from '@material-ui/icons/HomeWork';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport NewspaperIcon from '@mui/icons-material/Newspaper';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\r\nimport BiotechIcon from '@mui/icons-material/Biotech';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport SummarizeIcon from '@mui/icons-material/Summarize';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport ViewKanbanIcon from '@mui/icons-material/ViewKanban';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\n  \r\nexport default function SideMenu() {\r\n\r\n  const [value, setValue] = useState(localStorage.getItem(\"type\"));\r\n  console.log(localStorage);\r\n\r\n  useEffect(() => {\r\n    console.log(value);\r\n  }, [value])  \r\n\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  function moveRoute(route) {\r\n    history.push(route);\r\n  }\r\n\r\n  function test(){\r\n    const type = localStorage.getItem(\"type\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          {value === 'admin' &&\r\n            <div>\r\n              <List>\r\n            <ListItem button key={'programa'} onClick={() => moveRoute('/program')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <BeenhereIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Laboratorios'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          {/* <List>\r\n            <ListItem button key={'evidence'} onClick={() => moveRoute('/evidence')}>\r\n              <ListItemIcon><VisibilityIcon /></ListItemIcon>\r\n              <ListItemText primary={'Ver Citas'}/>\r\n            </ListItem>\r\n          </List> */}\r\n          <Divider /> \r\n              <List>\r\n            <ListItem button key={'register'} onClick={() => moveRoute('/register')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <PersonAddIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Registrar Usuario'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key={'assignRole'} onClick={() => moveRoute('/assignRole')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <AssignmentIndIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Asignar gestores de laboratorio'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key={'usuarios'} onClick={() => moveRoute('/users')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <PersonIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Usuarios'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n            </div>\r\n          }\r\n          {value === 'user' &&\r\n          <div>\r\n            <List>\r\n            <ListItem button key={'blog'} onClick={() => moveRoute('/blog')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <NoteAddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={'Agendar servicio'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          {/* <List>\r\n            <ListItem button key={'notice'} onClick={() => moveRoute('/notice')}>\r\n              <ListItemIcon><NewspaperIcon /></ListItemIcon>\r\n              <ListItemText primary={'Gestionar mis citas'}/>\r\n            </ListItem>\r\n          </List> */}\r\n          <Divider />\r\n          </div>}\r\n          {value === 'gestor' &&\r\n          <div>\r\n          <List>\r\n            <ListItem button key={'proyecto'} onClick={() => moveRoute('/project/')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <EcoIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Servicios'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key={'report'} onClick={() => moveRoute('/availability/')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <SummarizeIcon/>}</ListItemIcon>\r\n              <ListItemText primary={'Gestionar espacios'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          </div>}\r\n\r\n          </div>\r\n        \r\n      </Drawer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/Header.js",["1272","1273","1274","1275","1276","1277"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Profile.js",["1278","1279","1280"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Home.js",["1281"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Register.js",["1282","1283","1284"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/AboutUs.js",["1285"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Factors/UpdateFactor.js",["1286","1287","1288","1289"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/AssignRole.js",["1290","1291","1292","1293","1294","1295","1296","1297"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Factors/CreateFactor.js",["1298","1299","1300","1301","1302"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/ViewUsers.js",["1303","1304","1305","1306","1307","1308","1309","1310"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Login.js",["1311","1312","1313","1314","1315","1316","1317"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/routing/RequireAuth.js",["1318"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ShowProgram.js",["1319","1320","1321","1322","1323","1324","1325","1326","1327"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ProjectForm.js",["1328","1329","1330","1331","1332","1333","1334","1335","1336"],"import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport CircularStatic from '../../components/CircularStatic'\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport ImageComponent from '../../components/ImageComponent';\nimport MenuItem from '@mui/material/MenuItem';\nimport CalendarTemplate from './Calendar';\n\n\nconst initialBValues = {\n    name: '',\n    description: '',\n    objetives: '',\n    isTimeSeries: false,\n    image: '',\n    programs: [],\n    factors: [],\n    laboratorio: '',\n    availability: ['No hay espacios disponibles']\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function ProjectForm() {\n\n    let [availability, setAvailability] = useState([])\n\n\n    const [labName, setLabName] = useState('');\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const message = id ? \"Se ha actualizado el servicio!\" : \"Se ha guardado el servicio!\"\n    const title = id ? \"Actualizar servicio\" : \"Añadir nuevo servicio\";\n    const type = id ? \"actualizar\" : \"agregar\";\n\n\n    const Calendar = CalendarTemplate({\n        availability,\n        setAvailability: update => {\n            setAvailability(update)\n            saveAvailability(update)\n            console.log(\"CRAYOLA\")\n            console.log(availability)\n        },\n\n\n\n    });\n\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('objetives' in fieldValues)\n            temp.objetives = fieldValues.objetives ? \"\" : \"Este campo es obligatorio.\"\n\n\n\n        setErrors({\n            ...temp\n        })\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getProject();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n    const getProject = async () => {\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/project/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setValues(response.data.project);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    useEffect(async () => {\n        let unmounted = false;\n        await getLabName();\n        return () => { unmounted = true };\n    }, []);\n\n    const getLabName = async () => {\n        try {\n            const uid = localStorage.getItem(\"uid\");\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/users/${uid}`, config);\n            console.log(\"WENAAAS\");\n            console.log(response);\n            values.laboratorio = response.data.user.roles[0].projectName;\n            setLabName(response.data.user.roles[0].projectName);\n        }\n        catch (error) {\n            console.log(\"Wenuuuski\");\n        }\n\n    }\n\n    const {\n        values,\n        avaValues,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialBValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            resetForm({\n            })\n        }\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n\n    }\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (validate()) {\n            setLoading(true);\n            try {\n                if (id) {\n                    await axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/project/${id}`, values, config)\n                        .then(confirmPost)\n                console.log(\"if\")\n                } else {\n                    await axios\n                        .post(process.env.REACT_APP_API_URL + \"/api/private/project/\", values, config)\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/availability`, values, config)\n                        .then(confirmPost)\n                console.log(\"else\")\n                }\n                console.log(\"en handle submit\")\n                createAvailability();\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n\n        }\n\n\n    }\n\n    \n\n    function saveAvailability(update){\n        console.log(\"LOGGING\")\n        console.log(update)\n        availability = update\n        \n    }\n\n    const createAvailability = async e => {\n        console.log(\"OLIS\")\n        console.log(availability)\n        if (validate()) {\n            setLoading(true);\n        \n            availability.forEach(element => {\n            const avaValue = {\n                service: id,\n                start: element.start,\n                end: element.end,\n                timeSlot: 30\n    \n            }\n            try {\n                if (id) {\n                     axios\n                        .post(`${process.env.REACT_APP_API_URL}/api/private/availability/${id}`, avaValue, config)\n                        .then(confirmPost)\n                } else {\n                     axios\n                        .patch(`${process.env.REACT_APP_API_URL}/api/private/availability`, avaValue, config)\n                        .then(confirmPost)\n                }\n            }\n\n            catch (error) {\n                setLoading(false);\n                setTimeout(() => {\n                    setTimeout(() => {\n                        setError(\"\");\n                    }, 2000);\n                }, 5000);\n                return setError(\"Authentication failed!\");\n            }\n        });\n    }\n    }\n    return (\n\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={`Formulario para ${type} un servicio`}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n                <ImageComponent initialValues={values} onChange={handleInputChange} />\n                <Form onSubmit={handleSubmit}>\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Controls.Input\n                                name=\"name\"\n                                label=\"Nombre\"\n                                value={values.name}\n                                onChange={handleInputChange}\n                                error={errors.name}\n                            />\n                            <Controls.TextArea\n                                label=\"Descripción\"\n                                name=\"description\"\n                                value={values.description}\n                                onChange={handleInputChange}\n                                error={errors.description}\n                            />\n                            <Controls.Input\n                                label=\"Precio\"\n                                name=\"objetives\"\n                                value={values.objetives}\n                                onChange={handleInputChange}\n                                error={errors.objetives}\n                            />\n                            <Controls.Input\n                                disabled=\"true\"\n                                label=\"Laboratorio\"\n                                name=\"laboratorio\"\n                                value={labName}\n                                onChange={handleInputChange}\n                            />\n\n\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Checkbox\n                                name=\"isTimeSeries\"\n                                label=\"Activar servicio\"\n                                value={values.isTimeSeries}\n                                onChange={handleInputChange}\n                                title=\"Se presentará como servicio activo al marcar la casilla, de lo contrario se presentará como servicio inactivo.\"\n                            />\n\n                        </Grid>\n\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            style={{ marginTop: '20px' }}\n                        >\n                            <div>\n                                <Controls.Button\n                                    type=\"submit\"\n                                    text=\"Guardar\"\n                                />\n\n                                <Controls.Button\n                                    text=\"Limpiar\"\n                                    color=\"inherit\"\n                                    onClick={resetForm} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ViewProjects.js",["1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ProgramServices.js",["1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoIcon from '@material-ui/icons/Info';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport axios from \"axios\";\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\nimport defaultImgService from '../../assets/img/defaultImgService.jpeg'\nimport { CSVDownloader } from 'react-papaparse'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Tooltip from '@mui/material/Tooltip';\nimport { getPrograms } from '../../services/programService';\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        width: 800,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    media: {\n        height: 300,\n    },\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#8ade8f',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#4287f5',\n        color: '#FFFFFF'\n    },\n    pageContent: {\n        width: '90%',\n        margin: '50px 0 0 0',\n        padding: theme.spacing(3),\n    },\n    center: {\n        display: 'flex',\n        textAlign: 'center'\n    },\n}));\n\nconst initialValue = {\n    name: '',\n    description: '',\n    objetivesProgram: '',\n    definitionProgram: '',\n    image: '',\n    projects: [],\n}\n\nconst initialProyectValues = {\n    name: '',\n    description: '',\n    objetives: '',\n    justification: '',\n    country: '',\n    department: '',\n    district: '',\n    definition: '',\n    isTimeSeries: true,\n    image: '',\n    programs: [],\n    factors: []\n}\n\n\n\nexport default function ProgramServices() {\n    const [program, setProgram] = useState(initialValue);\n    const { name, description, objetivesProgram, definitionProgram, image } = program;\n    const [toExport, setExport] = useState([]);\n\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n\n    const [projects, setProjects] = useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n\n    const classes = useStyles();\n    const { id } = useParams();\n    useEffect(async () => {\n        let unmounted = false;\n        await getProgram();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    \n\n    const getProgram = async () => {\n        try {\n            setLoading(true);\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/program/${id}`, config);\n            setProgram(response.data.program);\n            let data = response.data.program;\n            setExport([\n                {\n                    id: data.id,\n                    name: data.name,\n                    description: data.description,\n                    objetivesProgram: data.objetivesProgram,\n                    definitionProgram: data.definitionProgram,\n                }])\n\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    function wrapValues(projects) {\n        setProjects(projects);\n        setLoading(false);\n    }\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Descripción', key: 'description' },\n        { label: 'Precio', key: 'objetives' },\n        { label: 'Justificación', key: 'justification' },\n        { label: 'País', key: 'country' },\n        { label: 'Departamento', key: 'department' },\n        { label: 'Distrito', key: 'district' },\n        { label: 'Definición', key: 'definition' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Percentage', key: 'percentage' }\n    ]\n\n    const csvReport = {\n        filename: 'Projects.csv',\n        headers: headers,\n        data: projects\n    }\n\n    async function getAllProjects() {\n        try {\n            const projects = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/project\",\n                config\n            );\n\n            const currentProgram = await getPrograms(id);\n\n            let valuesToWrap = [];\n\n            projects.data.projects.forEach(element => {\n                    if (currentProgram.data.program.name === element.laboratorio)\n                        valuesToWrap.push(element);\n                \n            });\n\n            wrapValues(valuesToWrap);\n\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authenticatin failed!\");\n        }\n\n\n\n\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        getAllProjects();\n        \n        \n        \n        return () => { unmounted = true; };\n        \n\n    }, []);\n\n    return (\n\n        <div className={classes.root}>\n            <div className={classes.programholder} hidden={!loading}>\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n                <br />\n            </div>\n\n            <PageHeader\n                title=\"Información detallada sobre un laboratorio\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ width: \"90%\" }}\n            >\n                <Card className={classes.cardContainer}>\n\n                    <CardMedia\n                        className={classes.media}\n                        image={image ? image : defaultImg}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {name ? name : ''}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {description ? description : ''}\n                        </Typography>\n                    </CardContent>\n\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Teléfono:</span>\n                            {objetivesProgram ? objetivesProgram : ''}\n                        </Typography>\n                    </CardActions>\n                    <CardActions>\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                            <span>Correo Electrónico:</span>\n                            {definitionProgram ? definitionProgram : ''}\n                        </Typography>\n                        \n                    </CardActions>\n                </Card>\n            </Grid>\n            <br />\n            <br />\n            <br />\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"left\"\n                alignItems=\"left\"\n                style={{ width: \"100%\" }}\n                xs={12}\n            >\n                <Card className={classes.cardContainer} >\n\n                    <CardContent >\n                        <h3>Servicios Disponibles en este Laboratorio:</h3>\n                   \n\n                    </CardContent>\n\n\n                </Card>\n            </Grid>\n\n            <br />\n            <br />\n            <br />\n            \n            <Grid container spacing={2}>\n                {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((project) => (\n                    <><Grid xs={4} className={classes.row} key={project.id}>\n                        <Card sx={{ maxWidth: 345 }}>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt=\"green iguana\"\n                                    height=\"140\"\n                                    image={project.image ? project.image : defaultImgService} />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                        {project.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                        Descripción: {project.description}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                        Precio: {project.objectives ? project.objectives : 0}\n                                    </Typography>\n                                </CardContent>\n\n                                <CardActions>\n                                    <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/project/book/${project._id}`}><ModeEditIcon />Agendar</Button>\n                                </CardActions>\n                            </Card>\n                    </Grid><Grid  item xs={2} >\n                            <h1></h1>\n                        </Grid></>\n                ))}\n\n            </Grid>\n\n\n        </div>\n    );\n}","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ShowProject.js",["1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/AvailabilityEdit.js",["1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432"],"import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport { Paper, makeStyles, Box } from '@material-ui/core';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PageHeader from \"../../components/PageHeader\";\nimport CircularStatic from '../../components/CircularStatic'\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport AlertMessage from '../../components/AlertMessage';\nimport ImageComponent from '../../components/ImageComponent';\nimport MenuItem from '@mui/material/MenuItem';\nimport CalendarTemplate from './Calendar';\n\n\nconst initialBValues = {\n    name: '',\n    description: '',\n    objetives: '',\n    isTimeSeries: false,\n    image: '',\n    programs: [],\n    factors: [],\n    laboratorio: '',\n    availability: ['No hay espacios disponibles']\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: '50px 0 0 0',\n        width: '90%',\n        padding: theme.spacing(3)\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    sizeAvatar: {\n        height: \"150px\",\n        width: \"150px\",\n        marginBottom: \"25px\",\n    },\n    imageButton: {\n        marginBottom: \"25px\"\n    },\n}))\n\nexport default function AvailabilityEdit() {\n\n    let [availability, setAvailability] = useState([])\n    \n\n    const [labName, setLabName] = useState('');\n    const [project, setProject] = useState('');\n    const { id } = useParams();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const message = id ? \"Se ha actualizado el servicio!\" : \"Se ha guardado el servicio!\"\n    const title = id ? \"Actualizar servicio\" : \"Añadir nuevo servicio\";\n    const type = id ? \"actualizar\" : \"agregar\";\n\n\n    const Calendar = CalendarTemplate({\n        availability,\n        setAvailability: update => {\n            setAvailability(update)\n            saveAvailability(update)\n            console.log(\"CRAYOLA\")\n            console.log(availability)\n            updateProjectAvailability(availability)\n        },\n\n\n\n    });\n\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('name' in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\n        if ('description' in fieldValues)\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\n        if ('objetives' in fieldValues)\n            temp.objetives = fieldValues.objetives ? \"\" : \"Este campo es obligatorio.\"\n\n\n\n        setErrors({\n            ...temp\n        })\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    useEffect(() => {\n        let unmounted = false;\n        if (id)\n            getProject();\n        return () => { unmounted = true; };\n    }, []);\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }, onUploadProgress: (data) => {\n            //Set the progress value to show the progress bar\n            setProgress(Math.round((100 * data.loaded) / data.total));\n        },\n    };\n\n\n    const getProject = async () => {\n        console.log(\"EN GET PROJECT\")\n        setLoading(true);\n        try {\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/project/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n                },\n                onDownloadProgress: (data) => {\n                    //Set the progress value to show the progress bar                    \n                    setProgress(Math.round((100 * data.loaded) / data.total));\n                },\n            });\n            setProject(response.data.project);\n            console.log(\"PROYECTO\")\n            console.log(project)\n            setValues(response.data.project);\n            setLoading(false);\n        } catch (error) {\n            setTimeout(() => {\n                setOpen(false);\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n\n            }, 5000);\n            setOpen(true);\n            setLoading(false);\n            return setError(\"Authentication failed!\");\n        }\n    }\n\n    useEffect(async () => {\n        let unmounted = false;\n        await getLabName();\n        return () => { unmounted = true };\n    }, []);\n\n    const getLabName = async () => {\n        try {\n            const uid = localStorage.getItem(\"uid\");\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/users/${uid}`, config);\n            console.log(\"WENAAAS\");\n            console.log(response);\n            values.laboratorio = response.data.user.roles[0].projectName;\n            setLabName(response.data.user.roles[0].projectName);\n        }\n        catch (error) {\n            console.log(\"Wenuuuski\");\n        }\n\n    }\n\n    const {\n        values,\n        avaValues,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialBValues, true, validate);\n\n    const confirmPost = () => {\n        setOpen(true);\n        setLoading(false);\n        if (!id) {\n            resetForm({\n            })\n        }\n        setTimeout(function () {\n            setOpen(false);\n        }, 6000);\n\n    }\n\n\n    function getProjectForAvailability (availabilityParam) {\n        \n        console.log(\"HOLIWISKKK\")\n        console.log(project)\n    }\n\n\n    function updateProjectAvailability(availabilityParam) {\n        getProjectForAvailability(availabilityParam);\n        let ava;\n        if(project.availability[0] !== 'No hay espacios disponibles')\n            ava = project.availability;\n        else\n            ava = [];\n        console.log(ava[0])\n        availabilityParam.forEach(element => {\n            console.log(\"ELEMENTO\");\n            console.log(element)\n            ava.push(element);\n        })\n        //ava.push(availabilityParam);\n        console.log(\"AVA\")\n        console.log(ava);\n        \n        const value= {\n            availability: ava\n        }\n        \n        axios.patch(`${process.env.REACT_APP_API_URL}/api/private/project/availability/${id}`, value, config);\n        \n        console.log(\"AFTER\")\n        \n    }\n\n    function saveAvailability(update) {\n        console.log(\"LOGGING\")\n        console.log(update)\n        availability = update\n        createAvailability()\n\n    }\n\n    const createAvailability = async e => {\n        console.log(\"OLIS\")\n        console.log(availability)\n        if (validate()) {\n            setLoading(true);\n\n            availability.forEach(element => {\n                const avaValue = {\n                    service: id,\n                    start: element.start,\n                    end: element.end,\n                    timeSlot: 30\n\n                }\n                try {\n                    if (id) {\n                        axios\n                            .post(`${process.env.REACT_APP_API_URL}/api/private/availability/${id}`, avaValue, config)\n                            .then(confirmPost)\n                    } else {\n                        axios\n                            .patch(`${process.env.REACT_APP_API_URL}/api/private/availability`, avaValue, config)\n                            .then(confirmPost)\n                    }\n                    console.log(\"CREADO\")\n\n\n                } catch (error) {\n                    setLoading(false);\n                    setTimeout(() => {\n                        setTimeout(() => {\n                            setError(\"\");\n                        }, 2000);\n                    }, 5000);\n                    return setError(\"Authentication failed!\");\n                }\n            });\n        }\n    }\n    return (\n\n        <div>\n            <PageHeader\n                title={title}\n                subTitle={`Formulario para ${type} un servicio`}\n                icon={<EcoIcon fontSize=\"large\" color='primary'\n                />}\n            />\n            <CircularStatic progress={progress} hidden={!loading} />\n            <Paper className={classes.pageContent}>\n                <ImageComponent initialValues={values} onChange={handleInputChange} />\n\n            </Paper>\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{ marginTop: '20px' }}\n            >\n                <div>\n                    <Calendar />\n                </div>\n            </Grid>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Organization/ShowOrganization.js",["1433","1434","1435","1436","1437","1438","1439","1440","1441"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ViewProgram.js",["1442","1443","1444"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/AvailabilityView.js",["1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { deleteProject } from '../../services/projectService';\nimport Controls from \"../../components/controls/Controls\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add'\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PageHeader from \"../../components/PageHeader\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport { CSVLink } from \"react-csv\"\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Download from '@mui/icons-material/Download';\nimport { jsonToCSV, CSVDownloader } from 'react-papaparse';\nimport { getUsers, editRoles } from '../../services/userService';\nimport { version } from 'react-dom/cjs/react-dom.development';\nimport { render } from \"react-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 0'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#17c6f6',\n            color: '#FFFFFF'\n        }\n    },\n    head: {\n        fontSize: 20,\n        background: '#17c6f6',\n        color: '#FFFFFF'\n\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    },\n    cell: {\n        paddingTop: 0\n    },\n    buttonheader: {\n        display: 'flex'\n\n    },\n    programholder: {\n        height: 40,\n        textAlign: 'center'\n    },\n    programholderLoading: {\n        height: 40,\n        textAlign: 'center',\n        width: '90%'\n    },\n    button: {\n        background: '#17c6f6',\n        color: '#FFFFFF',\n        justifyContent: 'center'\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        padding: 8\n    },\n    csvContainer: {\n        fontSize: 20,\n        background: '#108EB0',\n\n    },\n    iconContainer: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function AvailabilityView() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const [projects, setProjects] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = React.useState(true);\n    const [projectId, setProjectId] = React.useState('');\n    const [openDialogAbandon, setOpenDialogAbandon] = useState(false);\n    const [currentUserRoles, setCurrentUserRoles] = useState({});\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const classes = useStyles();\n\n    function wrapValues(projects) {\n        setProjects(projects);\n        setLoading(false);\n    }\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const handleAccept = () => {\n        deleteProjectData()\n        setOpenDialog(false);\n    }\n\n    const handleCloseAbandon = () => {\n        setOpenDialogAbandon(false);\n    };\n\n    const handleAcceptAbandon = () => {\n        abandonProject();\n        setOpenDialogAbandon(false);\n    };\n\n    const headers = [\n        { label: 'id', key: 'id' },\n        { label: 'Descripción', key: 'description' },\n        { label: 'Precio', key: 'objetives' },\n        { label: 'Justificación', key: 'justification' },\n        { label: 'País', key: 'country' },\n        { label: 'Departamento', key: 'department' },\n        { label: 'Distrito', key: 'district' },\n        { label: 'Definición', key: 'definition' },\n        { label: 'Nombre', key: 'name' },\n        { label: 'Percentage', key: 'percentage' }\n    ]\n\n    const csvReport = {\n        filename: 'Projects.csv',\n        headers: headers,\n        data: projects\n    }\n\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        },\n    };\n\n    async function getAllProjects() {\n        try {\n\n            const uid = localStorage.getItem(\"uid\");\n            let response = await axios.get(`${process.env.REACT_APP_API_URL}/api/private/users/${uid}`, config);\n            console.log(\"WENAAAS\");\n            console.log(response);\n            const currentProgram = response.data.user.roles[0].projectName;\n\n            const projects = await axios.get(\n                process.env.REACT_APP_API_URL + \"/api/private/project\",\n                config\n            );\n\n            let valuesToWrap = [];\n\n            projects.data.projects.forEach(element => {\n                if (currentProgram === element.laboratorio)\n                    valuesToWrap.push(element);\n\n            });\n\n            wrapValues(valuesToWrap);\n\n        } catch (error) {\n            setTimeout(() => {\n                setTimeout(() => {\n                    setError(\"\");\n                }, 2000);\n            }, 5000);\n            return setError(\"Authenticatin failed!\");\n        }\n\n\n\n    }\n    useEffect(() => {\n        let unmounted = false;\n        getAllProjects();\n\n\n\n        return () => { unmounted = true; };\n\n\n    }, []);\n\n    const deleteProjectData = async () => {\n        try {\n            let response = await deleteProject(projectId);\n            getAllProjects();\n        } catch (error) {\n            setOpen(true);\n            setError(error.message);\n            setTimeout(function () {\n                setOpen(false);\n                setError(\"\");\n            }, 3000);\n        }\n\n\n    }\n\n    const abandonProject = async () => {\n        let newRoles = []\n        currentUserRoles.forEach(element => {\n            if (element.projectId !== projectId) {\n                newRoles.push(element);\n            }\n        });\n\n        editRoles(localStorage.getItem(\"uid\"), newRoles);\n        getAllProjects();\n    }\n\n    function objToString(obj) {\n        let arr=obj\n        console.log(\"OBJETO\")\n        \n        console.log(obj !== ['No hay espacios disponibles'])\n        if (obj!== null && obj !== undefined && obj[0] !== 'No hay espacios disponibles' ){\n            let str = '';\n            arr = [];\n            obj.forEach(function funct(item) {\n                str += \"Día: \"\n                str += item['start'].slice(8, 10)\n                str +='/'\n                str += item['start'].slice(5, 7);\n                str += \" , hora: \"\n                str += item['start'].slice(11, -8);\n                str += '-';\n                str += item['end'].slice(11, -8);\n                arr.push(str);\n                str = '';\n            })\n        }\n        return arr;\n\n    }\n\n    function displayList(arr) {\n        console.log(\"disp items\")\n        console.log(arr)\n        const updatedList = arr.map((listItems) => {\n            console.log(listItems);\n            return <li>{listItems}</li>;\n        });\n\n        return (\n            <ul>{updatedList}</ul>\n        );\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <Dialog\n                open={openDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este servicio?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"secondary\">\n                        Eliminar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openDialogAbandon}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseAbandon}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea abandonar este servicio?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Esta decisión no es reversible.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseAbandon} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAcceptAbandon} color=\"secondary\">\n                        Abandonar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <PageHeader\n                title=\"Información sobre los horarios\"\n                subTitle=\"Acá se muestran todos los horarios de los servicios en el sistema\"\n                icon={<InfoIcon fontSize=\"large\"\n                />}\n            />\n\n\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={classes.table}\n            >\n                <Paper className={classes.paper} elevation={3}>\n                    <Box sx={{ width: 'auto' }} padding>\n                        <Typography variant=\"h6\" align=\"center\">Horarios para el servicio</Typography>\n                    </Box>\n\n                </Paper>\n\n            </Grid>\n\n            <div className={classes.programholderLoading} hidden={!loading}>\n                <br />\n                <Fade\n                    in={loading}\n                    style={{\n                        transitionDelay: '0m',\n                    }}\n                    unmountOnExit\n                >\n                    <CircularProgress />\n                </Fade>\n\n            </div>\n\n            <Paper className={classes.table}>\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\n                <TableContainer >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        className={classes.csvContainer}\n                    >\n                        <Tooltip title=\"Exportar servicios\">\n                            <div className={classes.iconContainer}>\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\n                                    <DownloadIcon fontSize={'large'} />\n                                </CSVLink>\n                            </div>\n                        </Tooltip>\n                    </Grid>\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\n\n                        <TableHead>\n                            <TableRow className={classes.thead}>\n                                <TableCell className={classes.cell}>Nombre</TableCell>\n                                <TableCell className={classes.cell}>Horarios para este servicio</TableCell>\n\n                                <TableCell className={classes.programholder} style={{ paddingTop: '0px' }}>Acciones</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((project) => (\n                                <TableRow hover className={classes.row} key={project.id}>\n                                    <TableCell>{project.name}</TableCell>\n\n                                    <TableCell>\n                                        <ul>\n                                            {displayList(objToString(project.availability))}\n                                        </ul>\n                                    </TableCell>\n\n\n                                    <TableCell>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Tooltip title=\"Agregar Espacios\">\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/availability/${project._id}`}><ModeEditIcon />Agregar Espacios</Button>\n                                            </Tooltip>\n\n\n                                        </Grid>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={projects.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    )\n}\n","/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Organization/OrganizationForm.js",["1462","1463","1464"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Program/ProgramForm.js",["1465","1466","1467"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Evidence/EvidenceForm.js",["1468","1469","1470"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Evidence/ViewEvidence.js",["1471","1472","1473"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Resource/ResourceForm.js",["1474","1475","1476"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Resource/ShowResource.js",["1477","1478","1479","1480","1481","1482","1483","1484","1485","1486"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Resource/ViewResource.js",["1487","1488","1489"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Task/ShowTask.js",["1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Task/TaskForm.js",["1502","1503","1504","1505","1506","1507"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ShowReport.js",["1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ViewReports.js",["1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Task/TaskView.js",["1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/ProjectBook.js",["1545","1546","1547","1548","1549","1550","1551"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ReportForm.js",["1552","1553","1554","1555","1556","1557"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Evidence/ShowEvidence.js",["1558","1559","1560","1561","1562","1563","1564","1565","1566","1567"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Blog/ShowBlog.js",["1568","1569","1570","1571","1572","1573","1574","1575","1576"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Data/UploadCSV.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Data/ViewData.js",["1577","1578","1579","1580","1581","1582"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Data/CreateData.js",["1583","1584","1585"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Blog/BlogForm.js",["1586","1587","1588"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/Predictor.js",["1589"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowGraphics.js",["1590","1591","1592"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Organization/ViewOrganization.js",["1593","1594","1595"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Blog/ViewBlog.js",["1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Notice/NoticeForm.js",["1618","1619","1620"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Notice/ShowNotice.js",["1621","1622","1623","1624","1625","1626","1627","1628","1629"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Report/ViewReportsDeadlines.js",["1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Notice/ViewNotice.js",["1643","1644","1645"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/PageHeader.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/AlertMessage.js",["1646","1647"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Controls.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/userService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/noticeService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/reportService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/TextArea.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Select.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/DatePicker.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/InputButton.js",["1648","1649"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/RadioGroup.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Checkbox.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Input.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/controls/Button.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/CircularStatic.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/ImageComponent.js",["1650"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/useForm.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/blogService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/organizationService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowBoxplot.js",["1651","1652","1653","1654"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Graphics/ShowHistogram.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/predictionService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/DateRangeSelector.js",["1655","1656","1657","1658","1659","1660","1661"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/ProgramSelector.js",["1662","1663","1664","1665"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Predictor/ProjectSelector.js",["1666","1667","1668","1669","1670","1671","1672","1673","1674","1675"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/FileManager.js",["1676","1677","1678","1679"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/getFileService.js",["1680","1681"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/dataService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Project/Calendar.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/taskService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/resourceService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/projectService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/evidenceService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/programService.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/components/ScrollToTop.js",[],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/Factors/ViewFactors.js",["1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/AssignPermission.js",["1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/pages/User/Test.js",["1727"],"/Users/karentovar/Documents/WebCitas/WebCitas/frontend/src/services/factorService.js",[],{"ruleId":"1728","replacedBy":"1729"},{"ruleId":"1730","replacedBy":"1731"},{"ruleId":"1732","severity":1,"message":"1733","line":14,"column":8,"nodeType":"1734","messageId":"1735","endLine":14,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1736","line":17,"column":8,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1737","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1738","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1739","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1740","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1741","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1742","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1743","line":64,"column":17,"nodeType":"1734","messageId":"1735","endLine":64,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1744","line":79,"column":12,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1745","line":80,"column":11,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1746","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1747","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1748","line":10,"column":8,"nodeType":"1734","messageId":"1735","endLine":10,"endColumn":21},{"ruleId":"1749","severity":1,"message":"1750","line":52,"column":15,"nodeType":"1751","endLine":56,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":53,"column":13,"nodeType":"1734","messageId":"1735","endLine":53,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1753","line":56,"column":8,"nodeType":"1754","endLine":56,"endColumn":10,"suggestions":"1755"},{"ruleId":"1732","severity":1,"message":"1756","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1757","line":36,"column":10,"nodeType":"1734","messageId":"1735","endLine":36,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1758","line":36,"column":17,"nodeType":"1734","messageId":"1735","endLine":36,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1759","line":37,"column":10,"nodeType":"1734","messageId":"1735","endLine":37,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1760","line":37,"column":20,"nodeType":"1734","messageId":"1735","endLine":37,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1761","line":101,"column":5,"nodeType":"1734","messageId":"1735","endLine":101,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1762","line":105,"column":5,"nodeType":"1734","messageId":"1735","endLine":105,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1763","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1756","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1764","line":3,"column":10,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1765","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":16},{"ruleId":"1766","severity":1,"message":"1767","line":18,"column":21,"nodeType":"1768","messageId":"1769","endLine":18,"endColumn":24},{"ruleId":"1732","severity":1,"message":"1770","line":19,"column":11,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1752","line":79,"column":13,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1771","line":101,"column":8,"nodeType":"1754","endLine":101,"endColumn":10,"suggestions":"1772"},{"ruleId":"1732","severity":1,"message":"1773","line":106,"column":11,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1774","line":135,"column":21,"nodeType":"1734","messageId":"1735","endLine":135,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1775","line":9,"column":29,"nodeType":"1734","messageId":"1735","endLine":9,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1776","line":18,"column":7,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1752","line":52,"column":9,"nodeType":"1734","messageId":"1735","endLine":52,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1777","line":55,"column":6,"nodeType":"1754","endLine":55,"endColumn":8,"suggestions":"1778"},{"ruleId":"1732","severity":1,"message":"1779","line":3,"column":10,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1780","line":1,"column":27,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":36},{"ruleId":"1732","severity":1,"message":"1775","line":9,"column":29,"nodeType":"1734","messageId":"1735","endLine":9,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1781","line":14,"column":8,"nodeType":"1734","messageId":"1735","endLine":14,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1782","line":51,"column":9,"nodeType":"1734","messageId":"1735","endLine":51,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1761","line":74,"column":19,"nodeType":"1734","messageId":"1735","endLine":74,"endColumn":28},{"ruleId":"1749","severity":1,"message":"1750","line":110,"column":15,"nodeType":"1751","endLine":114,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":111,"column":13,"nodeType":"1734","messageId":"1735","endLine":111,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1783","line":114,"column":8,"nodeType":"1754","endLine":114,"endColumn":10,"suggestions":"1784"},{"ruleId":"1732","severity":1,"message":"1785","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1786","line":25,"column":8,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1787","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1788","line":28,"column":10,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1789","line":107,"column":11,"nodeType":"1734","messageId":"1735","endLine":107,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1752","line":152,"column":13,"nodeType":"1734","messageId":"1735","endLine":152,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1790","line":155,"column":8,"nodeType":"1754","endLine":155,"endColumn":10,"suggestions":"1791"},{"ruleId":"1732","severity":1,"message":"1792","line":159,"column":17,"nodeType":"1734","messageId":"1735","endLine":159,"endColumn":25},{"ruleId":"1766","severity":1,"message":"1767","line":35,"column":19,"nodeType":"1768","messageId":"1769","endLine":35,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1752","line":57,"column":9,"nodeType":"1734","messageId":"1735","endLine":57,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1774","line":120,"column":17,"nodeType":"1734","messageId":"1735","endLine":120,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":86,"column":12,"nodeType":"1734","messageId":"1735","endLine":86,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":91,"column":15,"nodeType":"1751","endLine":95,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":92,"column":13,"nodeType":"1734","messageId":"1735","endLine":92,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1799","line":95,"column":8,"nodeType":"1754","endLine":95,"endColumn":10,"suggestions":"1800"},{"ruleId":"1749","severity":1,"message":"1750","line":168,"column":15,"nodeType":"1751","endLine":172,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":169,"column":13,"nodeType":"1734","messageId":"1735","endLine":169,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1801","line":172,"column":8,"nodeType":"1754","endLine":172,"endColumn":10,"suggestions":"1802"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":66,"column":13,"nodeType":"1734","messageId":"1735","endLine":66,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1803","line":70,"column":8,"nodeType":"1754","endLine":70,"endColumn":10,"suggestions":"1804"},{"ruleId":"1732","severity":1,"message":"1805","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":80,"column":12,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":88,"column":15,"nodeType":"1751","endLine":92,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":89,"column":13,"nodeType":"1734","messageId":"1735","endLine":89,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1806","line":92,"column":8,"nodeType":"1754","endLine":92,"endColumn":10,"suggestions":"1807"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":73,"column":13,"nodeType":"1734","messageId":"1735","endLine":73,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1808","line":77,"column":8,"nodeType":"1754","endLine":77,"endColumn":10,"suggestions":"1809"},{"ruleId":"1732","severity":1,"message":"1805","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":80,"column":12,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":88,"column":15,"nodeType":"1751","endLine":92,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":89,"column":13,"nodeType":"1734","messageId":"1735","endLine":89,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1810","line":92,"column":8,"nodeType":"1754","endLine":92,"endColumn":10,"suggestions":"1811"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":66,"column":13,"nodeType":"1734","messageId":"1735","endLine":66,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1812","line":70,"column":8,"nodeType":"1754","endLine":70,"endColumn":10,"suggestions":"1813"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":73,"column":13,"nodeType":"1734","messageId":"1735","endLine":73,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1814","line":77,"column":8,"nodeType":"1754","endLine":77,"endColumn":10,"suggestions":"1815"},{"ruleId":"1749","severity":1,"message":"1750","line":167,"column":15,"nodeType":"1751","endLine":171,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":168,"column":13,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1816","line":171,"column":8,"nodeType":"1754","endLine":171,"endColumn":10,"suggestions":"1817"},{"ruleId":"1732","severity":1,"message":"1818","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1819","line":16,"column":8,"nodeType":"1734","messageId":"1735","endLine":16,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1820","line":81,"column":76,"nodeType":"1734","messageId":"1735","endLine":81,"endColumn":84},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1821","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"1822"},{"ruleId":"1749","severity":1,"message":"1750","line":167,"column":15,"nodeType":"1751","endLine":171,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":168,"column":13,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1823","line":171,"column":8,"nodeType":"1754","endLine":171,"endColumn":10,"suggestions":"1824"},{"ruleId":"1732","severity":1,"message":"1765","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1825","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1785","line":8,"column":8,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1775","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1830","line":33,"column":10,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1752","line":242,"column":13,"nodeType":"1734","messageId":"1735","endLine":242,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1831","line":250,"column":8,"nodeType":"1754","endLine":250,"endColumn":10,"suggestions":"1832"},{"ruleId":"1732","severity":1,"message":"1792","line":254,"column":17,"nodeType":"1734","messageId":"1735","endLine":254,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1833","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1775","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1794","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1752","line":227,"column":13,"nodeType":"1734","messageId":"1735","endLine":227,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1831","line":232,"column":8,"nodeType":"1754","endLine":232,"endColumn":10,"suggestions":"1834"},{"ruleId":"1732","severity":1,"message":"1792","line":236,"column":17,"nodeType":"1734","messageId":"1735","endLine":236,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1835","line":2,"column":10,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1836","line":2,"column":17,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1837","line":2,"column":28,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":37},{"ruleId":"1732","severity":1,"message":"1838","line":2,"column":39,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1839","line":2,"column":46,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":54},{"ruleId":"1732","severity":1,"message":"1840","line":2,"column":56,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1775","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1795","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1841","line":25,"column":8,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1842","line":26,"column":8,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1843","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1785","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1765","line":31,"column":8,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1844","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1794","line":33,"column":8,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1845","line":106,"column":11,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":27},{"ruleId":"1732","severity":1,"message":"1846","line":110,"column":11,"nodeType":"1734","messageId":"1735","endLine":110,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1847","line":119,"column":20,"nodeType":"1734","messageId":"1735","endLine":119,"endColumn":29},{"ruleId":"1732","severity":1,"message":"1848","line":143,"column":11,"nodeType":"1734","messageId":"1735","endLine":143,"endColumn":20},{"ruleId":"1749","severity":1,"message":"1750","line":172,"column":15,"nodeType":"1751","endLine":176,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":173,"column":13,"nodeType":"1734","messageId":"1735","endLine":173,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1849","line":176,"column":8,"nodeType":"1754","endLine":176,"endColumn":10,"suggestions":"1850"},{"ruleId":"1749","severity":1,"message":"1750","line":168,"column":15,"nodeType":"1751","endLine":172,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":169,"column":13,"nodeType":"1734","messageId":"1735","endLine":169,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1851","line":172,"column":8,"nodeType":"1754","endLine":172,"endColumn":10,"suggestions":"1852"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":67,"column":13,"nodeType":"1734","messageId":"1735","endLine":67,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1853","line":71,"column":8,"nodeType":"1754","endLine":71,"endColumn":10,"suggestions":"1854"},{"ruleId":"1732","severity":1,"message":"1764","line":11,"column":10,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1752","line":164,"column":13,"nodeType":"1734","messageId":"1735","endLine":164,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1855","line":167,"column":8,"nodeType":"1754","endLine":167,"endColumn":10,"suggestions":"1856"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1857","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1858","line":13,"column":10,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1859","line":16,"column":7,"nodeType":"1734","messageId":"1735","endLine":16,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1752","line":79,"column":13,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1860","line":83,"column":8,"nodeType":"1754","endLine":83,"endColumn":10,"suggestions":"1861"},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1862","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"1863"},{"ruleId":"1732","severity":1,"message":"1825","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1864","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1865","line":31,"column":9,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1830","line":33,"column":10,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1866","line":123,"column":30,"nodeType":"1734","messageId":"1735","endLine":123,"endColumn":49},{"ruleId":"1732","severity":1,"message":"1867","line":124,"column":12,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1868","line":124,"column":21,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1752","line":201,"column":13,"nodeType":"1734","messageId":"1735","endLine":201,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":209,"column":8,"nodeType":"1754","endLine":209,"endColumn":10,"suggestions":"1870"},{"ruleId":"1732","severity":1,"message":"1792","line":213,"column":17,"nodeType":"1734","messageId":"1735","endLine":213,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1857","line":12,"column":8,"nodeType":"1734","messageId":"1735","endLine":12,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1871","line":14,"column":10,"nodeType":"1734","messageId":"1735","endLine":14,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1859","line":17,"column":7,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1752","line":88,"column":13,"nodeType":"1734","messageId":"1735","endLine":88,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1872","line":92,"column":8,"nodeType":"1754","endLine":92,"endColumn":10,"suggestions":"1873"},{"ruleId":"1732","severity":1,"message":"1740","line":15,"column":8,"nodeType":"1734","messageId":"1735","endLine":15,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1796","line":140,"column":12,"nodeType":"1734","messageId":"1735","endLine":140,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1874","line":140,"column":22,"nodeType":"1734","messageId":"1735","endLine":140,"endColumn":31},{"ruleId":"1749","severity":1,"message":"1750","line":247,"column":15,"nodeType":"1751","endLine":255,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":248,"column":13,"nodeType":"1734","messageId":"1735","endLine":248,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1875","line":255,"column":8,"nodeType":"1754","endLine":255,"endColumn":10,"suggestions":"1876"},{"ruleId":"1732","severity":1,"message":"1798","line":13,"column":12,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1752","line":42,"column":13,"nodeType":"1734","messageId":"1735","endLine":42,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1877","line":45,"column":8,"nodeType":"1754","endLine":45,"endColumn":10,"suggestions":"1878"},{"ruleId":"1732","severity":1,"message":"1825","line":17,"column":8,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1740","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1879","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1880","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1764","line":21,"column":10,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1841","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1842","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1835","line":24,"column":10,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1836","line":24,"column":17,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1837","line":24,"column":28,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":37},{"ruleId":"1732","severity":1,"message":"1838","line":24,"column":39,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1839","line":24,"column":46,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":54},{"ruleId":"1732","severity":1,"message":"1840","line":24,"column":56,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1881","line":24,"column":67,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":73},{"ruleId":"1732","severity":1,"message":"1882","line":24,"column":75,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":86},{"ruleId":"1732","severity":1,"message":"1883","line":25,"column":19,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1795","line":26,"column":8,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1884","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1885","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1886","line":31,"column":8,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":34,"column":10,"nodeType":"1734","messageId":"1735","endLine":34,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":35,"column":8,"nodeType":"1734","messageId":"1735","endLine":35,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1887","line":128,"column":10,"nodeType":"1734","messageId":"1735","endLine":128,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1888","line":129,"column":10,"nodeType":"1734","messageId":"1735","endLine":129,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1796","line":130,"column":10,"nodeType":"1734","messageId":"1735","endLine":130,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1845","line":132,"column":9,"nodeType":"1734","messageId":"1735","endLine":132,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1846","line":136,"column":9,"nodeType":"1734","messageId":"1735","endLine":136,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1889","line":141,"column":40,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":53},{"ruleId":"1732","severity":1,"message":"1890","line":141,"column":55,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":62},{"ruleId":"1732","severity":1,"message":"1891","line":141,"column":63,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":73},{"ruleId":"1732","severity":1,"message":"1892","line":141,"column":74,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":82},{"ruleId":"1732","severity":1,"message":"1893","line":141,"column":83,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":93},{"ruleId":"1732","severity":1,"message":"1894","line":141,"column":109,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":119},{"ruleId":"1732","severity":1,"message":"1895","line":141,"column":120,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":129},{"ruleId":"1732","severity":1,"message":"1896","line":141,"column":130,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":137},{"ruleId":"1732","severity":1,"message":"1897","line":141,"column":138,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":148},{"ruleId":"1732","severity":1,"message":"1898","line":141,"column":157,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":165},{"ruleId":"1732","severity":1,"message":"1899","line":141,"column":167,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":174},{"ruleId":"1732","severity":1,"message":"1900","line":146,"column":10,"nodeType":"1734","messageId":"1735","endLine":146,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1901","line":149,"column":10,"nodeType":"1734","messageId":"1735","endLine":149,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1902","line":150,"column":10,"nodeType":"1734","messageId":"1735","endLine":150,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1903","line":151,"column":10,"nodeType":"1734","messageId":"1735","endLine":151,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1904","line":153,"column":10,"nodeType":"1734","messageId":"1735","endLine":153,"endColumn":14},{"ruleId":"1749","severity":1,"message":"1750","line":156,"column":14,"nodeType":"1751","endLine":169,"endColumn":4},{"ruleId":"1732","severity":1,"message":"1752","line":158,"column":9,"nodeType":"1734","messageId":"1735","endLine":158,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1905","line":169,"column":6,"nodeType":"1754","endLine":169,"endColumn":8,"suggestions":"1906"},{"ruleId":"1732","severity":1,"message":"1907","line":291,"column":9,"nodeType":"1734","messageId":"1735","endLine":291,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1908","line":380,"column":9,"nodeType":"1734","messageId":"1735","endLine":380,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1909","line":405,"column":5,"nodeType":"1734","messageId":"1735","endLine":405,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1910","line":418,"column":9,"nodeType":"1734","messageId":"1735","endLine":418,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1911","line":431,"column":10,"nodeType":"1734","messageId":"1735","endLine":431,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1912","line":13,"column":8,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1913","line":67,"column":11,"nodeType":"1734","messageId":"1735","endLine":67,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1752","line":100,"column":13,"nodeType":"1734","messageId":"1735","endLine":100,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1914","line":104,"column":8,"nodeType":"1754","endLine":104,"endColumn":10,"suggestions":"1915"},{"ruleId":"1749","severity":1,"message":"1750","line":144,"column":15,"nodeType":"1751","endLine":148,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":145,"column":13,"nodeType":"1734","messageId":"1735","endLine":145,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1916","line":148,"column":8,"nodeType":"1754","endLine":148,"endColumn":10,"suggestions":"1917"},{"ruleId":"1732","severity":1,"message":"1918","line":167,"column":9,"nodeType":"1734","messageId":"1735","endLine":167,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1764","line":11,"column":10,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1919","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"1920"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":67,"column":13,"nodeType":"1734","messageId":"1735","endLine":67,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1921","line":71,"column":8,"nodeType":"1754","endLine":71,"endColumn":10,"suggestions":"1922"},{"ruleId":"1749","severity":1,"message":"1750","line":167,"column":15,"nodeType":"1751","endLine":171,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":168,"column":13,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1923","line":171,"column":8,"nodeType":"1754","endLine":171,"endColumn":10,"suggestions":"1924"},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1925","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"1926"},{"ruleId":"1732","severity":1,"message":"1818","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1819","line":16,"column":8,"nodeType":"1734","messageId":"1735","endLine":16,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1765","line":21,"column":8,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1927","line":85,"column":31,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":43},{"ruleId":"1732","severity":1,"message":"1820","line":85,"column":45,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":53},{"ruleId":"1732","severity":1,"message":"1928","line":85,"column":54,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1796","line":86,"column":12,"nodeType":"1734","messageId":"1735","endLine":86,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":88,"column":12,"nodeType":"1734","messageId":"1735","endLine":88,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":89,"column":12,"nodeType":"1734","messageId":"1735","endLine":89,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":94,"column":15,"nodeType":"1751","endLine":98,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":95,"column":13,"nodeType":"1734","messageId":"1735","endLine":95,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1929","line":98,"column":8,"nodeType":"1754","endLine":98,"endColumn":10,"suggestions":"1930"},{"ruleId":"1732","severity":1,"message":"1931","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1775","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1794","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1752","line":222,"column":13,"nodeType":"1734","messageId":"1735","endLine":222,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1932","line":230,"column":8,"nodeType":"1754","endLine":230,"endColumn":10,"suggestions":"1933"},{"ruleId":"1732","severity":1,"message":"1792","line":234,"column":17,"nodeType":"1734","messageId":"1735","endLine":234,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1934","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1780","line":1,"column":27,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":36},{"ruleId":"1732","severity":1,"message":"1935","line":23,"column":11,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":18},{"ruleId":"1936","severity":1,"message":"1937","line":32,"column":58,"nodeType":"1938","messageId":"1769","endLine":32,"endColumn":64},{"ruleId":"1732","severity":1,"message":"1939","line":27,"column":50,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":55},{"ruleId":"1732","severity":1,"message":"1940","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1934","line":1,"column":27,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1780","line":1,"column":37,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":46},{"ruleId":"1732","severity":1,"message":"1838","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1805","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":19},{"ruleId":"1941","severity":1,"message":"1942","line":13,"column":16,"nodeType":"1943","messageId":"1769","endLine":13,"endColumn":18},{"ruleId":"1941","severity":1,"message":"1942","line":15,"column":23,"nodeType":"1943","messageId":"1769","endLine":15,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1797","line":87,"column":10,"nodeType":"1734","messageId":"1735","endLine":87,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1798","line":88,"column":10,"nodeType":"1734","messageId":"1735","endLine":88,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1752","line":105,"column":9,"nodeType":"1734","messageId":"1735","endLine":105,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1944","line":108,"column":6,"nodeType":"1754","endLine":108,"endColumn":10,"suggestions":"1945"},{"ruleId":"1732","severity":1,"message":"1882","line":2,"column":87,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":98},{"ruleId":"1732","severity":1,"message":"1946","line":79,"column":18,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1947","line":80,"column":12,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1948","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1949","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1950","line":83,"column":23,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1951","line":90,"column":11,"nodeType":"1734","messageId":"1735","endLine":90,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1952","line":94,"column":11,"nodeType":"1734","messageId":"1735","endLine":94,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1752","line":127,"column":13,"nodeType":"1734","messageId":"1735","endLine":127,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":130,"column":8,"nodeType":"1754","endLine":130,"endColumn":10,"suggestions":"1953"},{"ruleId":"1732","severity":1,"message":"1835","line":2,"column":10,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1836","line":2,"column":17,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1837","line":2,"column":28,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":37},{"ruleId":"1732","severity":1,"message":"1838","line":2,"column":39,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1839","line":2,"column":46,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":54},{"ruleId":"1732","severity":1,"message":"1840","line":2,"column":56,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1954","line":2,"column":100,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":104},{"ruleId":"1732","severity":1,"message":"1764","line":3,"column":10,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1765","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1843","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1785","line":21,"column":8,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1955","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1956","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1841","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1842","line":25,"column":8,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1775","line":26,"column":8,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1957","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1844","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1794","line":31,"column":8,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1887","line":94,"column":12,"nodeType":"1734","messageId":"1735","endLine":94,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1888","line":95,"column":12,"nodeType":"1734","messageId":"1735","endLine":95,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1939","line":97,"column":21,"nodeType":"1734","messageId":"1735","endLine":97,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1845","line":99,"column":11,"nodeType":"1734","messageId":"1735","endLine":99,"endColumn":27},{"ruleId":"1732","severity":1,"message":"1846","line":103,"column":11,"nodeType":"1734","messageId":"1735","endLine":103,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1958","line":112,"column":22,"nodeType":"1734","messageId":"1735","endLine":112,"endColumn":33},{"ruleId":"1732","severity":1,"message":"1752","line":156,"column":13,"nodeType":"1734","messageId":"1735","endLine":156,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1855","line":159,"column":8,"nodeType":"1754","endLine":159,"endColumn":14,"suggestions":"1959"},{"ruleId":"1732","severity":1,"message":"1848","line":173,"column":11,"nodeType":"1734","messageId":"1735","endLine":173,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1960","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1934","line":1,"column":25,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":33},{"ruleId":"1732","severity":1,"message":"1961","line":34,"column":17,"nodeType":"1734","messageId":"1735","endLine":34,"endColumn":24},{"ruleId":"1749","severity":1,"message":"1962","line":37,"column":8,"nodeType":"1754","endLine":37,"endColumn":10,"suggestions":"1963"},{"ruleId":"1732","severity":1,"message":"1964","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1965","line":5,"column":9,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1966","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1828","line":3,"column":21,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":30},{"ruleId":"1732","severity":1,"message":"1967","line":3,"column":32,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":42},{"ruleId":"1732","severity":1,"message":"1968","line":6,"column":10,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1969","line":50,"column":11,"nodeType":"1734","messageId":"1735","endLine":50,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1948","line":52,"column":12,"nodeType":"1734","messageId":"1735","endLine":52,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1939","line":56,"column":40,"nodeType":"1734","messageId":"1735","endLine":56,"endColumn":45},{"ruleId":"1749","severity":1,"message":"1750","line":59,"column":15,"nodeType":"1751","endLine":70,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":60,"column":13,"nodeType":"1734","messageId":"1735","endLine":60,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1970","line":70,"column":8,"nodeType":"1754","endLine":70,"endColumn":23,"suggestions":"1971"},{"ruleId":"1732","severity":1,"message":"1972","line":75,"column":9,"nodeType":"1734","messageId":"1735","endLine":75,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1973","line":76,"column":9,"nodeType":"1734","messageId":"1735","endLine":76,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1909","line":77,"column":9,"nodeType":"1734","messageId":"1735","endLine":77,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1762","line":78,"column":9,"nodeType":"1734","messageId":"1735","endLine":78,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1792","line":106,"column":23,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":31},{"ruleId":"1974","severity":1,"message":"1975","line":193,"column":84,"nodeType":"1976","messageId":"1977","endLine":193,"endColumn":113,"fix":"1978"},{"ruleId":"1974","severity":1,"message":"1979","line":210,"column":84,"nodeType":"1976","messageId":"1977","endLine":210,"endColumn":121,"fix":"1980"},{"ruleId":"1974","severity":1,"message":"1981","line":227,"column":84,"nodeType":"1976","messageId":"1977","endLine":227,"endColumn":117,"fix":"1982"},{"ruleId":"1732","severity":1,"message":"1939","line":5,"column":30,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1793","line":21,"column":10,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1983","line":84,"column":7,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":27},{"ruleId":"1732","severity":1,"message":"1796","line":104,"column":12,"nodeType":"1734","messageId":"1735","endLine":104,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":106,"column":12,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":107,"column":12,"nodeType":"1734","messageId":"1735","endLine":107,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1984","line":111,"column":18,"nodeType":"1734","messageId":"1735","endLine":111,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1985","line":112,"column":25,"nodeType":"1734","messageId":"1735","endLine":112,"endColumn":39},{"ruleId":"1749","severity":1,"message":"1750","line":117,"column":15,"nodeType":"1751","endLine":121,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":118,"column":13,"nodeType":"1734","messageId":"1735","endLine":118,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1799","line":121,"column":8,"nodeType":"1754","endLine":121,"endColumn":10,"suggestions":"1986"},{"ruleId":"1732","severity":1,"message":"1848","line":180,"column":11,"nodeType":"1734","messageId":"1735","endLine":180,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1752","line":220,"column":13,"nodeType":"1734","messageId":"1735","endLine":220,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":228,"column":8,"nodeType":"1754","endLine":228,"endColumn":10,"suggestions":"1987"},{"ruleId":"1988","severity":1,"message":"1989","line":343,"column":29,"nodeType":"1990","endLine":343,"endColumn":33},{"ruleId":"1732","severity":1,"message":"1991","line":4,"column":10,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1992","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":24},{"ruleId":"1732","severity":1,"message":"1993","line":8,"column":7,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":16},{"ruleId":"1749","severity":1,"message":"1750","line":130,"column":14,"nodeType":"1751","endLine":136,"endColumn":4},{"ruleId":"1732","severity":1,"message":"1752","line":132,"column":9,"nodeType":"1734","messageId":"1735","endLine":132,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1994","line":136,"column":6,"nodeType":"1754","endLine":136,"endColumn":8,"suggestions":"1995"},{"ruleId":"1732","severity":1,"message":"1765","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1843","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1825","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1864","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1865","line":31,"column":9,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1830","line":33,"column":10,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1950","line":121,"column":23,"nodeType":"1734","messageId":"1735","endLine":121,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1866","line":123,"column":30,"nodeType":"1734","messageId":"1735","endLine":123,"endColumn":49},{"ruleId":"1732","severity":1,"message":"1867","line":124,"column":12,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1868","line":124,"column":21,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1752","line":214,"column":13,"nodeType":"1734","messageId":"1735","endLine":214,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":222,"column":8,"nodeType":"1754","endLine":222,"endColumn":10,"suggestions":"1996"},{"ruleId":"1732","severity":1,"message":"1792","line":226,"column":17,"nodeType":"1734","messageId":"1735","endLine":226,"endColumn":25},{"ruleId":"1941","severity":1,"message":"1942","line":258,"column":22,"nodeType":"1943","messageId":"1769","endLine":258,"endColumn":24},{"ruleId":"1997","severity":1,"message":"1998","line":259,"column":29,"nodeType":"1999","messageId":"2000","endLine":259,"endColumn":30,"suggestions":"2001"},{"ruleId":"1732","severity":1,"message":"1765","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1883","line":4,"column":19,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"2002","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1912","line":13,"column":8,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":16},{"ruleId":"1732","severity":1,"message":"2003","line":55,"column":12,"nodeType":"1734","messageId":"1735","endLine":55,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1797","line":59,"column":12,"nodeType":"1734","messageId":"1735","endLine":59,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":60,"column":12,"nodeType":"1734","messageId":"1735","endLine":60,"endColumn":17},{"ruleId":"1732","severity":1,"message":"2004","line":62,"column":11,"nodeType":"1734","messageId":"1735","endLine":62,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1752","line":101,"column":13,"nodeType":"1734","messageId":"1735","endLine":101,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1914","line":105,"column":8,"nodeType":"1754","endLine":105,"endColumn":10,"suggestions":"2005"},{"ruleId":"1749","severity":1,"message":"1750","line":145,"column":15,"nodeType":"1751","endLine":149,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":146,"column":13,"nodeType":"1734","messageId":"1735","endLine":146,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1916","line":149,"column":8,"nodeType":"1754","endLine":149,"endColumn":10,"suggestions":"2006"},{"ruleId":"1732","severity":1,"message":"1918","line":168,"column":9,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1733","line":14,"column":8,"nodeType":"1734","messageId":"1735","endLine":14,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1736","line":17,"column":8,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1737","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1738","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1739","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1740","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1741","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1742","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1743","line":64,"column":17,"nodeType":"1734","messageId":"1735","endLine":64,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1744","line":79,"column":12,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1745","line":80,"column":11,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1746","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1747","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1748","line":10,"column":8,"nodeType":"1734","messageId":"1735","endLine":10,"endColumn":21},{"ruleId":"1749","severity":1,"message":"1750","line":52,"column":15,"nodeType":"1751","endLine":56,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":53,"column":13,"nodeType":"1734","messageId":"1735","endLine":53,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1753","line":56,"column":8,"nodeType":"1754","endLine":56,"endColumn":10,"suggestions":"2007"},{"ruleId":"1749","severity":1,"message":"1750","line":110,"column":15,"nodeType":"1751","endLine":114,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":111,"column":13,"nodeType":"1734","messageId":"1735","endLine":111,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1783","line":114,"column":8,"nodeType":"1754","endLine":114,"endColumn":10,"suggestions":"2008"},{"ruleId":"1732","severity":1,"message":"1763","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":19},{"ruleId":"1766","severity":1,"message":"1767","line":35,"column":19,"nodeType":"1768","messageId":"1769","endLine":35,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1752","line":57,"column":9,"nodeType":"1734","messageId":"1735","endLine":57,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1774","line":120,"column":17,"nodeType":"1734","messageId":"1735","endLine":120,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1756","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1775","line":9,"column":29,"nodeType":"1734","messageId":"1735","endLine":9,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1776","line":18,"column":7,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1752","line":52,"column":9,"nodeType":"1734","messageId":"1735","endLine":52,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1777","line":55,"column":6,"nodeType":"1754","endLine":55,"endColumn":8,"suggestions":"2009"},{"ruleId":"1732","severity":1,"message":"1764","line":3,"column":10,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1765","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":16},{"ruleId":"1766","severity":1,"message":"1767","line":18,"column":21,"nodeType":"1768","messageId":"1769","endLine":18,"endColumn":24},{"ruleId":"1732","severity":1,"message":"1770","line":19,"column":11,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1752","line":79,"column":13,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1771","line":101,"column":8,"nodeType":"1754","endLine":101,"endColumn":10,"suggestions":"2010"},{"ruleId":"1732","severity":1,"message":"1773","line":106,"column":11,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1774","line":135,"column":21,"nodeType":"1734","messageId":"1735","endLine":135,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1780","line":1,"column":27,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":36},{"ruleId":"1732","severity":1,"message":"1775","line":9,"column":29,"nodeType":"1734","messageId":"1735","endLine":9,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1781","line":14,"column":8,"nodeType":"1734","messageId":"1735","endLine":14,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1782","line":51,"column":9,"nodeType":"1734","messageId":"1735","endLine":51,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1761","line":74,"column":19,"nodeType":"1734","messageId":"1735","endLine":74,"endColumn":28},{"ruleId":"1732","severity":1,"message":"1785","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1786","line":25,"column":8,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1787","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1788","line":28,"column":10,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1789","line":107,"column":11,"nodeType":"1734","messageId":"1735","endLine":107,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1752","line":152,"column":13,"nodeType":"1734","messageId":"1735","endLine":152,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1790","line":155,"column":8,"nodeType":"1754","endLine":155,"endColumn":10,"suggestions":"2011"},{"ruleId":"1732","severity":1,"message":"1792","line":159,"column":17,"nodeType":"1734","messageId":"1735","endLine":159,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1756","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1757","line":36,"column":10,"nodeType":"1734","messageId":"1735","endLine":36,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1758","line":36,"column":17,"nodeType":"1734","messageId":"1735","endLine":36,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1759","line":37,"column":10,"nodeType":"1734","messageId":"1735","endLine":37,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1760","line":37,"column":20,"nodeType":"1734","messageId":"1735","endLine":37,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1761","line":101,"column":5,"nodeType":"1734","messageId":"1735","endLine":101,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1762","line":105,"column":5,"nodeType":"1734","messageId":"1735","endLine":105,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1779","line":3,"column":10,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":86,"column":12,"nodeType":"1734","messageId":"1735","endLine":86,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":91,"column":15,"nodeType":"1751","endLine":95,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":92,"column":13,"nodeType":"1734","messageId":"1735","endLine":92,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1799","line":95,"column":8,"nodeType":"1754","endLine":95,"endColumn":10,"suggestions":"2012"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1912","line":13,"column":8,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1913","line":67,"column":11,"nodeType":"1734","messageId":"1735","endLine":67,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1752","line":100,"column":13,"nodeType":"1734","messageId":"1735","endLine":100,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1914","line":104,"column":8,"nodeType":"1754","endLine":104,"endColumn":10,"suggestions":"2013"},{"ruleId":"1749","severity":1,"message":"1750","line":144,"column":15,"nodeType":"1751","endLine":148,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":145,"column":13,"nodeType":"1734","messageId":"1735","endLine":145,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1916","line":148,"column":8,"nodeType":"1754","endLine":148,"endColumn":10,"suggestions":"2014"},{"ruleId":"1732","severity":1,"message":"1918","line":167,"column":9,"nodeType":"1734","messageId":"1735","endLine":167,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1825","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1864","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1865","line":31,"column":9,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1830","line":33,"column":10,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1866","line":123,"column":30,"nodeType":"1734","messageId":"1735","endLine":123,"endColumn":49},{"ruleId":"1732","severity":1,"message":"1867","line":124,"column":12,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1868","line":124,"column":21,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1752","line":201,"column":13,"nodeType":"1734","messageId":"1735","endLine":201,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":209,"column":8,"nodeType":"1754","endLine":209,"endColumn":10,"suggestions":"2015"},{"ruleId":"1732","severity":1,"message":"1792","line":213,"column":17,"nodeType":"1734","messageId":"1735","endLine":213,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1793","line":21,"column":10,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1983","line":84,"column":7,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":27},{"ruleId":"1732","severity":1,"message":"1796","line":104,"column":12,"nodeType":"1734","messageId":"1735","endLine":104,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":106,"column":12,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":107,"column":12,"nodeType":"1734","messageId":"1735","endLine":107,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1984","line":111,"column":18,"nodeType":"1734","messageId":"1735","endLine":111,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1985","line":112,"column":25,"nodeType":"1734","messageId":"1735","endLine":112,"endColumn":39},{"ruleId":"1749","severity":1,"message":"1750","line":117,"column":15,"nodeType":"1751","endLine":121,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":118,"column":13,"nodeType":"1734","messageId":"1735","endLine":118,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1799","line":121,"column":8,"nodeType":"1754","endLine":121,"endColumn":10,"suggestions":"2016"},{"ruleId":"1732","severity":1,"message":"1848","line":180,"column":11,"nodeType":"1734","messageId":"1735","endLine":180,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1752","line":220,"column":13,"nodeType":"1734","messageId":"1735","endLine":220,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":228,"column":8,"nodeType":"1754","endLine":228,"endColumn":10,"suggestions":"2017"},{"ruleId":"1988","severity":1,"message":"1989","line":343,"column":29,"nodeType":"1990","endLine":343,"endColumn":33},{"ruleId":"1732","severity":1,"message":"1825","line":17,"column":8,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1740","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1879","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1880","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1764","line":21,"column":10,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1841","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1842","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1835","line":24,"column":10,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1836","line":24,"column":17,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1837","line":24,"column":28,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":37},{"ruleId":"1732","severity":1,"message":"1838","line":24,"column":39,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1839","line":24,"column":46,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":54},{"ruleId":"1732","severity":1,"message":"1840","line":24,"column":56,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1881","line":24,"column":67,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":73},{"ruleId":"1732","severity":1,"message":"1882","line":24,"column":75,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":86},{"ruleId":"1732","severity":1,"message":"1883","line":25,"column":19,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1795","line":26,"column":8,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1884","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1885","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1886","line":31,"column":8,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":34,"column":10,"nodeType":"1734","messageId":"1735","endLine":34,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":35,"column":8,"nodeType":"1734","messageId":"1735","endLine":35,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1887","line":128,"column":10,"nodeType":"1734","messageId":"1735","endLine":128,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1888","line":129,"column":10,"nodeType":"1734","messageId":"1735","endLine":129,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1796","line":130,"column":10,"nodeType":"1734","messageId":"1735","endLine":130,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1845","line":132,"column":9,"nodeType":"1734","messageId":"1735","endLine":132,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1846","line":136,"column":9,"nodeType":"1734","messageId":"1735","endLine":136,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1889","line":141,"column":40,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":53},{"ruleId":"1732","severity":1,"message":"1890","line":141,"column":55,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":62},{"ruleId":"1732","severity":1,"message":"1891","line":141,"column":63,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":73},{"ruleId":"1732","severity":1,"message":"1892","line":141,"column":74,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":82},{"ruleId":"1732","severity":1,"message":"1893","line":141,"column":83,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":93},{"ruleId":"1732","severity":1,"message":"1894","line":141,"column":109,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":119},{"ruleId":"1732","severity":1,"message":"1895","line":141,"column":120,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":129},{"ruleId":"1732","severity":1,"message":"1896","line":141,"column":130,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":137},{"ruleId":"1732","severity":1,"message":"1897","line":141,"column":138,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":148},{"ruleId":"1732","severity":1,"message":"1898","line":141,"column":157,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":165},{"ruleId":"1732","severity":1,"message":"1899","line":141,"column":167,"nodeType":"1734","messageId":"1735","endLine":141,"endColumn":174},{"ruleId":"1732","severity":1,"message":"1900","line":146,"column":10,"nodeType":"1734","messageId":"1735","endLine":146,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1901","line":149,"column":10,"nodeType":"1734","messageId":"1735","endLine":149,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1902","line":150,"column":10,"nodeType":"1734","messageId":"1735","endLine":150,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1903","line":151,"column":10,"nodeType":"1734","messageId":"1735","endLine":151,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1904","line":153,"column":10,"nodeType":"1734","messageId":"1735","endLine":153,"endColumn":14},{"ruleId":"1749","severity":1,"message":"1750","line":156,"column":14,"nodeType":"1751","endLine":169,"endColumn":4},{"ruleId":"1732","severity":1,"message":"1752","line":158,"column":9,"nodeType":"1734","messageId":"1735","endLine":158,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1905","line":169,"column":6,"nodeType":"1754","endLine":169,"endColumn":8,"suggestions":"2018"},{"ruleId":"1732","severity":1,"message":"1907","line":291,"column":9,"nodeType":"1734","messageId":"1735","endLine":291,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1908","line":380,"column":9,"nodeType":"1734","messageId":"1735","endLine":380,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1909","line":405,"column":5,"nodeType":"1734","messageId":"1735","endLine":405,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1910","line":418,"column":9,"nodeType":"1734","messageId":"1735","endLine":418,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1911","line":431,"column":10,"nodeType":"1734","messageId":"1735","endLine":431,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1765","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1883","line":4,"column":19,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"2002","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1912","line":13,"column":8,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":16},{"ruleId":"1732","severity":1,"message":"2003","line":55,"column":12,"nodeType":"1734","messageId":"1735","endLine":55,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1797","line":60,"column":12,"nodeType":"1734","messageId":"1735","endLine":60,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":61,"column":12,"nodeType":"1734","messageId":"1735","endLine":61,"endColumn":17},{"ruleId":"1732","severity":1,"message":"2004","line":63,"column":11,"nodeType":"1734","messageId":"1735","endLine":63,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1752","line":102,"column":13,"nodeType":"1734","messageId":"1735","endLine":102,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1914","line":106,"column":8,"nodeType":"1754","endLine":106,"endColumn":10,"suggestions":"2019"},{"ruleId":"1749","severity":1,"message":"1750","line":152,"column":15,"nodeType":"1751","endLine":156,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":153,"column":13,"nodeType":"1734","messageId":"1735","endLine":153,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1916","line":156,"column":8,"nodeType":"1754","endLine":156,"endColumn":10,"suggestions":"2020"},{"ruleId":"1732","severity":1,"message":"1918","line":175,"column":9,"nodeType":"1734","messageId":"1735","endLine":175,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1919","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"2021"},{"ruleId":"1749","severity":1,"message":"1750","line":168,"column":15,"nodeType":"1751","endLine":172,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":169,"column":13,"nodeType":"1734","messageId":"1735","endLine":169,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1851","line":172,"column":8,"nodeType":"1754","endLine":172,"endColumn":10,"suggestions":"2022"},{"ruleId":"1732","severity":1,"message":"1765","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1843","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1825","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1864","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1865","line":31,"column":10,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1830","line":33,"column":10,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1950","line":121,"column":23,"nodeType":"1734","messageId":"1735","endLine":121,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1866","line":123,"column":30,"nodeType":"1734","messageId":"1735","endLine":123,"endColumn":49},{"ruleId":"1732","severity":1,"message":"1867","line":124,"column":12,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1868","line":124,"column":21,"nodeType":"1734","messageId":"1735","endLine":124,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1752","line":214,"column":13,"nodeType":"1734","messageId":"1735","endLine":214,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":222,"column":8,"nodeType":"1754","endLine":222,"endColumn":10,"suggestions":"2023"},{"ruleId":"1732","severity":1,"message":"1792","line":226,"column":17,"nodeType":"1734","messageId":"1735","endLine":226,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":73,"column":13,"nodeType":"1734","messageId":"1735","endLine":73,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1808","line":77,"column":8,"nodeType":"1754","endLine":77,"endColumn":10,"suggestions":"2024"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":73,"column":13,"nodeType":"1734","messageId":"1735","endLine":73,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1814","line":77,"column":8,"nodeType":"1754","endLine":77,"endColumn":10,"suggestions":"2025"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":66,"column":13,"nodeType":"1734","messageId":"1735","endLine":66,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1803","line":70,"column":8,"nodeType":"1754","endLine":70,"endColumn":10,"suggestions":"2026"},{"ruleId":"1749","severity":1,"message":"1750","line":167,"column":15,"nodeType":"1751","endLine":171,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":168,"column":13,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1823","line":171,"column":8,"nodeType":"1754","endLine":171,"endColumn":10,"suggestions":"2027"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":66,"column":13,"nodeType":"1734","messageId":"1735","endLine":66,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1812","line":70,"column":8,"nodeType":"1754","endLine":70,"endColumn":10,"suggestions":"2028"},{"ruleId":"1732","severity":1,"message":"1805","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":80,"column":12,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":88,"column":15,"nodeType":"1751","endLine":92,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":89,"column":13,"nodeType":"1734","messageId":"1735","endLine":89,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1806","line":92,"column":8,"nodeType":"1754","endLine":92,"endColumn":10,"suggestions":"2029"},{"ruleId":"1749","severity":1,"message":"1750","line":167,"column":15,"nodeType":"1751","endLine":171,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":168,"column":13,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1816","line":171,"column":8,"nodeType":"1754","endLine":171,"endColumn":10,"suggestions":"2030"},{"ruleId":"1732","severity":1,"message":"1818","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1819","line":16,"column":8,"nodeType":"1734","messageId":"1735","endLine":16,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1820","line":81,"column":76,"nodeType":"1734","messageId":"1735","endLine":81,"endColumn":84},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1821","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"2031"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1857","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1858","line":13,"column":10,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1859","line":16,"column":7,"nodeType":"1734","messageId":"1735","endLine":16,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1752","line":79,"column":13,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1860","line":83,"column":8,"nodeType":"1754","endLine":83,"endColumn":10,"suggestions":"2032"},{"ruleId":"1732","severity":1,"message":"1818","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1819","line":16,"column":8,"nodeType":"1734","messageId":"1735","endLine":16,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1765","line":21,"column":8,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1927","line":85,"column":31,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":43},{"ruleId":"1732","severity":1,"message":"1820","line":85,"column":45,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":53},{"ruleId":"1732","severity":1,"message":"1928","line":85,"column":54,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1796","line":86,"column":12,"nodeType":"1734","messageId":"1735","endLine":86,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":88,"column":12,"nodeType":"1734","messageId":"1735","endLine":88,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":89,"column":12,"nodeType":"1734","messageId":"1735","endLine":89,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":94,"column":15,"nodeType":"1751","endLine":98,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":95,"column":13,"nodeType":"1734","messageId":"1735","endLine":95,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1929","line":98,"column":8,"nodeType":"1754","endLine":98,"endColumn":10,"suggestions":"2033"},{"ruleId":"1732","severity":1,"message":"1833","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1775","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1794","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1752","line":227,"column":13,"nodeType":"1734","messageId":"1735","endLine":227,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1831","line":232,"column":8,"nodeType":"1754","endLine":232,"endColumn":10,"suggestions":"2034"},{"ruleId":"1732","severity":1,"message":"1792","line":236,"column":17,"nodeType":"1734","messageId":"1735","endLine":236,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1931","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1775","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1794","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1752","line":222,"column":13,"nodeType":"1734","messageId":"1735","endLine":222,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1932","line":230,"column":8,"nodeType":"1754","endLine":230,"endColumn":10,"suggestions":"2035"},{"ruleId":"1732","severity":1,"message":"1792","line":234,"column":17,"nodeType":"1734","messageId":"1735","endLine":234,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1991","line":4,"column":10,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":31},{"ruleId":"1732","severity":1,"message":"1992","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":24},{"ruleId":"1732","severity":1,"message":"1993","line":8,"column":7,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":16},{"ruleId":"1732","severity":1,"message":"2036","line":79,"column":10,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":132,"column":13,"nodeType":"1751","endLine":138,"endColumn":4},{"ruleId":"1732","severity":1,"message":"1752","line":134,"column":9,"nodeType":"1734","messageId":"1735","endLine":134,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1994","line":138,"column":6,"nodeType":"1754","endLine":138,"endColumn":8,"suggestions":"2037"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1857","line":12,"column":8,"nodeType":"1734","messageId":"1735","endLine":12,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1871","line":14,"column":10,"nodeType":"1734","messageId":"1735","endLine":14,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1859","line":17,"column":7,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1752","line":88,"column":13,"nodeType":"1734","messageId":"1735","endLine":88,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1872","line":92,"column":8,"nodeType":"1754","endLine":92,"endColumn":10,"suggestions":"2038"},{"ruleId":"1732","severity":1,"message":"1805","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":80,"column":12,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":88,"column":15,"nodeType":"1751","endLine":92,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":89,"column":13,"nodeType":"1734","messageId":"1735","endLine":89,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1810","line":92,"column":8,"nodeType":"1754","endLine":92,"endColumn":10,"suggestions":"2039"},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1862","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"2040"},{"ruleId":"1732","severity":1,"message":"1740","line":15,"column":8,"nodeType":"1734","messageId":"1735","endLine":15,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1796","line":140,"column":12,"nodeType":"1734","messageId":"1735","endLine":140,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1874","line":140,"column":22,"nodeType":"1734","messageId":"1735","endLine":140,"endColumn":31},{"ruleId":"1749","severity":1,"message":"1750","line":247,"column":15,"nodeType":"1751","endLine":255,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":248,"column":13,"nodeType":"1734","messageId":"1735","endLine":248,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1875","line":255,"column":8,"nodeType":"1754","endLine":255,"endColumn":10,"suggestions":"2041"},{"ruleId":"1732","severity":1,"message":"1764","line":11,"column":10,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1752","line":164,"column":13,"nodeType":"1734","messageId":"1735","endLine":164,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1855","line":167,"column":8,"nodeType":"1754","endLine":167,"endColumn":10,"suggestions":"2042"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":67,"column":13,"nodeType":"1734","messageId":"1735","endLine":67,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1853","line":71,"column":8,"nodeType":"1754","endLine":71,"endColumn":10,"suggestions":"2043"},{"ruleId":"1732","severity":1,"message":"1764","line":11,"column":10,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1798","line":13,"column":12,"nodeType":"1734","messageId":"1735","endLine":13,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1752","line":42,"column":13,"nodeType":"1734","messageId":"1735","endLine":42,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1877","line":45,"column":8,"nodeType":"1754","endLine":45,"endColumn":10,"suggestions":"2044"},{"ruleId":"1749","severity":1,"message":"1750","line":168,"column":15,"nodeType":"1751","endLine":172,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":169,"column":13,"nodeType":"1734","messageId":"1735","endLine":169,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1801","line":172,"column":8,"nodeType":"1754","endLine":172,"endColumn":10,"suggestions":"2045"},{"ruleId":"1732","severity":1,"message":"1835","line":2,"column":10,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1836","line":2,"column":17,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1837","line":2,"column":28,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":37},{"ruleId":"1732","severity":1,"message":"1838","line":2,"column":39,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1839","line":2,"column":46,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":54},{"ruleId":"1732","severity":1,"message":"1840","line":2,"column":56,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1775","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1795","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1841","line":25,"column":8,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1842","line":26,"column":8,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1843","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1785","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1765","line":31,"column":8,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1844","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1794","line":33,"column":8,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1845","line":106,"column":11,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":27},{"ruleId":"1732","severity":1,"message":"1846","line":110,"column":11,"nodeType":"1734","messageId":"1735","endLine":110,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1847","line":119,"column":20,"nodeType":"1734","messageId":"1735","endLine":119,"endColumn":29},{"ruleId":"1732","severity":1,"message":"1848","line":143,"column":11,"nodeType":"1734","messageId":"1735","endLine":143,"endColumn":20},{"ruleId":"1749","severity":1,"message":"1750","line":172,"column":15,"nodeType":"1751","endLine":176,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":173,"column":13,"nodeType":"1734","messageId":"1735","endLine":173,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1849","line":176,"column":8,"nodeType":"1754","endLine":176,"endColumn":10,"suggestions":"2046"},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1752","line":67,"column":13,"nodeType":"1734","messageId":"1735","endLine":67,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1921","line":71,"column":8,"nodeType":"1754","endLine":71,"endColumn":10,"suggestions":"2047"},{"ruleId":"1732","severity":1,"message":"1793","line":17,"column":10,"nodeType":"1734","messageId":"1735","endLine":17,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1794","line":18,"column":8,"nodeType":"1734","messageId":"1735","endLine":18,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1796","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1797","line":84,"column":12,"nodeType":"1734","messageId":"1735","endLine":84,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1798","line":85,"column":12,"nodeType":"1734","messageId":"1735","endLine":85,"endColumn":17},{"ruleId":"1749","severity":1,"message":"1750","line":90,"column":15,"nodeType":"1751","endLine":94,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":91,"column":13,"nodeType":"1734","messageId":"1735","endLine":91,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1925","line":94,"column":8,"nodeType":"1754","endLine":94,"endColumn":10,"suggestions":"2048"},{"ruleId":"1732","severity":1,"message":"1765","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1825","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1785","line":8,"column":8,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1775","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1827","line":29,"column":8,"nodeType":"1734","messageId":"1735","endLine":29,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1793","line":30,"column":21,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1829","line":32,"column":10,"nodeType":"1734","messageId":"1735","endLine":32,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1830","line":33,"column":10,"nodeType":"1734","messageId":"1735","endLine":33,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1752","line":242,"column":13,"nodeType":"1734","messageId":"1735","endLine":242,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1831","line":250,"column":8,"nodeType":"1754","endLine":250,"endColumn":10,"suggestions":"2049"},{"ruleId":"1732","severity":1,"message":"1792","line":254,"column":17,"nodeType":"1734","messageId":"1735","endLine":254,"endColumn":25},{"ruleId":"1749","severity":1,"message":"1750","line":167,"column":15,"nodeType":"1751","endLine":171,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":168,"column":13,"nodeType":"1734","messageId":"1735","endLine":168,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1923","line":171,"column":8,"nodeType":"1754","endLine":171,"endColumn":10,"suggestions":"2050"},{"ruleId":"1732","severity":1,"message":"1934","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1780","line":1,"column":27,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":36},{"ruleId":"1732","severity":1,"message":"1935","line":23,"column":11,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":18},{"ruleId":"1936","severity":1,"message":"1937","line":32,"column":58,"nodeType":"1938","messageId":"1769","endLine":32,"endColumn":64},{"ruleId":"1732","severity":1,"message":"1939","line":27,"column":50,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":55},{"ruleId":"1732","severity":1,"message":"1960","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1934","line":1,"column":25,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":33},{"ruleId":"1732","severity":1,"message":"1961","line":34,"column":17,"nodeType":"1734","messageId":"1735","endLine":34,"endColumn":24},{"ruleId":"1749","severity":1,"message":"1962","line":37,"column":8,"nodeType":"1754","endLine":37,"endColumn":10,"suggestions":"2051"},{"ruleId":"1732","severity":1,"message":"1940","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1934","line":1,"column":27,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1780","line":1,"column":37,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":46},{"ruleId":"1732","severity":1,"message":"1838","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1805","line":6,"column":8,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":19},{"ruleId":"1941","severity":1,"message":"1942","line":13,"column":16,"nodeType":"1943","messageId":"1769","endLine":13,"endColumn":18},{"ruleId":"1941","severity":1,"message":"1942","line":15,"column":23,"nodeType":"1943","messageId":"1769","endLine":15,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1797","line":87,"column":10,"nodeType":"1734","messageId":"1735","endLine":87,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1798","line":88,"column":10,"nodeType":"1734","messageId":"1735","endLine":88,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1752","line":105,"column":9,"nodeType":"1734","messageId":"1735","endLine":105,"endColumn":18},{"ruleId":"1749","severity":1,"message":"1944","line":108,"column":6,"nodeType":"1754","endLine":108,"endColumn":10,"suggestions":"2052"},{"ruleId":"1732","severity":1,"message":"1882","line":2,"column":87,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":98},{"ruleId":"1732","severity":1,"message":"1946","line":79,"column":18,"nodeType":"1734","messageId":"1735","endLine":79,"endColumn":25},{"ruleId":"1732","severity":1,"message":"1947","line":80,"column":12,"nodeType":"1734","messageId":"1735","endLine":80,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1948","line":82,"column":12,"nodeType":"1734","messageId":"1735","endLine":82,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1949","line":83,"column":12,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1950","line":83,"column":23,"nodeType":"1734","messageId":"1735","endLine":83,"endColumn":35},{"ruleId":"1732","severity":1,"message":"1951","line":90,"column":11,"nodeType":"1734","messageId":"1735","endLine":90,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1952","line":94,"column":11,"nodeType":"1734","messageId":"1735","endLine":94,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1752","line":127,"column":13,"nodeType":"1734","messageId":"1735","endLine":127,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1869","line":130,"column":8,"nodeType":"1754","endLine":130,"endColumn":10,"suggestions":"2053"},{"ruleId":"1732","severity":1,"message":"1966","line":1,"column":17,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1828","line":3,"column":21,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":30},{"ruleId":"1732","severity":1,"message":"1967","line":3,"column":32,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":42},{"ruleId":"1732","severity":1,"message":"1968","line":6,"column":10,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1964","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1965","line":5,"column":9,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1835","line":2,"column":10,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1836","line":2,"column":17,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1837","line":2,"column":28,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":37},{"ruleId":"1732","severity":1,"message":"1838","line":2,"column":39,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1839","line":2,"column":46,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":54},{"ruleId":"1732","severity":1,"message":"1840","line":2,"column":56,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":65},{"ruleId":"1732","severity":1,"message":"1954","line":2,"column":100,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":104},{"ruleId":"1732","severity":1,"message":"1764","line":3,"column":10,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1765","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1795","line":19,"column":8,"nodeType":"1734","messageId":"1735","endLine":19,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1843","line":20,"column":8,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1785","line":21,"column":8,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1955","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1956","line":23,"column":8,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1841","line":24,"column":8,"nodeType":"1734","messageId":"1735","endLine":24,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1842","line":25,"column":8,"nodeType":"1734","messageId":"1735","endLine":25,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1775","line":26,"column":8,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1826","line":27,"column":8,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1957","line":28,"column":8,"nodeType":"1734","messageId":"1735","endLine":28,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1844","line":30,"column":10,"nodeType":"1734","messageId":"1735","endLine":30,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1794","line":31,"column":8,"nodeType":"1734","messageId":"1735","endLine":31,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1887","line":94,"column":12,"nodeType":"1734","messageId":"1735","endLine":94,"endColumn":16},{"ruleId":"1732","severity":1,"message":"1888","line":95,"column":12,"nodeType":"1734","messageId":"1735","endLine":95,"endColumn":23},{"ruleId":"1732","severity":1,"message":"1939","line":97,"column":21,"nodeType":"1734","messageId":"1735","endLine":97,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1845","line":99,"column":11,"nodeType":"1734","messageId":"1735","endLine":99,"endColumn":27},{"ruleId":"1732","severity":1,"message":"1846","line":103,"column":11,"nodeType":"1734","messageId":"1735","endLine":103,"endColumn":34},{"ruleId":"1732","severity":1,"message":"1958","line":112,"column":22,"nodeType":"1734","messageId":"1735","endLine":112,"endColumn":33},{"ruleId":"1732","severity":1,"message":"1752","line":156,"column":13,"nodeType":"1734","messageId":"1735","endLine":156,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1855","line":159,"column":8,"nodeType":"1754","endLine":159,"endColumn":14,"suggestions":"2054"},{"ruleId":"1732","severity":1,"message":"1848","line":173,"column":11,"nodeType":"1734","messageId":"1735","endLine":173,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1775","line":5,"column":29,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1969","line":50,"column":11,"nodeType":"1734","messageId":"1735","endLine":50,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1948","line":52,"column":12,"nodeType":"1734","messageId":"1735","endLine":52,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1939","line":56,"column":40,"nodeType":"1734","messageId":"1735","endLine":56,"endColumn":45},{"ruleId":"1749","severity":1,"message":"1750","line":59,"column":15,"nodeType":"1751","endLine":70,"endColumn":6},{"ruleId":"1732","severity":1,"message":"1752","line":60,"column":13,"nodeType":"1734","messageId":"1735","endLine":60,"endColumn":22},{"ruleId":"1749","severity":1,"message":"1970","line":70,"column":8,"nodeType":"1754","endLine":70,"endColumn":23,"suggestions":"2055"},{"ruleId":"1732","severity":1,"message":"1972","line":75,"column":9,"nodeType":"1734","messageId":"1735","endLine":75,"endColumn":15},{"ruleId":"1732","severity":1,"message":"1973","line":76,"column":9,"nodeType":"1734","messageId":"1735","endLine":76,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1909","line":77,"column":9,"nodeType":"1734","messageId":"1735","endLine":77,"endColumn":26},{"ruleId":"1732","severity":1,"message":"1762","line":78,"column":9,"nodeType":"1734","messageId":"1735","endLine":78,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1792","line":106,"column":23,"nodeType":"1734","messageId":"1735","endLine":106,"endColumn":31},{"ruleId":"1974","severity":1,"message":"1975","line":193,"column":84,"nodeType":"1976","messageId":"1977","endLine":193,"endColumn":113,"fix":"2056"},{"ruleId":"1974","severity":1,"message":"1979","line":210,"column":84,"nodeType":"1976","messageId":"1977","endLine":210,"endColumn":121,"fix":"2057"},{"ruleId":"1974","severity":1,"message":"1981","line":227,"column":84,"nodeType":"1976","messageId":"1977","endLine":227,"endColumn":117,"fix":"2058"},{"ruleId":"1732","severity":1,"message":"1939","line":5,"column":30,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":35},"no-native-reassign",["2059"],"no-negated-in-lhs",["2060"],"no-unused-vars","'HomeWork' is defined but never used.","Identifier","unusedVar","'HomeIcon' is defined but never used.","'NewspaperIcon' is defined but never used.","'LocationOnIcon' is defined but never used.","'BiotechIcon' is defined but never used.","'VisibilityIcon' is defined but never used.","'LinkIcon' is defined but never used.","'ViewKanbanIcon' is defined but never used.","'setValue' is assigned a value but never used.","'test' is defined but never used.","'type' is assigned a value but never used.","'MenuIcon' is defined but never used.","'clsx' is defined but never used.","'AccountCircle' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'unmounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'headerName'. Either include it or remove the dependency array.","ArrayExpression",["2061"],"'logo' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setValues' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'FileManager' is defined but never used.","'Link' is defined but never used.","'Controls' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["2062"],"'roleItems' is assigned a value but never used.","'data' is assigned a value but never used.","'Box' is defined but never used.","'typeItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFactor'. Either include it or remove the dependency array.",["2063"],"'Redirect' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["2064"],"'ModeEditIcon' is defined but never used.","'Modal' is defined but never used.","'Test' is defined but never used.","'resolveCname' is defined but never used.","'handleOpenUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllUsers'. Either include it or remove the dependency array.",["2065"],"'response' is assigned a value but never used.","'CSVDownloader' is defined but never used.","'DownloadIcon' is defined but never used.","'Tooltip' is defined but never used.","'toExport' is assigned a value but never used.","'open' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProgram'. Either include it or remove the dependency array.",["2066"],"React Hook useEffect has a missing dependency: 'getAllOrganizations'. Either include it or remove the dependency array.",["2067"],"React Hook useEffect has missing dependencies: 'getEvidence' and 'id'. Either include them or remove the dependency array.",["2068"],"'CardActions' is defined but never used.","React Hook useEffect has a missing dependency: 'getResource'. Either include it or remove the dependency array.",["2069"],"React Hook useEffect has missing dependencies: 'getOrganization' and 'id'. Either include them or remove the dependency array.",["2070"],"React Hook useEffect has a missing dependency: 'getEvidence'. Either include it or remove the dependency array.",["2071"],"React Hook useEffect has missing dependencies: 'getResource' and 'id'. Either include them or remove the dependency array.",["2072"],"React Hook useEffect has missing dependencies: 'getProgram' and 'id'. Either include them or remove the dependency array.",["2073"],"React Hook useEffect has a missing dependency: 'getAllResources'. Either include it or remove the dependency array.",["2074"],"'CardMedia' is defined but never used.","'defaultImg' is defined but never used.","'projects' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTask'. Either include it or remove the dependency array.",["2075"],"React Hook useEffect has a missing dependency: 'getAllEvidences'. Either include it or remove the dependency array.",["2076"],"'AddIcon' is defined but never used.","'Typography' is defined but never used.","'Download' is defined but never used.","'jsonToCSV' is defined but never used.","'version' is defined but never used.","'render' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllReports'. Either include it or remove the dependency array.",["2077"],"'ReportIcon' is defined but never used.",["2078"],"'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TablePagination' is defined but never used.","'DeleteIcon' is defined but never used.","'CSVLink' is defined but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'setBlogId' is assigned a value but never used.","'csvReport' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllBlogs'. Either include it or remove the dependency array.",["2079"],"React Hook useEffect has a missing dependency: 'getAllPrograms'. Either include it or remove the dependency array.",["2080"],"React Hook useEffect has missing dependencies: 'getBlog' and 'id'. Either include them or remove the dependency array.",["2081"],"React Hook useEffect has a missing dependency: 'getAllFactors'. Either include it or remove the dependency array.",["2082"],"'Alert' is defined but never used.","'getTasks' is defined but never used.","'predictionItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTask' and 'id'. Either include them or remove the dependency array.",["2083"],"React Hook useEffect has a missing dependency: 'getBlog'. Either include it or remove the dependency array.",["2084"],"'LogoutIcon' is defined but never used.","'getUsers' is defined but never used.","'setCurrentUserRoles' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllProjects'. Either include it or remove the dependency array.",["2085"],"'getReports' is defined but never used.","React Hook useEffect has missing dependencies: 'getReport' and 'id'. Either include them or remove the dependency array.",["2086"],"'setExport' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bid', 'getAllData', 'getAllFactors', and 'userType'. Either include them or remove the dependency array.",["2087"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["2088"],"'BarChartIcon' is defined but never used.","'ProgramIcon' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'Form' is defined but never used.","'Autocomplete' is defined but never used.","'TextField' is defined but never used.","'ViewFactors' is defined but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'justification' is assigned a value but never used.","'country' is assigned a value but never used.","'department' is assigned a value but never used.","'district' is assigned a value but never used.","'definition' is assigned a value but never used.","'percentage' is assigned a value but never used.","'totalDays' is assigned a value but never used.","'nowDays' is assigned a value but never used.","'totalTasks' is assigned a value but never used.","'programs' is assigned a value but never used.","'factors' is assigned a value but never used.","'loadingAso' is assigned a value but never used.","'isProgramsBio' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","'programImage' is assigned a value but never used.","'role' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFilteredPrograms', 'getProgramsBio', 'getProject', 'id', and 'userType'. Either include them or remove the dependency array.",["2089"],"'getPictureProgram' is assigned a value but never used.","'associateProgram' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'MenuItem' is defined but never used.","'Calendar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProject' and 'id'. Either include them or remove the dependency array.",["2090"],"React Hook useEffect has a missing dependency: 'getLabName'. Either include it or remove the dependency array.",["2091"],"'avaValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrganization'. Either include it or remove the dependency array.",["2092"],"React Hook useEffect has missing dependencies: 'getNotice' and 'id'. Either include them or remove the dependency array.",["2093"],"React Hook useEffect has a missing dependency: 'getAllNotices'. Either include it or remove the dependency array.",["2094"],"React Hook useEffect has a missing dependency: 'getNotice'. Either include it or remove the dependency array.",["2095"],"'isTimeSeries' is assigned a value but never used.","'notesReport' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["2096"],"'TaskIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllTasks'. Either include it or remove the dependency array.",["2097"],"'useState' is defined but never used.","'classes' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'other' is assigned a value but never used.","'Fragment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'getProgramsBio'. Either include it or remove the dependency array.",["2098"],"'setOpen' is assigned a value but never used.","'openDialog' is assigned a value but never used.","'loading' is assigned a value but never used.","'projectId' is assigned a value but never used.","'setProjectId' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleAccept' is assigned a value but never used.",["2099"],"'Grid' is defined but never used.","'InfoIcon' is defined but never used.","'PageHeader' is defined but never used.","'ButtonBase' is defined but never used.","'setFactorId' is assigned a value but never used.",["2100"],"'useRef' is defined but never used.","'boxplot' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configs' and 'indexes'. Either include them or remove the dependency array.",["2101"],"'React' is defined but never used.","'fileInfo' is defined but never used.","'Component' is defined but never used.","'readString' is defined but never used.","'addData' is defined but never used.","'inputRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["2102"],"'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"export\"] found.","Property","unnecessarilyComputedProperty",{"range":"2103","text":"2104"},"Unnecessarily computed property [\"editFactor\"] found.",{"range":"2105","text":"2106"},"Unnecessarily computed property [\"editData\"] found.",{"range":"2107","text":"2108"},"'initialProyectValues' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.",["2109"],["2110"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'CalendlyEventListener' is defined but never used.","'CalendarTemplate' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProject' and 'prefilInfo'. Either include them or remove the dependency array.",["2111"],["2112"],"no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["2113","2114"],"'AlertMessage' is defined but never used.","'labName' is assigned a value but never used.","'message' is assigned a value but never used.",["2115"],["2116"],["2117"],["2118"],["2119"],["2120"],["2121"],["2122"],["2123"],["2124"],["2125"],["2126"],["2127"],["2128"],["2129"],["2130"],["2131"],["2132"],["2133"],["2134"],["2135"],["2136"],["2137"],["2138"],["2139"],["2140"],["2141"],["2142"],["2143"],["2144"],["2145"],"'project' is assigned a value but never used.",["2146"],["2147"],["2148"],["2149"],["2150"],["2151"],["2152"],["2153"],["2154"],["2155"],["2156"],["2157"],["2158"],["2159"],["2160"],["2161"],["2162"],["2163"],["2164"],{"range":"2165","text":"2104"},{"range":"2166","text":"2106"},{"range":"2167","text":"2108"},"no-global-assign","no-unsafe-negation",{"desc":"2168","fix":"2169"},{"desc":"2170","fix":"2171"},{"desc":"2172","fix":"2173"},{"desc":"2174","fix":"2175"},{"desc":"2176","fix":"2177"},{"desc":"2178","fix":"2179"},{"desc":"2180","fix":"2181"},{"desc":"2182","fix":"2183"},{"desc":"2184","fix":"2185"},{"desc":"2186","fix":"2187"},{"desc":"2188","fix":"2189"},{"desc":"2190","fix":"2191"},{"desc":"2192","fix":"2193"},{"desc":"2194","fix":"2195"},{"desc":"2196","fix":"2197"},{"desc":"2198","fix":"2199"},{"desc":"2200","fix":"2201"},{"desc":"2200","fix":"2202"},{"desc":"2203","fix":"2204"},{"desc":"2205","fix":"2206"},{"desc":"2207","fix":"2208"},{"desc":"2209","fix":"2210"},{"desc":"2211","fix":"2212"},{"desc":"2213","fix":"2214"},{"desc":"2215","fix":"2216"},{"desc":"2217","fix":"2218"},{"desc":"2219","fix":"2220"},{"desc":"2221","fix":"2222"},{"desc":"2223","fix":"2224"},{"desc":"2225","fix":"2226"},{"desc":"2227","fix":"2228"},{"desc":"2229","fix":"2230"},{"desc":"2231","fix":"2232"},{"desc":"2233","fix":"2234"},{"desc":"2235","fix":"2236"},{"desc":"2237","fix":"2238"},{"desc":"2239","fix":"2240"},{"desc":"2241","fix":"2242"},{"desc":"2215","fix":"2243"},{"desc":"2244","fix":"2245"},{"desc":"2246","fix":"2247"},{"desc":"2248","fix":"2249"},[6797,6807],"\"export\"",[7604,7618],"\"editFactor\"",[8412,8424],"\"editData\"",{"desc":"2178","fix":"2250"},{"desc":"2215","fix":"2251"},{"desc":"2252","fix":"2253"},{"desc":"2215","fix":"2254"},{"messageId":"2255","fix":"2256","desc":"2257"},{"messageId":"2258","fix":"2259","desc":"2260"},{"desc":"2225","fix":"2261"},{"desc":"2227","fix":"2262"},{"desc":"2168","fix":"2263"},{"desc":"2174","fix":"2264"},{"desc":"2172","fix":"2265"},{"desc":"2170","fix":"2266"},{"desc":"2176","fix":"2267"},{"desc":"2178","fix":"2268"},{"desc":"2225","fix":"2269"},{"desc":"2227","fix":"2270"},{"desc":"2215","fix":"2271"},{"desc":"2178","fix":"2272"},{"desc":"2215","fix":"2273"},{"desc":"2223","fix":"2274"},{"desc":"2225","fix":"2275"},{"desc":"2227","fix":"2276"},{"desc":"2229","fix":"2277"},{"desc":"2205","fix":"2278"},{"desc":"2215","fix":"2279"},{"desc":"2186","fix":"2280"},{"desc":"2192","fix":"2281"},{"desc":"2182","fix":"2282"},{"desc":"2198","fix":"2283"},{"desc":"2190","fix":"2284"},{"desc":"2184","fix":"2285"},{"desc":"2194","fix":"2286"},{"desc":"2196","fix":"2287"},{"desc":"2211","fix":"2288"},{"desc":"2237","fix":"2289"},{"desc":"2200","fix":"2290"},{"desc":"2239","fix":"2291"},{"desc":"2252","fix":"2292"},{"desc":"2217","fix":"2293"},{"desc":"2188","fix":"2294"},{"desc":"2213","fix":"2295"},{"desc":"2219","fix":"2296"},{"desc":"2209","fix":"2297"},{"desc":"2207","fix":"2298"},{"desc":"2221","fix":"2299"},{"desc":"2180","fix":"2300"},{"desc":"2203","fix":"2301"},{"desc":"2231","fix":"2302"},{"desc":"2235","fix":"2303"},{"desc":"2200","fix":"2304"},{"desc":"2233","fix":"2305"},{"desc":"2246","fix":"2306"},{"desc":"2241","fix":"2307"},{"desc":"2215","fix":"2308"},{"desc":"2244","fix":"2309"},{"desc":"2248","fix":"2310"},[6797,6807],[7604,7618],[8412,8424],"Update the dependencies array to be: [headerName]",{"range":"2311","text":"2312"},"Update the dependencies array to be: [config]",{"range":"2313","text":"2314"},"Update the dependencies array to be: [getFactor]",{"range":"2315","text":"2316"},"Update the dependencies array to be: [getUser]",{"range":"2317","text":"2318"},"Update the dependencies array to be: [getAllUsers]",{"range":"2319","text":"2320"},"Update the dependencies array to be: [getProgram]",{"range":"2321","text":"2322"},"Update the dependencies array to be: [getAllOrganizations]",{"range":"2323","text":"2324"},"Update the dependencies array to be: [getEvidence, id]",{"range":"2325","text":"2326"},"Update the dependencies array to be: [getResource]",{"range":"2327","text":"2328"},"Update the dependencies array to be: [getOrganization, id]",{"range":"2329","text":"2330"},"Update the dependencies array to be: [getEvidence]",{"range":"2331","text":"2332"},"Update the dependencies array to be: [getResource, id]",{"range":"2333","text":"2334"},"Update the dependencies array to be: [getProgram, id]",{"range":"2335","text":"2336"},"Update the dependencies array to be: [getAllResources]",{"range":"2337","text":"2338"},"Update the dependencies array to be: [getTask]",{"range":"2339","text":"2340"},"Update the dependencies array to be: [getAllEvidences]",{"range":"2341","text":"2342"},"Update the dependencies array to be: [getAllReports]",{"range":"2343","text":"2344"},{"range":"2345","text":"2344"},"Update the dependencies array to be: [getAllBlogs]",{"range":"2346","text":"2347"},"Update the dependencies array to be: [getAllPrograms]",{"range":"2348","text":"2349"},"Update the dependencies array to be: [getBlog, id]",{"range":"2350","text":"2351"},"Update the dependencies array to be: [getAllFactors]",{"range":"2352","text":"2353"},"Update the dependencies array to be: [getTask, id]",{"range":"2354","text":"2355"},"Update the dependencies array to be: [getBlog]",{"range":"2356","text":"2357"},"Update the dependencies array to be: [getAllProjects]",{"range":"2358","text":"2359"},"Update the dependencies array to be: [getReport, id]",{"range":"2360","text":"2361"},"Update the dependencies array to be: [bid, getAllData, getAllFactors, userType]",{"range":"2362","text":"2363"},"Update the dependencies array to be: [getData]",{"range":"2364","text":"2365"},"Update the dependencies array to be: [getFilteredPrograms, getProgramsBio, getProject, id, userType]",{"range":"2366","text":"2367"},"Update the dependencies array to be: [getProject, id]",{"range":"2368","text":"2369"},"Update the dependencies array to be: [getLabName]",{"range":"2370","text":"2371"},"Update the dependencies array to be: [getOrganization]",{"range":"2372","text":"2373"},"Update the dependencies array to be: [getNotice, id]",{"range":"2374","text":"2375"},"Update the dependencies array to be: [getAllNotices]",{"range":"2376","text":"2377"},"Update the dependencies array to be: [getNotice]",{"range":"2378","text":"2379"},"Update the dependencies array to be: [getReport]",{"range":"2380","text":"2381"},"Update the dependencies array to be: [getAllTasks]",{"range":"2382","text":"2383"},"Update the dependencies array to be: [getProgramsBio, id]",{"range":"2384","text":"2385"},{"range":"2386","text":"2359"},"Update the dependencies array to be: [getAllFactors, role]",{"range":"2387","text":"2388"},"Update the dependencies array to be: [configs, indexes]",{"range":"2389","text":"2390"},"Update the dependencies array to be: [userId, openM, setValues]",{"range":"2391","text":"2392"},{"range":"2393","text":"2322"},{"range":"2394","text":"2359"},"Update the dependencies array to be: [getProject, prefilInfo]",{"range":"2395","text":"2396"},{"range":"2397","text":"2359"},"removeEscape",{"range":"2398","text":"2399"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2400","text":"2401"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2402","text":"2369"},{"range":"2403","text":"2371"},{"range":"2404","text":"2312"},{"range":"2405","text":"2318"},{"range":"2406","text":"2316"},{"range":"2407","text":"2314"},{"range":"2408","text":"2320"},{"range":"2409","text":"2322"},{"range":"2410","text":"2369"},{"range":"2411","text":"2371"},{"range":"2412","text":"2359"},{"range":"2413","text":"2322"},{"range":"2414","text":"2359"},{"range":"2415","text":"2367"},{"range":"2416","text":"2369"},{"range":"2417","text":"2371"},{"range":"2418","text":"2373"},{"range":"2419","text":"2349"},{"range":"2420","text":"2359"},{"range":"2421","text":"2330"},{"range":"2422","text":"2336"},{"range":"2423","text":"2326"},{"range":"2424","text":"2342"},{"range":"2425","text":"2334"},{"range":"2426","text":"2328"},{"range":"2427","text":"2338"},{"range":"2428","text":"2340"},{"range":"2429","text":"2355"},{"range":"2430","text":"2381"},{"range":"2431","text":"2344"},{"range":"2432","text":"2383"},{"range":"2433","text":"2396"},{"range":"2434","text":"2361"},{"range":"2435","text":"2332"},{"range":"2436","text":"2357"},{"range":"2437","text":"2363"},{"range":"2438","text":"2353"},{"range":"2439","text":"2351"},{"range":"2440","text":"2365"},{"range":"2441","text":"2324"},{"range":"2442","text":"2347"},{"range":"2443","text":"2375"},{"range":"2444","text":"2379"},{"range":"2445","text":"2344"},{"range":"2446","text":"2377"},{"range":"2447","text":"2390"},{"range":"2448","text":"2385"},{"range":"2449","text":"2359"},{"range":"2450","text":"2388"},{"range":"2451","text":"2392"},[1564,1566],"[headerName]",[3304,3306],"[config]",[1658,1660],"[getFactor]",[3640,3642],"[getUser]",[4661,4663],"[getAllUsers]",[2560,2562],"[getProgram]",[5039,5041],"[getAllOrganizations]",[2324,2326],"[getEvidence, id]",[2440,2442],"[getResource]",[2760,2762],"[getOrganization, id]",[2457,2459],"[getEvidence]",[2280,2282],"[getResource, id]",[2704,2706],"[getProgram, id]",[4879,4881],"[getAllResources]",[2548,2550],"[getTask]",[4895,4897],"[getAllEvidences]",[6759,6761],"[getAllReports]",[6618,6620],[5087,5089],"[getAllBlogs]",[4948,4950],"[getAllPrograms]",[2285,2287],"[getBlog, id]",[5567,5569],"[getAllFactors]",[2679,2681],"[getTask, id]",[2466,2468],"[getBlog]",[5929,5931],"[getAllProjects]",[3074,3076],"[getReport, id]",[8483,8485],"[bid, getAllData, getAllFactors, userType]",[1497,1499],"[getData]",[4937,4939],"[getFilteredPrograms, getProgramsBio, getProject, id, userType]",[3010,3012],"[getProject, id]",[4541,4543],"[getLabName]",[2587,2589],"[getOrganization]",[2309,2311],"[getNotice, id]",[4849,4851],"[getAllNotices]",[2476,2478],"[getNotice]",[2636,2638],"[getReport]",[6397,6399],"[getAllTasks]",[2510,2514],"[getProgramsBio, id]",[3489,3491],[4814,4820],"[getAllFactors, role]",[1043,1045],"[configs, indexes]",[2135,2150],"[userId, openM, setValues]",[3263,3265],[6132,6134],[2729,2731],"[getProject, prefilInfo]",[6459,6461],[7445,7446],"",[7445,7445],"\\",[3067,3069],[4598,4600],[1564,1566],[3640,3642],[1658,1660],[3304,3306],[4661,4663],[2560,2562],[3010,3012],[4541,4543],[5929,5931],[3263,3265],[6132,6134],[4937,4939],[3119,3121],[4806,4808],[2587,2589],[4948,4950],[6400,6402],[2760,2762],[2704,2706],[2324,2326],[4895,4897],[2280,2282],[2440,2442],[4879,4881],[2548,2550],[2679,2681],[2636,2638],[6618,6620],[6397,6399],[2945,2947],[3074,3076],[2457,2459],[2466,2468],[8483,8485],[5567,5569],[2285,2287],[1497,1499],[5039,5041],[5087,5089],[2309,2311],[2476,2478],[6759,6761],[4849,4851],[1043,1045],[2510,2514],[3489,3491],[4814,4820],[2135,2150]]